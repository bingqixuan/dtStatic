import{y as n,a0 as s,Z as r,d as i,n as c}from"./vendor.d5f590a2.js";import{o as l}from"./queryEngineUtils.7d264cc5.js";import"./DimensioningAnalysisView3D.e774f95e.js";import"./LineVisualElement.55229a10.js";import"./analysisViewUtils.9ade0446.js";import"./PointVisualElement.1e9a2ddb.js";import"./RightAngleQuadVisualElement.5169ec5f.js";import"./Segment.0dc98287.js";import"./elevationInfoUtils.88c6b152.js";import"./dragEventPipeline3D.87e2abf7.js";import"./EditGeometryOperations.b7cecc1f.js";import"./QueryEngineResult.f4c92a8d.js";import"./WhereClause.b4219540.js";import"./utils.636e4519.js";import"./ClassBreaksDefinition.662b56be.js";import"./json.d1a0fa35.js";let e=class extends n{constructor(t){super(t)}get availability(){return 1}refresh(){}async fetchCandidates(t,a){const o=this.layerSource.layer.source;return o.querySnapping?(await o.querySnapping({distance:t.distance,point:t.coordinateHelper.vectorToPoint(t.point).toJSON(),types:t.types,query:s(t.filter)?t.filter.createQuery().toJSON():{where:"1=1"}},{signal:a})).candidates.map(p=>l(p,t.coordinateHelper,t.elevationInfo)):[]}};r([i({constructOnly:!0})],e.prototype,"layerSource",void 0),r([i({readOnly:!0})],e.prototype,"availability",null),e=r([c("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],e);export{e as FeatureCollectionSnappingSource};
