import{il as a,Y as o,g as s,a2 as n,Z as e,d as r,cU as d,n as l}from"./vendor.d5f590a2.js";import{p}from"./I3SMeshView3D.653e7b62.js";import{n as c}from"./LayerView3D.62b80713.js";import{u as h}from"./LayerView.1c740ad8.js";import"./I3SAttributeOverrides.daf14289.js";import"./I3SNode.ce2d5c66.js";import"./SceneModification.fc289c3b.js";import"./persistable.1f5489a1.js";import"./multiOriginJSONSupportUtils.8128aa52.js";import"./Graphics3DScaleVisibility.63b5c5e0.js";import"./optimizedFeatureQueryEngineAdapter.25ca2118.js";import"./centroid.154267fd.js";import"./SceneLayerWorker.13036660.js";import"./attributeUtils.99d8ee08.js";const m=.2;let t=class extends p(c(h)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get progressiveLoadFactor(){return this.lodFactor>=1?m:1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),n(this.layer.modifications))return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};e([r()],t.prototype,"layer",void 0),e([r({aliasOf:"layer"})],t.prototype,"i3slayer",void 0),e([r(d)],t.prototype,"updatingProgress",void 0),e([r({readOnly:!0,aliasOf:"_controller.updatingProgress"})],t.prototype,"updatingProgressValue",void 0),e([r({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],t.prototype,"lodFactor",void 0),e([r({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=e([l("esri.views.3d.layers.SceneLayerView3D")],t);const x=t;export{x as default};
