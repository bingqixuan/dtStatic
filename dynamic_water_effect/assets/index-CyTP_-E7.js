function _0x2b1f(_0x2f2754,_0xc0700d){const _0x484a28=_0x484a();return _0x2b1f=function(_0x2b1f58,_0x4d10e3){_0x2b1f58=_0x2b1f58-0x105;let _0x535090=_0x484a28[_0x2b1f58];return _0x535090;},_0x2b1f(_0x2f2754,_0xc0700d);}const _0x35da69=_0x2b1f;(function(_0x1b8f07,_0x473e5a){const _0xdfa8c8=_0x2b1f,_0x244185=_0x1b8f07();while(!![]){try{const _0x55414f=-parseInt(_0xdfa8c8(0x112))/0x1+parseInt(_0xdfa8c8(0x106))/0x2+-parseInt(_0xdfa8c8(0x109))/0x3*(parseInt(_0xdfa8c8(0x105))/0x4)+-parseInt(_0xdfa8c8(0x115))/0x5*(parseInt(_0xdfa8c8(0x110))/0x6)+-parseInt(_0xdfa8c8(0x113))/0x7*(parseInt(_0xdfa8c8(0x117))/0x8)+parseInt(_0xdfa8c8(0x10c))/0x9*(-parseInt(_0xdfa8c8(0x111))/0xa)+parseInt(_0xdfa8c8(0x10e))/0xb*(parseInt(_0xdfa8c8(0x10d))/0xc);if(_0x55414f===_0x473e5a)break;else _0x244185['push'](_0x244185['shift']());}catch(_0x3422c2){_0x244185['push'](_0x244185['shift']());}}}(_0x484a,0x8e71b));const domainName=window['location'][_0x35da69(0x10f)];if(!domainName['includes'](_0x35da69(0x107))){console[_0x35da69(0x10a)](_0x35da69(0x114));for(let i=0x0;i<0xa;i++){alert(_0x35da69(0x116));}window[_0x35da69(0x10b)]=_0x35da69(0x108);}function _0x484a(){const _0x37218c=['1290CljsyE','132008JArmRU','608818KhknQL','l\x20is\x20not\x20defined','2552330TTvumr','kkk???error!!!','32UNPVPz','4PRmrPD','579330AkumJL','bing','http://dt.sim3d.cn','2774091VNSOOa','error','location','69291PnXCXa','19212144OwyNlP','22xoMkvG','hostname','6QVkmXo'];_0x484a=function(){return _0x37218c;};return _0x484a();}
import{S as _0x2e69e8,P as _0x2e7b6f,W as _0xfa822d,N as _0xadf8ce,C as _0x17ab69,T as _0x370fba,O as _0x1c9443,a as _0x296107,b as _0x1adcd0,c as _0xc59c98,D,M as _0x254ffb,A as _0x5af30a,d as _0x4f15fa,e as _0x39eb38}from'./vendor-modules-DdvRUuEF.js';(function(){const _0x3e0e4c={'sisVB':function(_0x59087e,_0x5e531b){return _0x59087e===_0x5e531b;},'kVhwB':'childList','mbPUv':'LINK','mluqG':'modulepreload','flwia':function(_0x53bd93,_0x303654){return _0x53bd93(_0x303654);},'EQoGg':function(_0x1d4d4a,_0x4fa62f){return _0x1d4d4a===_0x4fa62f;},'UdNjl':'use-credentials','TpeEn':'include','uxFAs':function(_0x2b5b65,_0x4336b5){return _0x2b5b65===_0x4336b5;},'fVrqK':'anonymous','dNkVq':'omit','jqJMP':'same-origin','bMbrs':'(((.+)+)+)+$','vFgOW':function(_0x43630c,_0x1da8e2,_0x498f50){return _0x43630c(_0x1da8e2,_0x498f50);},'cBxoK':function(_0x586f84){return _0x586f84();},'xuOKd':function(_0x10d65c,_0xcca7de,_0x206e3c){return _0x10d65c(_0xcca7de,_0x206e3c);},'hGCgP':'link','uisHB':'link[rel=\x22modulepreload\x22]','DGvDN':function(_0xa18fe3,_0x18999e){return _0xa18fe3(_0x18999e);}},_0x415fa5=(function(){let _0x315fa9=!![];return function(_0x2bbf84,_0x30f5ae){const _0x4dfa71=_0x315fa9?function(){if(_0x30f5ae){const _0x3e72fb=_0x30f5ae['apply'](_0x2bbf84,arguments);return _0x30f5ae=null,_0x3e72fb;}}:function(){};return _0x315fa9=![],_0x4dfa71;};}()),_0xf8faee=document['createElement'](_0x3e0e4c['hGCgP'])['relList'];if(_0xf8faee&&_0xf8faee['supports']&&_0xf8faee['supports'](_0x3e0e4c['mluqG']))return;for(const _0x114391 of document['querySelectorAll'](_0x3e0e4c['uisHB']))_0x3e0e4c['DGvDN'](_0x205335,_0x114391);new MutationObserver(_0x3d0339=>{for(const _0x589949 of _0x3d0339)if(_0x3e0e4c['sisVB'](_0x589949['type'],_0x3e0e4c['kVhwB'])){for(const _0x78d8a6 of _0x589949['addedNodes'])_0x3e0e4c['sisVB'](_0x78d8a6['tagName'],_0x3e0e4c['mbPUv'])&&_0x3e0e4c['sisVB'](_0x78d8a6['rel'],_0x3e0e4c['mluqG'])&&_0x3e0e4c['flwia'](_0x205335,_0x78d8a6);}})['observe'](document,{'childList':!0x0,'subtree':!0x0});function _0x489093(_0xfd8cf5){const _0xae8bab={};return _0xfd8cf5['integrity']&&(_0xae8bab['integrity']=_0xfd8cf5['integrity']),_0xfd8cf5['referrerPolicy']&&(_0xae8bab['referrerPolicy']=_0xfd8cf5['referrerPolicy']),_0x3e0e4c['EQoGg'](_0xfd8cf5['crossOrigin'],_0x3e0e4c['UdNjl'])?_0xae8bab['credentials']=_0x3e0e4c['TpeEn']:_0x3e0e4c['uxFAs'](_0xfd8cf5['crossOrigin'],_0x3e0e4c['fVrqK'])?_0xae8bab['credentials']=_0x3e0e4c['dNkVq']:_0xae8bab['credentials']=_0x3e0e4c['jqJMP'],_0xae8bab;}function _0x205335(_0x450736){const _0x1c7956=_0x3e0e4c['vFgOW'](_0x415fa5,this,function(){return _0x1c7956['toString']()['search'](_0x3e0e4c['bMbrs'])['toString']()['constructor'](_0x1c7956)['search'](_0x3e0e4c['bMbrs']);});_0x3e0e4c['cBxoK'](_0x1c7956);if(_0x450736['ep'])return;_0x450736['ep']=!0x0;const _0x762bec=_0x3e0e4c['flwia'](_0x489093,_0x450736);_0x3e0e4c['xuOKd'](fetch,_0x450736['href'],_0x762bec);}}());const q='uniform\x20float\x20uTime;\x0a\x0auniform\x20float\x20uWavesAmplitude;\x0auniform\x20float\x20uWavesSpeed;\x0auniform\x20float\x20uWavesFrequency;\x0auniform\x20float\x20uWavesPersistence;\x0auniform\x20float\x20uWavesLacunarity;\x0auniform\x20float\x20uWavesIterations;\x0a\x0avarying\x20vec2\x20vUv;\x0avarying\x20vec3\x20vNormal;\x0avarying\x20vec3\x20vWorldPosition;\x0a\x0a//\x20Simplex\x202D\x20noise\x0avec3\x20mod289(vec3\x20x)\x20{\x0a\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;\x0a}\x0a\x0avec2\x20mod289(vec2\x20x)\x20{\x0a\x20\x20return\x20x\x20-\x20floor(x\x20*\x20(1.0\x20/\x20289.0))\x20*\x20289.0;\x0a}\x0a\x0avec3\x20permute(vec3\x20x)\x20{\x0a\x20\x20return\x20mod289(((x\x20*\x2034.0)\x20+\x201.0)\x20*\x20x);\x0a}\x0a\x0afloat\x20snoise(vec2\x20v)\x20{\x0a\x20\x20const\x20vec4\x20C\x20=\x20vec4(0.211324865405187,\x20\x20//\x20(3.0-sqrt(3.0))/6.0\x0a\x20\x200.366025403784439,\x20\x20//\x200.5*(sqrt(3.0)-1.0)\x0a\x20\x20-0.577350269189626,\x20\x20//\x20-1.0\x20+\x202.0\x20*\x20C.x\x0a\x20\x200.024390243902439);\x20//\x201.0\x20/\x2041.0\x0a\x0a\x20\x20//\x20First\x20corner\x0a\x20\x20vec2\x20i\x20=\x20floor(v\x20+\x20dot(v,\x20C.yy));\x0a\x20\x20vec2\x20x0\x20=\x20v\x20-\x20i\x20+\x20dot(i,\x20C.xx);\x0a\x0a\x20\x20//\x20Other\x20corners\x0a\x20\x20vec2\x20i1;\x0a\x20\x20i1\x20=\x20(x0.x\x20>\x20x0.y)\x20?\x20vec2(1.0,\x200.0)\x20:\x20vec2(0.0,\x201.0);\x0a\x20\x20vec4\x20x12\x20=\x20x0.xyxy\x20+\x20C.xxzz;\x0a\x20\x20x12.xy\x20-=\x20i1;\x0a\x0a\x20\x20//\x20Permutations\x0a\x20\x20i\x20=\x20mod289(i);\x20//\x20Avoid\x20truncation\x20effects\x20in\x20permutation\x0a\x20\x20vec3\x20p\x20=\x20permute(permute(i.y\x20+\x20vec3(0.0,\x20i1.y,\x201.0))\x20+\x20i.x\x20+\x20vec3(0.0,\x20i1.x,\x201.0));\x0a\x0a\x20\x20vec3\x20m\x20=\x20max(0.5\x20-\x20vec3(dot(x0,\x20x0),\x20dot(x12.xy,\x20x12.xy),\x20dot(x12.zw,\x20x12.zw)),\x200.0);\x0a\x20\x20m\x20=\x20m\x20*\x20m;\x0a\x20\x20m\x20=\x20m\x20*\x20m;\x0a\x0a\x20\x20//\x20Gradients:\x2041\x20points\x20uniformly\x20over\x20a\x20line,\x20mapped\x20onto\x20a\x20diamond.\x0a\x20\x20//\x20The\x20ring\x20size\x2017*17\x20=\x20289\x20is\x20close\x20to\x20a\x20multiple\x20of\x2041\x20(41*7\x20=\x20287)\x0a\x20\x20vec3\x20x\x20=\x202.0\x20*\x20fract(p\x20*\x20C.www)\x20-\x201.0;\x0a\x20\x20vec3\x20h\x20=\x20abs(x)\x20-\x200.5;\x0a\x20\x20vec3\x20ox\x20=\x20floor(x\x20+\x200.5);\x0a\x20\x20vec3\x20a0\x20=\x20x\x20-\x20ox;\x0a\x0a\x20\x20//\x20Normalise\x20gradients\x20implicitly\x20by\x20scaling\x20m\x0a\x20\x20m\x20*=\x201.79284291400159\x20-\x200.85373472095314\x20*\x20(a0\x20*\x20a0\x20+\x20h\x20*\x20h);\x0a\x0a\x20\x20//\x20Compute\x20final\x20noise\x20value\x20at\x20P\x0a\x20\x20vec3\x20g;\x0a\x20\x20g.x\x20=\x20a0.x\x20*\x20x0.x\x20+\x20h.x\x20*\x20x0.y;\x0a\x20\x20g.yz\x20=\x20a0.yz\x20*\x20x12.xz\x20+\x20h.yz\x20*\x20x12.yw;\x0a\x20\x20return\x20130.0\x20*\x20dot(m,\x20g);\x0a}\x0a\x0a//\x20辅助函数，用于计算任意点的高程\x0afloat\x20getElevation(float\x20x,\x20float\x20z)\x20{\x0a\x20\x20vec2\x20pos\x20=\x20vec2(x,\x20z);\x0a\x0a\x20\x20float\x20elevation\x20=\x200.0;\x0a\x20\x20float\x20amplitude\x20=\x201.0;\x0a\x20\x20float\x20frequency\x20=\x20uWavesFrequency;\x0a\x20\x20vec2\x20p\x20=\x20pos.xy;\x0a\x0a\x20\x20for(float\x20i\x20=\x200.0;\x20i\x20<\x20uWavesIterations;\x20i++)\x20{\x0a\x20\x20\x20\x20float\x20noiseValue\x20=\x20snoise(p\x20*\x20frequency\x20+\x20uTime\x20*\x20uWavesSpeed);\x0a\x20\x20\x20\x20elevation\x20+=\x20amplitude\x20*\x20noiseValue;\x0a\x20\x20\x20\x20p\x20*=\x20uWavesLacunarity;\x0a\x20\x20\x20\x20amplitude\x20*=\x20uWavesPersistence;\x0a\x20\x20\x20\x20frequency\x20*=\x20uWavesLacunarity;\x0a\x20\x20}\x0a\x0a\x20\x20elevation\x20*=\x20uWavesAmplitude;\x0a\x0a\x20\x20return\x20elevation;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20vUv\x20=\x20uv;\x0a\x0a\x20\x20vec4\x20modelPosition\x20=\x20modelMatrix\x20*\x20vec4(position,\x201.0);\x0a\x0a\x20\x20float\x20elevation\x20=\x20getElevation(modelPosition.x,\x20modelPosition.z);\x0a\x20\x20modelPosition.y\x20+=\x20elevation;\x0a\x0a\x20\x20//\x20使用偏导数计算正态分布\x0a\x20\x20float\x20eps\x20=\x200.001;\x0a\x20\x20vec3\x20tangent\x20=\x20normalize(vec3(eps,\x20getElevation(modelPosition.x\x20-\x20eps,\x20modelPosition.z)\x20-\x20elevation,\x200.0));\x0a\x20\x20vec3\x20bitangent\x20=\x20normalize(vec3(0.0,\x20getElevation(modelPosition.x,\x20modelPosition.z\x20-\x20eps)\x20-\x20elevation,\x20eps));\x0a\x20\x20vec3\x20objectNormal\x20=\x20normalize(cross(tangent,\x20bitangent));\x0a\x0a\x20\x20vNormal\x20=\x20objectNormal;\x0a\x20\x20vWorldPosition\x20=\x20modelPosition.xyz;\x0a\x0a\x20\x20vec4\x20viewPosition\x20=\x20viewMatrix\x20*\x20modelPosition;\x0a\x20\x20vec4\x20projectedPosition\x20=\x20projectionMatrix\x20*\x20viewPosition;\x0a\x0a\x20\x20gl_Position\x20=\x20projectedPosition;\x0a}\x0a',A='uniform\x20float\x20uTime;\x0auniform\x20float\x20uOpacity;\x0a\x0auniform\x20vec3\x20uTroughColor;\x0auniform\x20vec3\x20uSurfaceColor;\x0auniform\x20vec3\x20uPeakColor;\x0a\x0auniform\x20float\x20uPeakThreshold;\x0auniform\x20float\x20uPeakTransition;\x0auniform\x20float\x20uTroughThreshold;\x0auniform\x20float\x20uTroughTransition;\x0a\x0auniform\x20float\x20uFresnelBias;\x0auniform\x20float\x20uFresnelScale;\x0auniform\x20float\x20uFresnelPower;\x0a\x0avarying\x20vec2\x20vUv;\x0avarying\x20vec3\x20vNormal;\x0avarying\x20vec3\x20vWorldPosition;\x0a\x0auniform\x20samplerCube\x20uEnvironmentMap;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20//\x20计算从相机到顶点的向量\x0a\x20\x20vec3\x20viewDirection\x20=\x20normalize(vWorldPosition\x20-\x20cameraPosition);\x0a\x20\x20vec3\x20reflectedDirection\x20=\x20reflect(viewDirection,\x20vNormal);\x0a\x20\x20reflectedDirection.x\x20=\x20-reflectedDirection.x;\x0a\x0a\x20\x20//\x20采样\x20cube\x20texture\x0a\x20\x20vec4\x20reflectionColor\x20=\x20textureCube(uEnvironmentMap,\x20reflectedDirection);\x0a\x0a\x20\x20//\x20计算菲涅尔效果\x0a\x20\x20float\x20fresnel\x20=\x20uFresnelBias\x20+\x20uFresnelScale\x20*\x20pow(1.0\x20-\x20clamp(dot(viewDirection,\x20vNormal),\x200.0,\x201.0),\x20uFresnelPower);\x0a\x0a\x20\x20//\x20Calculate\x20elevation-based\x20color\x0a\x20\x20float\x20elevation\x20=\x20vWorldPosition.y;\x0a\x0a\x20\x20vec3\x20baseColor;\x0a\x0a\x20\x20//\x20使用smoothstep计算过渡因子\x0a\x20\x20float\x20peakFactor\x20=\x20smoothstep(uPeakThreshold\x20-\x20uPeakTransition,\x20uPeakThreshold\x20+\x20uPeakTransition,\x20elevation);\x0a\x20\x20float\x20troughFactor\x20=\x20smoothstep(uTroughThreshold\x20-\x20uTroughTransition,\x20uTroughThreshold\x20+\x20uTroughTransition,\x20elevation);\x0a\x0a\x20\x20//\x20Mix\x20between\x20trough\x20and\x20surface\x20colors\x20based\x20on\x20trough\x20transition\x0a\x20\x20vec3\x20surfaceMix\x20=\x20mix(uTroughColor,\x20uSurfaceColor,\x20troughFactor);\x0a\x0a\x20\x20//\x20Mix\x20between\x20surface\x20and\x20peak\x20colors\x20based\x20on\x20peak\x20transition\x0a\x20\x20baseColor\x20=\x20mix(surfaceMix,\x20uPeakColor,\x20peakFactor);\x0a\x0a\x20\x20vec3\x20finalColor\x20=\x20mix(baseColor,\x20reflectionColor.rgb,\x20fresnel);\x0a\x0a\x20\x20gl_FragColor\x20=\x20vec4(finalColor,\x20uOpacity);\x0a}\x0a',U='varying\x20vec2\x20vUv;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20vUv\x20=\x20uv;\x0a\x20\x20gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(position,\x201.0);\x0a}',j='uniform\x20float\x20uTime;\x0auniform\x20sampler2D\x20uTexture;\x0auniform\x20float\x20uCausticsIntensity;\x0auniform\x20float\x20uCausticsOffset;\x0auniform\x20float\x20uCausticsScale;\x0auniform\x20float\x20uCausticsSpeed;\x0auniform\x20float\x20uCausticsThickness;\x0a\x0avarying\x20vec2\x20vUv;\x0a\x0a//\x20Simplex\x202D\x20noise\x0avec3\x20permute(vec3\x20x)\x20{\x0a\x20\x20return\x20mod(((x\x20*\x2034.0)\x20+\x201.0)\x20*\x20x,\x20289.0);\x0a}\x0a\x0afloat\x20snoise(vec2\x20v)\x20{\x0a\x20\x20const\x20vec4\x20C\x20=\x20vec4(0.211324865405187,\x200.366025403784439,\x20-0.577350269189626,\x200.024390243902439);\x0a\x20\x20vec2\x20i\x20=\x20floor(v\x20+\x20dot(v,\x20C.yy));\x0a\x20\x20vec2\x20x0\x20=\x20v\x20-\x20i\x20+\x20dot(i,\x20C.xx);\x0a\x20\x20vec2\x20i1;\x0a\x20\x20i1\x20=\x20(x0.x\x20>\x20x0.y)\x20?\x20vec2(1.0,\x200.0)\x20:\x20vec2(0.0,\x201.0);\x0a\x20\x20vec4\x20x12\x20=\x20x0.xyxy\x20+\x20C.xxzz;\x0a\x20\x20x12.xy\x20-=\x20i1;\x0a\x20\x20i\x20=\x20mod(i,\x20289.0);\x0a\x20\x20vec3\x20p\x20=\x20permute(permute(i.y\x20+\x20vec3(0.0,\x20i1.y,\x201.0))\x20+\x20i.x\x20+\x20vec3(0.0,\x20i1.x,\x201.0));\x0a\x20\x20vec3\x20m\x20=\x20max(0.5\x20-\x20vec3(dot(x0,\x20x0),\x20dot(x12.xy,\x20x12.xy),\x20dot(x12.zw,\x20x12.zw)),\x200.0);\x0a\x20\x20m\x20=\x20m\x20*\x20m;\x0a\x20\x20m\x20=\x20m\x20*\x20m;\x0a\x20\x20vec3\x20x\x20=\x202.0\x20*\x20fract(p\x20*\x20C.www)\x20-\x201.0;\x0a\x20\x20vec3\x20h\x20=\x20abs(x)\x20-\x200.5;\x0a\x20\x20vec3\x20ox\x20=\x20floor(x\x20+\x200.5);\x0a\x20\x20vec3\x20a0\x20=\x20x\x20-\x20ox;\x0a\x20\x20m\x20*=\x201.79284291400159\x20-\x200.85373472095314\x20*\x20(a0\x20*\x20a0\x20+\x20h\x20*\x20h);\x0a\x20\x20vec3\x20g;\x0a\x20\x20g.x\x20=\x20a0.x\x20*\x20x0.x\x20+\x20h.x\x20*\x20x0.y;\x0a\x20\x20g.yz\x20=\x20a0.yz\x20*\x20x12.xz\x20+\x20h.yz\x20*\x20x12.yw;\x0a\x20\x20return\x20130.0\x20*\x20dot(m,\x20g);\x0a}\x0a\x0afloat\x20causticPattern(vec2\x20uv,\x20float\x20scale,\x20float\x20speed,\x20float\x20timeOffset)\x20{\x0a\x20\x20return\x20uCausticsOffset\x20-\x20abs(snoise(uv\x20*\x20scale\x20+\x20timeOffset));\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20vec4\x20texColor\x20=\x20texture2D(uTexture,\x20vUv);\x0a\x0a\x20\x20float\x20caustics\x20=\x200.0;\x0a\x0a\x20\x20\x20\x20//\x20多层焦散\x0a\x20\x20caustics\x20+=\x200.5\x20*\x20causticPattern(vUv.xy,\x20uCausticsScale,\x20uCausticsSpeed,\x20uTime\x20*\x20uCausticsSpeed);\x0a\x20\x20caustics\x20+=\x200.5\x20*\x20causticPattern(vUv.yx,\x20uCausticsScale,\x20uCausticsSpeed,\x20-uTime\x20*\x20uCausticsSpeed);\x0a\x0a\x20\x20\x20\x20//\x20Shape\x20the\x20caustics\x0a\x20\x20caustics\x20=\x20smoothstep(0.5\x20-\x20uCausticsThickness,\x200.5\x20+\x20uCausticsThickness,\x20caustics)\x20*\x20uCausticsIntensity;\x0a\x0a\x20\x20vec3\x20finalColor\x20=\x20texColor.rgb\x20+\x20caustics\x20*\x20vec3(0.2,\x200.4,\x200.6);\x0a\x0a\x20\x20gl_FragColor\x20=\x20vec4(finalColor,\x201.0);\x0a}\x0a',r=new _0x2e69e8(),u=new _0x2e7b6f(0x4b,window['innerWidth']/window['innerHeight'],0.1,0x64),a=new _0xfa822d();a['setSize'](window['innerWidth'],window['innerHeight']),a['toneMapping']=_0xadf8ce,a['toneMappingExposure']=0x1,document['body']['appendChild'](a['domElement']);const P=new _0x17ab69();P['setPath']('./');const x=await P['loadAsync'](['px.png','nx.png','py.png','ny.png','pz.png','nz.png']),G=new _0x370fba()['load']('pool_tile.jpg');r['background']=x,r['environment']=x,u['position']['set'](0x2,0.5,0x0);const b=new _0x1c9443(u,a['domElement']);b['enableDamping']=!0x0;const V=new _0x296107(0x2,0x2,0x200,0x200),e=new _0x1adcd0({'vertexShader':q,'fragmentShader':A,'uniforms':{'uTime':{'value':0x0},'uOpacity':{'value':0.9},'uEnvironmentMap':{'value':x},'uWavesAmplitude':{'value':0.05},'uWavesFrequency':{'value':0x1},'uWavesSpeed':{'value':0.25},'uWavesPersistence':{'value':0.3},'uWavesLacunarity':{'value':1.6},'uWavesIterations':{'value':0x7},'uTroughColor':{'value':new _0xc59c98('#186691')},'uSurfaceColor':{'value':new _0xc59c98('#9bd8c0')},'uPeakColor':{'value':new _0xc59c98('#ffffff')},'uPeakThreshold':{'value':0.08},'uTroughThreshold':{'value':-0.05},'uPeakTransition':{'value':0.05},'uTroughTransition':{'value':0.2},'uFresnelBias':{'value':0.25},'uFresnelScale':{'value':0.25},'uFresnelPower':{'value':0.5}},'transparent':!0x0,'depthTest':!0x0,'side':D}),t=new _0x1adcd0({'vertexShader':U,'fragmentShader':j,'uniforms':{'uTexture':{'value':G},'uTime':{'value':0x0},'uCausticsIntensity':{'value':0x1},'uCausticsScale':{'value':0xa},'uCausticsSpeed':{'value':0.5},'uCausticsThickness':{'value':0.35},'uCausticsOffset':{'value':0.75}}}),p=new _0x254ffb(V,e);p['rotation']['x']=-Math['PI']*0.5,p['position']['y']=0x0,r['add'](p);const _=new _0x296107(0x2,0x2),g=new _0x254ffb(_,t);g['rotation']['x']=-Math['PI']*0.5,g['position']['y']=-0.3,r['add'](g);const H=new _0x5af30a(0xffffff,0.8);r['add'](H);const K=new _0x39eb38();function S(){const _0x176154={'cbxhP':function(_0x3f1442,_0x65464e){return _0x3f1442(_0x65464e);}},_0x5b2916=K['getElapsedTime']();e['uniforms']['uTime']['value']=_0x5b2916,t['uniforms']['uTime']['value']=_0x5b2916,b['update'](),a['render'](r,u),_0x176154['cbxhP'](requestAnimationFrame,S);}window['addEventListener']('resize',()=>{const _0x175341={'rRBNF':function(_0x35bee8,_0x5f46bb){return _0x35bee8/_0x5f46bb;}};u['aspect']=_0x175341['rRBNF'](window['innerWidth'],window['innerHeight']),u['updateProjectionMatrix'](),a['setSize'](window['innerWidth'],window['innerHeight']);}),S();const R=new _0x4f15fa(),c=R['addFolder']({'title':'Water'}),s=c['addFolder']({'title':'Waves'});s['addBinding'](e['uniforms']['uWavesAmplitude'],'value',{'min':0x0,'max':0x5,'label':'Amplitude'}),s['addBinding'](e['uniforms']['uWavesFrequency'],'value',{'min':0.1,'max':0xa,'step':0.1,'label':'Frequency'}),s['addBinding'](e['uniforms']['uWavesPersistence'],'value',{'min':0x0,'max':0x1,'step':0.001,'label':'Persistence'}),s['addBinding'](e['uniforms']['uWavesLacunarity'],'value',{'min':0x0,'max':0x3,'step':0.001,'label':'Lacunarity'}),s['addBinding'](e['uniforms']['uWavesIterations'],'value',{'min':0x1,'max':0x8,'step':0x1,'label':'Iterations'}),s['addBinding'](e['uniforms']['uWavesSpeed'],'value',{'min':0x0,'max':0x1,'step':0.001,'label':'Speed'});const i=c['addFolder']({'title':'Color'});i['addBinding'](e['uniforms']['uOpacity'],'value',{'min':0x0,'max':0x1,'step':0.01,'label':'Opacity'}),i['addBinding'](e['uniforms']['uTroughColor'],'value',{'label':'Trough\x20Color','view':'color','color':{'type':'float'}}),i['addBinding'](e['uniforms']['uSurfaceColor'],'value',{'label':'Surface\x20Color','view':'color','color':{'type':'float'}}),i['addBinding'](e['uniforms']['uPeakColor'],'value',{'label':'Peak\x20Color','view':'color','color':{'type':'float'}}),i['addBinding'](e['uniforms']['uPeakThreshold'],'value',{'min':-0.1,'max':0.1,'label':'Peak\x20Threshold'}),i['addBinding'](e['uniforms']['uPeakTransition'],'value',{'min':0x0,'max':0.1,'label':'Peak\x20Transition'}),i['addBinding'](e['uniforms']['uTroughThreshold'],'value',{'min':-0.1,'max':0.1,'label':'Trough\x20Threshold'}),i['addBinding'](e['uniforms']['uTroughTransition'],'value',{'min':0x0,'max':0.1,'label':'Trough\x20Transition'});const h=c['addFolder']({'title':'Fresnel'});h['addBinding'](e['uniforms']['uFresnelBias'],'value',{'min':0x0,'max':0x1,'step':0.01,'label':'Bias'}),h['addBinding'](e['uniforms']['uFresnelScale'],'value',{'min':0x0,'max':0x1,'step':0.01,'label':'Scale'}),h['addBinding'](e['uniforms']['uFresnelPower'],'value',{'min':0x0,'max':0x1,'step':0.001,'label':'Power'});const l=c['addFolder']({'title':'Caustics'});l['addBinding'](t['uniforms']['uCausticsIntensity'],'value',{'min':0x0,'max':0x2,'step':0.01,'label':'Intensity'}),l['addBinding'](t['uniforms']['uCausticsScale'],'value',{'min':0x0,'max':0x14,'step':0.1,'label':'Scale'}),l['addBinding'](t['uniforms']['uCausticsSpeed'],'value',{'min':0x0,'max':0x1,'step':0.01,'label':'Speed'}),l['addBinding'](t['uniforms']['uCausticsOffset'],'value',{'min':0x0,'max':0x2,'step':0.01,'label':'Offset'}),l['addBinding'](t['uniforms']['uCausticsThickness'],'value',{'min':0x0,'max':0x1,'step':0.01,'label':'Thickness'});
