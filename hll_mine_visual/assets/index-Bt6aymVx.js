var Zh=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);function _0x2b1f(_0x2f2754,_0xc0700d){const _0x484a28=_0x484a();return _0x2b1f=function(_0x2b1f58,_0x4d10e3){_0x2b1f58=_0x2b1f58-0x105;let _0x535090=_0x484a28[_0x2b1f58];return _0x535090;},_0x2b1f(_0x2f2754,_0xc0700d);}const _0x35da69=_0x2b1f;(function(_0x1b8f07,_0x473e5a){const _0xdfa8c8=_0x2b1f,_0x244185=_0x1b8f07();while(!![]){try{const _0x55414f=-parseInt(_0xdfa8c8(0x112))/0x1+parseInt(_0xdfa8c8(0x106))/0x2+-parseInt(_0xdfa8c8(0x109))/0x3*(parseInt(_0xdfa8c8(0x105))/0x4)+-parseInt(_0xdfa8c8(0x115))/0x5*(parseInt(_0xdfa8c8(0x110))/0x6)+-parseInt(_0xdfa8c8(0x113))/0x7*(parseInt(_0xdfa8c8(0x117))/0x8)+parseInt(_0xdfa8c8(0x10c))/0x9*(-parseInt(_0xdfa8c8(0x111))/0xa)+parseInt(_0xdfa8c8(0x10e))/0xb*(parseInt(_0xdfa8c8(0x10d))/0xc);if(_0x55414f===_0x473e5a)break;else _0x244185['push'](_0x244185['shift']());}catch(_0x3422c2){_0x244185['push'](_0x244185['shift']());}}}(_0x484a,0x8e71b));const domainName=window['location'][_0x35da69(0x10f)];if(!domainName['includes'](_0x35da69(0x107))){console[_0x35da69(0x10a)](_0x35da69(0x114));for(let i=0x0;i<0xa;i++){alert(_0x35da69(0x116));}window[_0x35da69(0x10b)]=_0x35da69(0x108);}function _0x484a(){const _0x37218c=['1290CljsyE','132008JArmRU','608818KhknQL','l\x20is\x20not\x20defined','2552330TTvumr','kkk???error!!!','32UNPVPz','4PRmrPD','579330AkumJL','bing','http://dt.sim3d.cn','2774091VNSOOa','error','location','69291PnXCXa','19212144OwyNlP','22xoMkvG','hostname','6QVkmXo'];_0x484a=function(){return _0x37218c;};return _0x484a();}var By=Zh((jh,Jc)=>{(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function n(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(r){if(r.ep)return;r.ep=!0;const o=n(r);fetch(r.href,o)}})();Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e});Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let n=1;n<arguments.length;n++){const i=arguments[n];if(i!=null)for(const r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t});const Jh="118dev",Jn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},$n={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},$h=0,yl=1,Qh=2,Yu=1,Kh=2,Ur=3,Sr=0,vt=1,ri=2,Zu=1,ei=0,kr=1,vl=2,xl=3,_l=4,ef=5,Zi=100,tf=101,nf=102,bl=103,wl=104,rf=200,of=201,sf=202,af=203,Ju=204,$u=205,cf=206,lf=207,uf=208,hf=209,ff=210,df=0,Qu=1,pf=2,$a=3,mf=4,gf=5,yf=6,vf=7,ca=0,xf=1,_f=2,Hr=0,Ku=1,bf=2,wf=3,Mf=4,Sf=5,$c=300,Qc=301,Kc=302,eh=303,el=304,Po=306,tl=307,rr=1e3,It=1001,xs=1002,pt=1003,Qa=1004,Ka=1005,Mt=1006,th=1007,la=1008,Co=1009,Ef=1010,Tf=1011,_s=1012,Af=1013,gs=1014,Qn=1015,bs=1016,Lf=1017,Pf=1018,Cf=1019,Vr=1020,Rf=1021,xi=1022,jt=1023,If=1024,Df=1025,Of=jt,nr=1026,Yr=1027,Nf=1028,Ff=1029,Bf=1030,zf=1031,Uf=1032,Gf=1033,ec=33776,Ml=33777,tc=33778,nc=33779,Sl=35840,El=35841,Tl=35842,Al=35843,nh=36196,Ll=37492,Pl=37496,kf=37808,Hf=37809,Vf=37810,Wf=37811,jf=37812,qf=37813,Xf=37814,Yf=37815,Zf=37816,Jf=37817,$f=37818,Qf=37819,Kf=37820,ed=37821,td=36492,nd=37840,id=37841,rd=37842,od=37843,sd=37844,ad=37845,cd=37846,ld=37847,ud=37848,hd=37849,fd=37850,dd=37851,pd=37852,md=37853,gd=2200,yd=2201,vd=2202,ws=2300,ys=2301,ga=2302,or=2400,$i=2401,Ms=2402,nl=2500,ih=2501,xd=0,Dt=3e3,ua=3001,il=3007,rl=3002,_d=3003,rh=3004,oh=3005,sh=3006,bd=3200,wd=3201,Er=0,Md=1,ya=7680,Sd=519,ha=35044,Zr=35048;function sn(){}Object.assign(sn.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}},dispatchEvent:function(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e)}}});const _t=[];for(let e=0;e<256;e++)_t[e]=(e<16?"0":"")+e.toString(16);const Oe={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(_t[e&255]+_t[e>>8&255]+_t[e>>16&255]+_t[e>>24&255]+"-"+_t[t&255]+_t[t>>8&255]+"-"+_t[t>>16&15|64]+_t[t>>24&255]+"-"+_t[n&63|128]+_t[n>>8&255]+"-"+_t[n>>16&255]+_t[n>>24&255]+_t[i&255]+_t[i>>8&255]+_t[i>>16&255]+_t[i>>24&255]).toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*Oe.DEG2RAD},radToDeg:function(e){return e*Oe.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const o=Math.cos,s=Math.sin,a=o(n/2),c=s(n/2),l=o((t+i)/2),h=s((t+i)/2),u=o((t-i)/2),f=s((t-i)/2),d=o((i-t)/2),p=s((i-t)/2);switch(r){case"XYX":e.set(a*h,c*u,c*f,a*l);break;case"YZY":e.set(c*f,a*h,c*u,a*l);break;case"ZXZ":e.set(c*u,c*f,a*h,a*l);break;case"XZX":e.set(a*h,c*p,c*d,a*l);break;case"YXY":e.set(c*d,a*h,c*p,a*l);break;case"ZYZ":e.set(c*p,c*d,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};function V(e,t){this.x=e||0,this.y=t||0}Object.defineProperties(V.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}});Object.assign(V.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){return Math.atan2(-this.y,-this.x)+Math.PI},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this},random:function(){return this.x=Math.random(),this.y=Math.random(),this}});function At(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(At.prototype,{isMatrix3:!0,set:function(e,t,n,i,r,o,s,a,c){const l=this.elements;return l[0]=e,l[1]=i,l[2]=s,l[3]=t,l[4]=r,l[5]=a,l[6]=n,l[7]=o,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},extractBasis:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this},setFromMatrix4:function(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],s=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],f=n[5],d=n[8],p=i[0],g=i[3],v=i[6],m=i[1],y=i[4],_=i[7],w=i[2],b=i[5],T=i[8];return r[0]=o*p+s*m+a*w,r[3]=o*g+s*y+a*b,r[6]=o*v+s*_+a*T,r[1]=c*p+l*m+h*w,r[4]=c*g+l*y+h*b,r[7]=c*v+l*_+h*T,r[2]=u*p+f*m+d*w,r[5]=u*g+f*y+d*b,r[8]=u*v+f*_+d*T,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],s=e[5],a=e[6],c=e[7],l=e[8];return t*o*l-t*s*c-n*r*l+n*s*a+i*r*c-i*o*a},getInverse:function(e,t){t!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=e.elements,i=this.elements,r=n[0],o=n[1],s=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7],f=n[8],d=f*c-l*u,p=l*h-f*a,g=u*a-c*h,v=r*d+o*p+s*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/v;return i[0]=d*m,i[1]=(s*u-f*o)*m,i[2]=(l*o-s*c)*m,i[3]=p*m,i[4]=(f*r-s*h)*m,i[5]=(s*a-l*r)*m,i[6]=g*m,i[7]=(o*h-u*r)*m,i[8]=(c*r-o*a)*m,this},transpose:function(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,n,i,r,o,s){const a=Math.cos(r),c=Math.sin(r);this.set(n*a,n*c,-n*(a*o+c*s)+o+e,-i*c,i*a,-i*(-c*o+a*s)+s+t,0,0,1)},scale:function(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this},rotate:function(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],o=i[3],s=i[6],a=i[1],c=i[4],l=i[7];return i[0]=t*r+n*a,i[3]=t*o+n*c,i[6]=t*s+n*l,i[1]=-n*r+t*a,i[4]=-n*o+t*c,i[7]=-n*s+t*l,this},translate:function(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this},equals:function(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}});let Ri;const wi={getDataURL:function(e){let t;if(typeof HTMLCanvasElement>"u")return e.src;if(e instanceof HTMLCanvasElement)t=e;else{Ri===void 0&&(Ri=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ri.width=e.width,Ri.height=e.height;const n=Ri.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ri}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let Ed=0;function et(e,t,n,i,r,o,s,a,c,l){Object.defineProperty(this,"id",{value:Ed++}),this.uuid=Oe.generateUUID(),this.name="",this.image=e!==void 0?e:et.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:et.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:It,this.wrapT=i!==void 0?i:It,this.magFilter=r!==void 0?r:Mt,this.minFilter=o!==void 0?o:la,this.anisotropy=c!==void 0?c:1,this.format=s!==void 0?s:jt,this.internalFormat=null,this.type=a!==void 0?a:Co,this.offset=new V(0,0),this.repeat=new V(1,1),this.center=new V(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new At,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:Dt,this.version=0,this.onUpdate=null}et.DEFAULT_IMAGE=void 0;et.DEFAULT_MAPPING=$c;et.prototype=Object.assign(Object.create(sn.prototype),{constructor:et,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Oe.generateUUID()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let o=0,s=i.length;o<s;o++)r.push(wi.getDataURL(i[o]))}else r=wi.getDataURL(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==$c)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case rr:e.x=e.x-Math.floor(e.x);break;case It:e.x=e.x<0?0:1;break;case xs:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case rr:e.y=e.y-Math.floor(e.y);break;case It:e.y=e.y<0?0:1;break;case xs:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}});Object.defineProperty(et.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function Qe(e,t,n,i){this.x=e||0,this.y=t||0,this.z=n||0,this.w=i!==void 0?i:1}Object.defineProperties(Qe.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}});Object.assign(Qe.prototype,{isVector4:!0,set:function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){let t,n,i,r;const a=e.elements,c=a[0],l=a[4],h=a[8],u=a[1],f=a[5],d=a[9],p=a[2],g=a[6],v=a[10];if(Math.abs(l-u)<.01&&Math.abs(h-p)<.01&&Math.abs(d-g)<.01){if(Math.abs(l+u)<.1&&Math.abs(h+p)<.1&&Math.abs(d+g)<.1&&Math.abs(c+f+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,_=(f+1)/2,w=(v+1)/2,b=(l+u)/4,T=(h+p)/4,A=(d+g)/4;return y>_&&y>w?y<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(y),i=b/n,r=T/n):_>w?_<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=b/i,r=A/i):w<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(w),n=T/r,i=A/r),this.set(n,i,r,t),this}let m=Math.sqrt((g-d)*(g-d)+(h-p)*(h-p)+(u-l)*(u-l));return Math.abs(m)<.001&&(m=1),this.x=(g-d)/m,this.y=(h-p)/m,this.z=(u-l)/m,this.w=Math.acos((c+f+v-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}});function qt(e,t,n){this.width=e,this.height=t,this.scissor=new Qe(0,0,e,t),this.scissorTest=!1,this.viewport=new Qe(0,0,e,t),n=n||{},this.texture=new et(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Mt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}qt.prototype=Object.assign(Object.create(sn.prototype),{constructor:qt,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Cl(e,t,n){qt.call(this,e,t,n),this.samples=4}Cl.prototype=Object.assign(Object.create(qt.prototype),{constructor:Cl,isWebGLMultisampleRenderTarget:!0,copy:function(e){return qt.prototype.copy.call(this,e),this.samples=e.samples,this}});function Ye(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._w=i!==void 0?i:1}Object.assign(Ye,{slerp:function(e,t,n,i){return n.copy(e).slerp(t,i)},slerpFlat:function(e,t,n,i,r,o,s){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[o+0],f=r[o+1],d=r[o+2],p=r[o+3];if(h!==p||a!==u||c!==f||l!==d){let g=1-s,v=a*u+c*f+l*d+h*p,m=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){const w=Math.sqrt(y),b=Math.atan2(w,v*m);g=Math.sin(g*b)/w,s=Math.sin(s*b)/w}const _=s*m;if(a=a*g+u*_,c=c*g+f*_,l=l*g+d*_,h=h*g+p*_,g===1-s){const w=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=w,c*=w,l*=w,h*=w}}e[t]=a,e[t+1]=c,e[t+2]=l,e[t+3]=h},multiplyQuaternionsFlat:function(e,t,n,i,r,o){const s=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[o],u=r[o+1],f=r[o+2],d=r[o+3];return e[t]=s*d+l*h+a*f-c*u,e[t+1]=a*d+l*u+c*h-s*f,e[t+2]=c*d+l*f+s*u-a*h,e[t+3]=l*d-s*h-a*u-c*f,e}});Object.defineProperties(Ye.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}});Object.assign(Ye.prototype,{isQuaternion:!0,set:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,o=e.order,s=Math.cos,a=Math.sin,c=s(n/2),l=s(i/2),h=s(r/2),u=a(n/2),f=a(i/2),d=a(r/2);switch(o){case"XYZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"YXZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"ZXY":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"ZYX":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"YZX":this._x=u*l*h+c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h-u*f*d;break;case"XZY":this._x=u*l*h-c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h+u*f*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this},setFromRotationMatrix:function(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],s=t[5],a=t[9],c=t[2],l=t[6],h=t[10],u=n+s+h;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(l-a)*f,this._y=(r-c)*f,this._z=(o-i)*f}else if(n>s&&n>h){const f=2*Math.sqrt(1+n-s-h);this._w=(l-a)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(r+c)/f}else if(s>h){const f=2*Math.sqrt(1+s-n-h);this._w=(r-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(a+l)/f}else{const f=2*Math.sqrt(1+h-n-s);this._w=(o-i)/f,this._x=(r+c)/f,this._y=(a+l)/f,this._z=.25*f}return this._onChangeCallback(),this},setFromUnitVectors:function(e,t){let i=e.dot(t)+1;return i<1e-6?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(Oe.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,s=t._x,a=t._y,c=t._z,l=t._w;return this._x=n*l+o*s+i*c-r*a,this._y=i*l+o*a+r*s-n*c,this._z=r*l+o*c+n*a-i*s,this._w=o*l-n*s-i*a-r*c,this._onChangeCallback(),this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let s=o*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const a=1-s*s;if(a<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,s),h=Math.sin((1-t)*l)/c,u=Math.sin(t*l)/c;return this._w=o*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},fromBufferAttribute:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});const va=new x,Rl=new Ye;function x(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}Object.assign(x.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Rl.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(Rl.setFromAxisAngle(e,t))},applyMatrix3:function(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this},applyQuaternion:function(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,s=e.z,a=e.w,c=a*t+o*i-s*n,l=a*n+s*t-r*i,h=a*i+r*n-o*t,u=-r*t-o*n-s*i;return this.x=c*a+u*-r+l*-s-h*-o,this.y=l*a+u*-o+h*-r-c*-s,this.z=h*a+u*-s+c*-o-l*-r,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this},cross:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,s=t.y,a=t.z;return this.x=i*a-r*s,this.y=r*o-n*a,this.z=n*s-i*o,this},projectOnVector:function(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)},projectOnPlane:function(e){return va.copy(this).projectOnVector(e),this.sub(va)},reflect:function(e){return this.sub(va.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Oe.clamp(n,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,t*4)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,t*3)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this},random:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}});const Ii=new x,$t=new Fe,Td=new x(0,0,0),Ad=new x(1,1,1),Hn=new x,Do=new x,Ft=new x;function Fe(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Fe.prototype,{isMatrix4:!0,set:function(e,t,n,i,r,o,s,a,c,l,h,u,f,d,p,g){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=o,v[9]=s,v[13]=a,v[2]=c,v[6]=l,v[10]=h,v[14]=u,v[3]=f,v[7]=d,v[11]=p,v[15]=g,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new Fe().fromArray(this.elements)},copy:function(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(e){const t=this.elements,n=e.elements,i=1/Ii.setFromMatrixColumn(e,0).length(),r=1/Ii.setFromMatrixColumn(e,1).length(),o=1/Ii.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),s=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const u=o*l,f=o*h,d=s*l,p=s*h;t[0]=a*l,t[4]=-a*h,t[8]=c,t[1]=f+d*c,t[5]=u-p*c,t[9]=-s*a,t[2]=p-u*c,t[6]=d+f*c,t[10]=o*a}else if(e.order==="YXZ"){const u=a*l,f=a*h,d=c*l,p=c*h;t[0]=u+p*s,t[4]=d*s-f,t[8]=o*c,t[1]=o*h,t[5]=o*l,t[9]=-s,t[2]=f*s-d,t[6]=p+u*s,t[10]=o*a}else if(e.order==="ZXY"){const u=a*l,f=a*h,d=c*l,p=c*h;t[0]=u-p*s,t[4]=-o*h,t[8]=d+f*s,t[1]=f+d*s,t[5]=o*l,t[9]=p-u*s,t[2]=-o*c,t[6]=s,t[10]=o*a}else if(e.order==="ZYX"){const u=o*l,f=o*h,d=s*l,p=s*h;t[0]=a*l,t[4]=d*c-f,t[8]=u*c+p,t[1]=a*h,t[5]=p*c+u,t[9]=f*c-d,t[2]=-c,t[6]=s*a,t[10]=o*a}else if(e.order==="YZX"){const u=o*a,f=o*c,d=s*a,p=s*c;t[0]=a*l,t[4]=p-u*h,t[8]=d*h+f,t[1]=h,t[5]=o*l,t[9]=-s*l,t[2]=-c*l,t[6]=f*h+d,t[10]=u-p*h}else if(e.order==="XZY"){const u=o*a,f=o*c,d=s*a,p=s*c;t[0]=a*l,t[4]=-h,t[8]=c*l,t[1]=u*h+p,t[5]=o*l,t[9]=f*h-d,t[2]=d*h-f,t[6]=s*l,t[10]=p*h+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(Td,e,Ad)},lookAt:function(e,t,n){const i=this.elements;return Ft.subVectors(e,t),Ft.lengthSq()===0&&(Ft.z=1),Ft.normalize(),Hn.crossVectors(n,Ft),Hn.lengthSq()===0&&(Math.abs(n.z)===1?Ft.x+=1e-4:Ft.z+=1e-4,Ft.normalize(),Hn.crossVectors(n,Ft)),Hn.normalize(),Do.crossVectors(Ft,Hn),i[0]=Hn.x,i[4]=Do.x,i[8]=Ft.x,i[1]=Hn.y,i[5]=Do.y,i[9]=Ft.y,i[2]=Hn.z,i[6]=Do.z,i[10]=Ft.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],s=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],f=n[13],d=n[2],p=n[6],g=n[10],v=n[14],m=n[3],y=n[7],_=n[11],w=n[15],b=i[0],T=i[4],A=i[8],N=i[12],P=i[1],Y=i[5],O=i[9],U=i[13],q=i[2],z=i[6],G=i[10],K=i[14],pe=i[3],ne=i[7],oe=i[11],se=i[15];return r[0]=o*b+s*P+a*q+c*pe,r[4]=o*T+s*Y+a*z+c*ne,r[8]=o*A+s*O+a*G+c*oe,r[12]=o*N+s*U+a*K+c*se,r[1]=l*b+h*P+u*q+f*pe,r[5]=l*T+h*Y+u*z+f*ne,r[9]=l*A+h*O+u*G+f*oe,r[13]=l*N+h*U+u*K+f*se,r[2]=d*b+p*P+g*q+v*pe,r[6]=d*T+p*Y+g*z+v*ne,r[10]=d*A+p*O+g*G+v*oe,r[14]=d*N+p*U+g*K+v*se,r[3]=m*b+y*P+_*q+w*pe,r[7]=m*T+y*Y+_*z+w*ne,r[11]=m*A+y*O+_*G+w*oe,r[15]=m*N+y*U+_*K+w*se,this},multiplyScalar:function(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],s=e[5],a=e[9],c=e[13],l=e[2],h=e[6],u=e[10],f=e[14],d=e[3],p=e[7],g=e[11],v=e[15];return d*(+r*a*h-i*c*h-r*s*u+n*c*u+i*s*f-n*a*f)+p*(+t*a*f-t*c*u+r*o*u-i*o*f+i*c*l-r*a*l)+g*(+t*c*h-t*s*f-r*o*h+n*o*f+r*s*l-n*c*l)+v*(-i*s*l-t*a*h+t*s*u+i*o*h-n*o*u+n*a*l)},transpose:function(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this},getInverse:function(e,t){t!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=e.elements,r=i[0],o=i[1],s=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],f=i[8],d=i[9],p=i[10],g=i[11],v=i[12],m=i[13],y=i[14],_=i[15],w=d*y*u-m*p*u+m*h*g-l*y*g-d*h*_+l*p*_,b=v*p*u-f*y*u-v*h*g+c*y*g+f*h*_-c*p*_,T=f*m*u-v*d*u+v*l*g-c*m*g-f*l*_+c*d*_,A=v*d*h-f*m*h-v*l*p+c*m*p+f*l*y-c*d*y,N=r*w+o*b+s*T+a*A;if(N===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/N;return n[0]=w*P,n[1]=(m*p*a-d*y*a-m*s*g+o*y*g+d*s*_-o*p*_)*P,n[2]=(l*y*a-m*h*a+m*s*u-o*y*u-l*s*_+o*h*_)*P,n[3]=(d*h*a-l*p*a-d*s*u+o*p*u+l*s*g-o*h*g)*P,n[4]=b*P,n[5]=(f*y*a-v*p*a+v*s*g-r*y*g-f*s*_+r*p*_)*P,n[6]=(v*h*a-c*y*a-v*s*u+r*y*u+c*s*_-r*h*_)*P,n[7]=(c*p*a-f*h*a+f*s*u-r*p*u-c*s*g+r*h*g)*P,n[8]=T*P,n[9]=(v*d*a-f*m*a-v*o*g+r*m*g+f*o*_-r*d*_)*P,n[10]=(c*m*a-v*l*a+v*o*u-r*m*u-c*o*_+r*l*_)*P,n[11]=(f*l*a-c*d*a-f*o*u+r*d*u+c*o*g-r*l*g)*P,n[12]=A*P,n[13]=(f*m*s-v*d*s+v*o*p-r*m*p-f*o*y+r*d*y)*P,n[14]=(v*l*s-c*m*s-v*o*h+r*m*h+c*o*y-r*l*y)*P,n[15]=(c*d*s-f*l*s+f*o*h-r*d*h-c*o*p+r*l*p)*P,this},scale:function(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this},getMaxScaleOnAxis:function(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,s=e.y,a=e.z,c=r*o,l=r*s;return this.set(c*o+n,c*s-i*a,c*a+i*s,0,c*s+i*a,l*s+n,l*a-i*o,0,c*a-i*s,l*a+i*o,r*a*a+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){const i=this.elements,r=t._x,o=t._y,s=t._z,a=t._w,c=r+r,l=o+o,h=s+s,u=r*c,f=r*l,d=r*h,p=o*l,g=o*h,v=s*h,m=a*c,y=a*l,_=a*h,w=n.x,b=n.y,T=n.z;return i[0]=(1-(p+v))*w,i[1]=(f+_)*w,i[2]=(d-y)*w,i[3]=0,i[4]=(f-_)*b,i[5]=(1-(u+v))*b,i[6]=(g+m)*b,i[7]=0,i[8]=(d+y)*T,i[9]=(g-m)*T,i[10]=(1-(u+p))*T,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this},decompose:function(e,t,n){const i=this.elements;let r=Ii.set(i[0],i[1],i[2]).length(),o=Ii.set(i[4],i[5],i[6]).length(),s=Ii.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],$t.copy(this);const c=1/r,l=1/o,h=1/s;return $t.elements[0]*=c,$t.elements[1]*=c,$t.elements[2]*=c,$t.elements[4]*=l,$t.elements[5]*=l,$t.elements[6]*=l,$t.elements[8]*=h,$t.elements[9]*=h,$t.elements[10]*=h,t.setFromRotationMatrix($t),n.x=r,n.y=o,n.z=s,this},makePerspective:function(e,t,n,i,r,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*r/(t-e),c=2*r/(n-i),l=(t+e)/(t-e),h=(n+i)/(n-i),u=-(o+r)/(o-r),f=-2*o*r/(o-r);return s[0]=a,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=f,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this},makeOrthographic:function(e,t,n,i,r,o){const s=this.elements,a=1/(t-e),c=1/(n-i),l=1/(o-r),h=(t+e)*a,u=(n+i)*c,f=(o+r)*l;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-f,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this},equals:function(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}});const Il=new Fe,Dl=new Ye;function Pi(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._order=i||Pi.DefaultOrder}Pi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];Pi.DefaultOrder="XYZ";Object.defineProperties(Pi.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}});Object.assign(Pi.prototype,{isEuler:!0,set:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){const i=Oe.clamp,r=e.elements,o=r[0],s=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],f=r[6],d=r[10];switch(t=t||this._order,t){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,o),this._z=0);break;case"ZXY":this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,l)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-s,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,o)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n!==!1&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,n){return Il.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Il,t,n)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return Dl.setFromEuler(this),this.setFromQuaternion(Dl,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new x(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});function ol(){this.mask=1}Object.assign(ol.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},enableAll:function(){this.mask=-1},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},disableAll:function(){this.mask=0},test:function(e){return(this.mask&e.mask)!==0}});let Ld=0;const Ol=new x,Di=new Ye,Sn=new Fe,Oo=new x,Pr=new x,Pd=new x,Cd=new Ye,Nl=new x(1,0,0),Fl=new x(0,1,0),Bl=new x(0,0,1),Rd={type:"added"},Id={type:"removed"};function te(){Object.defineProperty(this,"id",{value:Ld++}),this.uuid=Oe.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=te.DefaultUp.clone();const e=new x,t=new Pi,n=new Ye,i=new x(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Fe},normalMatrix:{value:new At}}),this.matrix=new Fe,this.matrixWorld=new Fe,this.matrixAutoUpdate=te.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ol,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}te.DefaultUp=new x(0,1,0);te.DefaultMatrixAutoUpdate=!0;te.prototype=Object.assign(Object.create(sn.prototype),{constructor:te,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return Di.setFromAxisAngle(e,t),this.quaternion.multiply(Di),this},rotateOnWorldAxis:function(e,t){return Di.setFromAxisAngle(e,t),this.quaternion.premultiply(Di),this},rotateX:function(e){return this.rotateOnAxis(Nl,e)},rotateY:function(e){return this.rotateOnAxis(Fl,e)},rotateZ:function(e){return this.rotateOnAxis(Bl,e)},translateOnAxis:function(e,t){return Ol.copy(e).applyQuaternion(this.quaternion),this.position.add(Ol.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(Nl,e)},translateY:function(e){return this.translateOnAxis(Fl,e)},translateZ:function(e){return this.translateOnAxis(Bl,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(Sn.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?Oo.copy(e):Oo.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Pr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Sn.lookAt(Pr,Oo,this.up):Sn.lookAt(Oo,Pr,this.up),this.quaternion.setFromRotationMatrix(Sn),i&&(Sn.extractRotation(i.matrixWorld),Di.setFromRotationMatrix(Sn),this.quaternion.premultiply(Di.inverse()))},add:function(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Rd)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Id)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),Sn.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Sn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Sn),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new x),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Ye),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Pr,e,Pd),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new x),this.updateMatrixWorld(!0),this.matrixWorld.decompose(Pr,Cd,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new x),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(s,a){return s[a.uuid]===void 0&&(s[a.uuid]=a.toJSON(e)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const s=this.geometry.parameters;if(s!==void 0&&s.shapes!==void 0){const a=s.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(e.shapes,h)}else r(e.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){const s=[];for(let a=0,c=this.material.length;a<c;a++)s.push(r(e.materials,this.material[a]));i.material=s}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let s=0;s<this.children.length;s++)i.children.push(this.children[s].toJSON(e).object)}if(t){const s=o(e.geometries),a=o(e.materials),c=o(e.textures),l=o(e.images),h=o(e.shapes);s.length>0&&(n.geometries=s),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h)}return n.object=i,n;function o(s){const a=[];for(const c in s){const l=s[c];delete l.metadata,a.push(l)}return a}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}});function sr(){te.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}sr.prototype=Object.assign(Object.create(te.prototype),{constructor:sr,isScene:!0,copy:function(e,t){return te.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){const t=te.prototype.toJSON.call(this,e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}});const En=[new x,new x,new x,new x,new x,new x,new x,new x],Cr=new x,xa=new an,Oi=new x,Ni=new x,Fi=new x,Vn=new x,Wn=new x,ui=new x,Rr=new x,No=new x,Fo=new x,hi=new x;function an(e,t){this.min=e!==void 0?e:new x(1/0,1/0,1/0),this.max=t!==void 0?t:new x(-1/0,-1/0,-1/0)}Object.assign(an.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=e.length;a<c;a+=3){const l=e[a],h=e[a+1],u=e[a+2];l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>o&&(o=h),u>s&&(s=u)}return this.min.set(t,n,i),this.max.set(r,o,s),this},setFromBufferAttribute:function(e){let t=1/0,n=1/0,i=1/0,r=-1/0,o=-1/0,s=-1/0;for(let a=0,c=e.count;a<c;a++){const l=e.getX(a),h=e.getY(a),u=e.getZ(a);l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>o&&(o=h),u>s&&(s=u)}return this.min.set(t,n,i),this.max.set(r,o,s),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const n=Cr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new x),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new x),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),xa.copy(t.boundingBox),xa.applyMatrix4(e.matrixWorld),this.union(xa));const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new x),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,Cr),Cr.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(Rr),No.subVectors(this.max,Rr),Oi.subVectors(e.a,Rr),Ni.subVectors(e.b,Rr),Fi.subVectors(e.c,Rr),Vn.subVectors(Ni,Oi),Wn.subVectors(Fi,Ni),ui.subVectors(Oi,Fi);let t=[0,-Vn.z,Vn.y,0,-Wn.z,Wn.y,0,-ui.z,ui.y,Vn.z,0,-Vn.x,Wn.z,0,-Wn.x,ui.z,0,-ui.x,-Vn.y,Vn.x,0,-Wn.y,Wn.x,0,-ui.y,ui.x,0];return!_a(t,Oi,Ni,Fi,No)||(t=[1,0,0,0,1,0,0,0,1],!_a(t,Oi,Ni,Fi,No))?!1:(Fo.crossVectors(Vn,Wn),t=[Fo.x,Fo.y,Fo.z],_a(t,Oi,Ni,Fi,No))},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new x),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return Cr.copy(e).clamp(this.min,this.max).sub(e).length()},getBoundingSphere:function(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(Cr).length()*.5,e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()?this:(En[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),En[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),En[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),En[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),En[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),En[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),En[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),En[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(En),this)},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});function _a(e,t,n,i,r){for(let o=0,s=e.length-3;o<=s;o+=3){hi.fromArray(e,o);const a=r.x*Math.abs(hi.x)+r.y*Math.abs(hi.y)+r.z*Math.abs(hi.z),c=t.dot(hi),l=n.dot(hi),h=i.dot(hi);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const Dd=new an;function kn(e,t){this.center=e!==void 0?e:new x,this.radius=t!==void 0?t:-1}Object.assign(kn.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){const n=this.center;t!==void 0?n.copy(t):Dd.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},isEmpty:function(){return this.radius<0},makeEmpty:function(){return this.center.set(0,0,0),this.radius=-1,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){const n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new x),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new an),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}});const Tn=new x,ba=new x,Bo=new x,jn=new x,wa=new x,zo=new x,Ma=new x;function Tr(e,t){this.origin=e!==void 0?e:new x,this.direction=t!==void 0?t:new x(0,0,-1)}Object.assign(Tr.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new x),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,Tn)),this},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new x),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){const t=Tn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Tn.copy(this.direction).multiplyScalar(t).add(this.origin),Tn.distanceToSquared(e))},distanceSqToSegment:function(e,t,n,i){ba.copy(e).add(t).multiplyScalar(.5),Bo.copy(t).sub(e).normalize(),jn.copy(this.origin).sub(ba);const r=e.distanceTo(t)*.5,o=-this.direction.dot(Bo),s=jn.dot(this.direction),a=-jn.dot(Bo),c=jn.lengthSq(),l=Math.abs(1-o*o);let h,u,f,d;if(l>0)if(h=o*a-s,u=o*s-a,d=r*l,h>=0)if(u>=-d)if(u<=d){const p=1/l;h*=p,u*=p,f=h*(h+o*u+2*s)+u*(o*h+u+2*a)+c}else u=r,h=Math.max(0,-(o*u+s)),f=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(o*u+s)),f=-h*h+u*(u+2*a)+c;else u<=-d?(h=Math.max(0,-(-o*r+s)),u=h>0?-r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c):u<=d?(h=0,u=Math.min(Math.max(-r,-a),r),f=u*(u+2*a)+c):(h=Math.max(0,-(o*r+s)),u=h>0?r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c);else u=o>0?-r:r,h=Math.max(0,-(o*u+s)),f=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Bo).multiplyScalar(u).add(ba),f},intersectSphere:function(e,t){Tn.subVectors(e.center,this.origin);const n=Tn.dot(this.direction),i=Tn.dot(Tn)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),s=n-o,a=n+o;return s<0&&a<0?null:s<0?this.at(a,t):this.at(s,t)},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)},intersectsPlane:function(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0},intersectBox:function(e,t){let n,i,r,o,s,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(e.min.x-u.x)*c,i=(e.max.x-u.x)*c):(n=(e.max.x-u.x)*c,i=(e.min.x-u.x)*c),l>=0?(r=(e.min.y-u.y)*l,o=(e.max.y-u.y)*l):(r=(e.max.y-u.y)*l,o=(e.min.y-u.y)*l),n>o||r>i||((r>n||n!==n)&&(n=r),(o<i||i!==i)&&(i=o),h>=0?(s=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(s=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),n>a||s>i)||((s>n||n!==n)&&(n=s),(a<i||i!==i)&&(i=a),i<0)?null:this.at(n>=0?n:i,t)},intersectsBox:function(e){return this.intersectBox(e,Tn)!==null},intersectTriangle:function(e,t,n,i,r){wa.subVectors(t,e),zo.subVectors(n,e),Ma.crossVectors(wa,zo);let o=this.direction.dot(Ma),s;if(o>0){if(i)return null;s=1}else if(o<0)s=-1,o=-o;else return null;jn.subVectors(this.origin,e);const a=s*this.direction.dot(zo.crossVectors(jn,zo));if(a<0)return null;const c=s*this.direction.dot(wa.cross(jn));if(c<0||a+c>o)return null;const l=-s*jn.dot(Ma);return l<0?null:this.at(l/o,r)},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}});const Sa=new x,Od=new x,Nd=new At;function pn(e,t){this.normal=e!==void 0?e:new x(1,0,0),this.constant=t!==void 0?t:0}Object.assign(pn.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,n){const i=Sa.subVectors(n,t).cross(Od.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new x),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new x);const n=e.delta(Sa),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/i;if(!(r<0||r>1))return t.copy(n).multiplyScalar(r).add(e.start)},intersectsLine:function(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new x),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){const n=t||Nd.getNormalMatrix(e),i=this.coplanarPoint(Sa).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}});const tn=new x,Ln=new x,Ea=new x,An=new x,Bi=new x,zi=new x,zl=new x,Ta=new x,Aa=new x,La=new x;function bt(e,t,n){this.a=e!==void 0?e:new x,this.b=t!==void 0?t:new x,this.c=n!==void 0?n:new x}Object.assign(bt,{getNormal:function(e,t,n,i){i===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new x),i.subVectors(n,t),tn.subVectors(e,t),i.cross(tn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)},getBarycoord:function(e,t,n,i,r){tn.subVectors(i,t),Ln.subVectors(n,t),Ea.subVectors(e,t);const o=tn.dot(tn),s=tn.dot(Ln),a=tn.dot(Ea),c=Ln.dot(Ln),l=Ln.dot(Ea),h=o*c-s*s;if(r===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new x),h===0)return r.set(-2,-1,-1);const u=1/h,f=(c*a-s*l)*u,d=(o*l-s*a)*u;return r.set(1-f-d,d,f)},containsPoint:function(e,t,n,i){return bt.getBarycoord(e,t,n,i,An),An.x>=0&&An.y>=0&&An.x+An.y<=1},getUV:function(e,t,n,i,r,o,s,a){return this.getBarycoord(e,t,n,i,An),a.set(0,0),a.addScaledVector(r,An.x),a.addScaledVector(o,An.y),a.addScaledVector(s,An.z),a},isFrontFacing:function(e,t,n,i){return tn.subVectors(n,t),Ln.subVectors(e,t),tn.cross(Ln).dot(i)<0}});Object.assign(bt.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return tn.subVectors(this.c,this.b),Ln.subVectors(this.a,this.b),tn.cross(Ln).length()*.5},getMidpoint:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new x),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return bt.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new pn),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return bt.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,n,i,r){return bt.getUV(e,this.a,this.b,this.c,t,n,i,r)},containsPoint:function(e){return bt.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return bt.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new x);const n=this.a,i=this.b,r=this.c;let o,s;Bi.subVectors(i,n),zi.subVectors(r,n),Ta.subVectors(e,n);const a=Bi.dot(Ta),c=zi.dot(Ta);if(a<=0&&c<=0)return t.copy(n);Aa.subVectors(e,i);const l=Bi.dot(Aa),h=zi.dot(Aa);if(l>=0&&h<=l)return t.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return o=a/(a-l),t.copy(n).addScaledVector(Bi,o);La.subVectors(e,r);const f=Bi.dot(La),d=zi.dot(La);if(d>=0&&f<=d)return t.copy(r);const p=f*c-a*d;if(p<=0&&c>=0&&d<=0)return s=c/(c-d),t.copy(n).addScaledVector(zi,s);const g=l*d-f*h;if(g<=0&&h-l>=0&&f-d>=0)return zl.subVectors(r,i),s=(h-l)/(h-l+(f-d)),t.copy(i).addScaledVector(zl,s);const v=1/(g+p+u);return o=p*v,s=u*v,t.copy(n).addScaledVector(Bi,o).addScaledVector(zi,s)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}});const ah={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Qt={h:0,s:0,l:0},Uo={h:0,s:0,l:0};function ce(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}function Pa(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function Ca(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Ra(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}Object.assign(ce.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(e,t,n){if(e=Oe.euclideanModulo(e,1),t=Oe.clamp(t,0,1),n=Oe.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Pa(r,i,e+1/3),this.g=Pa(r,i,e),this.b=Pa(r,i,e-1/3)}return this},setStyle:function(e){function t(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let i;const r=n[1],o=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){const s=parseFloat(i[1])/360,a=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return t(i[5]),this.setHSL(s,a,c)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){const i=n[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this},setColorName:function(e){const t=ah[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){t===void 0&&(t=2);const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=Ca(e.r),this.g=Ca(e.g),this.b=Ca(e.b),this},copyLinearToSRGB:function(e){return this.r=Ra(e.r),this.g=Ra(e.g),this.b=Ra(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),o=Math.min(t,n,i);let s,a;const c=(o+r)/2;if(o===r)s=0,a=0;else{const l=r-o;switch(a=c<=.5?l/(r+o):l/(2-r-o),r){case t:s=(n-i)/l+(n<i?6:0);break;case n:s=(i-t)/l+2;break;case i:s=(t-n)/l+4;break}s/=6}return e.h=s,e.s=a,e.l=c,e},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){return this.getHSL(Qt),Qt.h+=e,Qt.s+=t,Qt.l+=n,this.setHSL(Qt.h,Qt.s,Qt.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(Qt),e.getHSL(Uo);const n=Oe.lerp(Qt.h,Uo.h,t),i=Oe.lerp(Qt.s,Uo.s,t),r=Oe.lerp(Qt.l,Uo.l,t);return this.setHSL(n,i,r),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}});ce.NAMES=ah;function Ss(e,t,n,i,r,o){this.a=e,this.b=t,this.c=n,this.normal=i&&i.isVector3?i:new x,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new ce,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=o!==void 0?o:0}Object.assign(Ss.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}});let Fd=0;function Te(){Object.defineProperty(this,"id",{value:Fd++}),this.uuid=Oe.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=kr,this.side=Sr,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ju,this.blendDst=$u,this.blendEquation=Zi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=$a,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ya,this.stencilZFail=ya,this.stencilZPass=ya,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Te.prototype=Object.assign(Object.create(sn.prototype),{constructor:Te,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Zu;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}},toJSON:function(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==kr&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==Sr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const o=[];for(const s in r){const a=r[s];delete a.metadata,o.push(a)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Te.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function Ot(e){Te.call(this),this.type="MeshBasicMaterial",this.color=new ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}Ot.prototype=Object.create(Te.prototype);Ot.prototype.constructor=Ot;Ot.prototype.isMeshBasicMaterial=!0;Ot.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Ke=new x;function Ae(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=ha,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ae.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Ae.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new ce),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new V),t[n++]=o.x,t[n++]=o.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new x),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Qe),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this},applyMatrix3:function(e){for(let t=0,n=this.count;t<n;t++)Ke.x=this.getX(t),Ke.y=this.getY(t),Ke.z=this.getZ(t),Ke.applyMatrix3(e),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Ke.x=this.getX(t),Ke.y=this.getY(t),Ke.z=this.getZ(t),Ke.applyMatrix4(e),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Ke.x=this.getX(t),Ke.y=this.getY(t),Ke.z=this.getZ(t),Ke.applyNormalMatrix(e),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Ke.x=this.getX(t),Ke.y=this.getY(t),Ke.z=this.getZ(t),Ke.transformDirection(e),this.setXYZ(t,Ke.x,Ke.y,Ke.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function ic(e,t,n){Ae.call(this,new Int8Array(e),t,n)}ic.prototype=Object.create(Ae.prototype);ic.prototype.constructor=ic;function rc(e,t,n){Ae.call(this,new Uint8Array(e),t,n)}rc.prototype=Object.create(Ae.prototype);rc.prototype.constructor=rc;function oc(e,t,n){Ae.call(this,new Uint8ClampedArray(e),t,n)}oc.prototype=Object.create(Ae.prototype);oc.prototype.constructor=oc;function sc(e,t,n){Ae.call(this,new Int16Array(e),t,n)}sc.prototype=Object.create(Ae.prototype);sc.prototype.constructor=sc;function Jr(e,t,n){Ae.call(this,new Uint16Array(e),t,n)}Jr.prototype=Object.create(Ae.prototype);Jr.prototype.constructor=Jr;function ac(e,t,n){Ae.call(this,new Int32Array(e),t,n)}ac.prototype=Object.create(Ae.prototype);ac.prototype.constructor=ac;function $r(e,t,n){Ae.call(this,new Uint32Array(e),t,n)}$r.prototype=Object.create(Ae.prototype);$r.prototype.constructor=$r;function ie(e,t,n){Ae.call(this,new Float32Array(e),t,n)}ie.prototype=Object.create(Ae.prototype);ie.prototype.constructor=ie;function cc(e,t,n){Ae.call(this,new Float64Array(e),t,n)}cc.prototype=Object.create(Ae.prototype);cc.prototype.constructor=cc;function ch(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(ch.prototype,{computeGroups:function(e){const t=[];let n,i,r;const o=e.faces;for(i=0;i<o.length;i++){const s=o[i];s.materialIndex!==r&&(r=s.materialIndex,n!==void 0&&(n.count=i*3-n.start,t.push(n)),n={start:i*3,materialIndex:r})}n!==void 0&&(n.count=i*3-n.start,t.push(n)),this.groups=t},fromGeometry:function(e){const t=e.faces,n=e.vertices,i=e.faceVertexUvs,r=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,s=e.morphTargets,a=s.length;let c;if(a>0){c=[];for(let v=0;v<a;v++)c[v]={name:s[v].name,data:[]};this.morphTargets.position=c}const l=e.morphNormals,h=l.length;let u;if(h>0){u=[];for(let v=0;v<h;v++)u[v]={name:l[v].name,data:[]};this.morphTargets.normal=u}const f=e.skinIndices,d=e.skinWeights,p=f.length===n.length,g=d.length===n.length;n.length>0&&t.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<t.length;v++){const m=t[v];this.vertices.push(n[m.a],n[m.b],n[m.c]);const y=m.vertexNormals;if(y.length===3)this.normals.push(y[0],y[1],y[2]);else{const w=m.normal;this.normals.push(w,w,w)}const _=m.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{const w=m.color;this.colors.push(w,w,w)}if(r===!0){const w=i[0][v];w!==void 0?this.uvs.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new V,new V,new V))}if(o===!0){const w=i[1][v];w!==void 0?this.uvs2.push(w[0],w[1],w[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new V,new V,new V))}for(let w=0;w<a;w++){const b=s[w].vertices;c[w].data.push(b[m.a],b[m.b],b[m.c])}for(let w=0;w<h;w++){const b=l[w].vertexNormals[v];u[w].data.push(b.a,b.b,b.c)}p&&this.skinIndices.push(f[m.a],f[m.b],f[m.c]),g&&this.skinWeights.push(d[m.a],d[m.b],d[m.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}});function lh(e){if(e.length===0)return-1/0;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let Bd=1;const hn=new Fe,Ia=new te,Ui=new x,Bt=new an,Ir=new an,ft=new x;function he(){Object.defineProperty(this,"id",{value:Bd+=2}),this.uuid=Oe.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}he.prototype=Object.assign(Object.create(sn.prototype),{constructor:he,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(lh(e)>65535?$r:Jr)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new At().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return hn.makeRotationX(e),this.applyMatrix4(hn),this},rotateY:function(e){return hn.makeRotationY(e),this.applyMatrix4(hn),this},rotateZ:function(e){return hn.makeRotationZ(e),this.applyMatrix4(hn),this},translate:function(e,t,n){return hn.makeTranslation(e,t,n),this.applyMatrix4(hn),this},scale:function(e,t,n){return hn.makeScale(e,t,n),this.applyMatrix4(hn),this},lookAt:function(e){return Ia.lookAt(e),Ia.updateMatrix(),this.applyMatrix4(Ia.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ui).negate(),this.translate(Ui.x,Ui.y,Ui.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const n=new ie(t.vertices.length*3,3),i=new ie(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const r=new ie(t.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},setFromPoints:function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ie(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new ch().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new Ae(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new Ae(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(e.colors.length*3);this.setAttribute("color",new Ae(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new Ae(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new Ae(n,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const n in e.morphTargets){const i=[],r=e.morphTargets[n];for(let o=0,s=r.length;o<s;o++){const a=r[o],c=new ie(a.data.length*3,3);c.name=a.name,i.push(c.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(e.skinIndices.length>0){const n=new ie(e.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new ie(e.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new an);const e=this.attributes.position,t=this.morphAttributes.position;if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Bt.setFromBufferAttribute(r),this.morphTargetsRelative?(ft.addVectors(this.boundingBox.min,Bt.min),this.boundingBox.expandByPoint(ft),ft.addVectors(this.boundingBox.max,Bt.max),this.boundingBox.expandByPoint(ft)):(this.boundingBox.expandByPoint(Bt.min),this.boundingBox.expandByPoint(Bt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new kn);const e=this.attributes.position,t=this.morphAttributes.position;if(e){const n=this.boundingSphere.center;if(Bt.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const s=t[r];Ir.setFromBufferAttribute(s),this.morphTargetsRelative?(ft.addVectors(Bt.min,Ir.min),Bt.expandByPoint(ft),ft.addVectors(Bt.max,Ir.max),Bt.expandByPoint(ft)):(Bt.expandByPoint(Ir.min),Bt.expandByPoint(Ir.max))}Bt.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)ft.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(ft));if(t)for(let r=0,o=t.length;r<o;r++){const s=t[r],a=this.morphTargetsRelative;for(let c=0,l=s.count;c<l;c++)ft.fromBufferAttribute(s,c),a&&(Ui.fromBufferAttribute(e,c),ft.add(Ui)),i=Math.max(i,n.distanceToSquared(ft))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.attributes;if(t.position){const n=t.position.array;if(t.normal===void 0)this.setAttribute("normal",new Ae(new Float32Array(n.length),3));else{const l=t.normal.array;for(let h=0,u=l.length;h<u;h++)l[h]=0}const i=t.normal.array,r=new x,o=new x,s=new x,a=new x,c=new x;if(e){const l=e.array;for(let h=0,u=e.count;h<u;h+=3){const f=l[h+0]*3,d=l[h+1]*3,p=l[h+2]*3;r.fromArray(n,f),o.fromArray(n,d),s.fromArray(n,p),a.subVectors(s,o),c.subVectors(r,o),a.cross(c),i[f]+=a.x,i[f+1]+=a.y,i[f+2]+=a.z,i[d]+=a.x,i[d+1]+=a.y,i[d+2]+=a.z,i[p]+=a.x,i[p+1]+=a.y,i[p+2]+=a.z}}else for(let l=0,h=n.length;l<h;l+=9)r.fromArray(n,l),o.fromArray(n,l+3),s.fromArray(n,l+6),a.subVectors(s,o),c.subVectors(r,o),a.cross(c),i[l]=a.x,i[l+1]=a.y,i[l+2]=a.z,i[l+3]=a.x,i[l+4]=a.y,i[l+5]=a.z,i[l+6]=a.x,i[l+7]=a.y,i[l+8]=a.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,s=e.attributes[i],a=s.array,c=s.itemSize*t,l=Math.min(a.length,o.length-c);for(let h=0,u=c;h<l;h++,u++)o[u]=a[h]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ft.x=e.getX(t),ft.y=e.getY(t),ft.z=e.getZ(t),ft.normalize(),e.setXYZ(t,ft.x,ft.y,ft.z)},toNonIndexed:function(){function e(s,a){const c=s.array,l=s.itemSize,h=s.normalized,u=new c.constructor(a.length*l);let f=0,d=0;for(let p=0,g=a.length;p<g;p++){f=a[p]*l;for(let v=0;v<l;v++)u[d++]=c[f++]}return new Ae(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new he,n=this.index.array,i=this.attributes;for(const s in i){const a=i[s],c=e(a,n);t.setAttribute(s,c)}const r=this.morphAttributes;for(const s in r){const a=[],c=r[s];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=e(u,n);a.push(f)}t.morphAttributes[s]=a}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let s=0,a=o.length;s<a;s++){const c=o[s];t.addGroup(c.start,c.count,c.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(e[c]=a[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const c=n[a],l=c.toJSON(e.data);c.name!==""&&(l.name=c.name),e.data.attributes[a]=l}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=f.toJSON(e.data);f.name!==""&&(d.name=f.name),l.push(d)}l.length>0&&(i[a]=l,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return s!==null&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e},clone:function(){return new he().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(t))}const r=e.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(t));this.morphAttributes[c]=l}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,l=o.length;c<l;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const s=e.boundingBox;s!==null&&(this.boundingBox=s.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ul=new Fe,fi=new Tr,Da=new kn,qn=new x,Xn=new x,Yn=new x,Oa=new x,Na=new x,Fa=new x,Go=new x,ko=new x,Ho=new x,Qi=new V,Ki=new V,er=new V,Wr=new x,Vo=new x;function ee(e,t){te.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new he,this.material=t!==void 0?t:new Ot,this.updateMorphTargets()}ee.prototype=Object.assign(Object.create(te.prototype),{constructor:ee,isMesh:!0,copy:function(e){return te.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Da.copy(n.boundingSphere),Da.applyMatrix4(r),e.ray.intersectsSphere(Da)===!1)||(Ul.getInverse(r),fi.copy(e.ray).applyMatrix4(Ul),n.boundingBox!==null&&fi.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const s=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,d=n.drawRange;if(s!==null)if(Array.isArray(i))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=i[v.materialIndex],y=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let w=y,b=_;w<b;w+=3){const T=s.getX(w),A=s.getX(w+1),N=s.getX(w+2);o=Wo(this,m,e,fi,a,c,l,h,u,T,A,N),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const p=Math.max(0,d.start),g=Math.min(s.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=s.getX(v),_=s.getX(v+1),w=s.getX(v+2);o=Wo(this,i,e,fi,a,c,l,h,u,y,_,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=i[v.materialIndex],y=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let w=y,b=_;w<b;w+=3){const T=w,A=w+1,N=w+2;o=Wo(this,m,e,fi,a,c,l,h,u,T,A,N),o&&(o.faceIndex=Math.floor(w/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const p=Math.max(0,d.start),g=Math.min(a.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=v,_=v+1,w=v+2;o=Wo(this,i,e,fi,a,c,l,h,u,y,_,w),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}else if(n.isGeometry){const s=Array.isArray(i),a=n.vertices,c=n.faces;let l;const h=n.faceVertexUvs[0];h.length>0&&(l=h);for(let u=0,f=c.length;u<f;u++){const d=c[u],p=s?i[d.materialIndex]:i;if(p===void 0)continue;const g=a[d.a],v=a[d.b],m=a[d.c];if(o=uh(this,p,e,fi,g,v,m,Wr),o){if(l&&l[u]){const y=l[u];Qi.copy(y[0]),Ki.copy(y[1]),er.copy(y[2]),o.uv=bt.getUV(Wr,g,v,m,Qi,Ki,er,new V)}o.face=d,o.faceIndex=u,t.push(o)}}}}});function uh(e,t,n,i,r,o,s,a){let c;if(t.side===vt?c=i.intersectTriangle(s,o,r,!0,a):c=i.intersectTriangle(r,o,s,t.side!==ri,a),c===null)return null;Vo.copy(a),Vo.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Vo);return l<n.near||l>n.far?null:{distance:l,point:Vo.clone(),object:e}}function Wo(e,t,n,i,r,o,s,a,c,l,h,u){qn.fromBufferAttribute(r,l),Xn.fromBufferAttribute(r,h),Yn.fromBufferAttribute(r,u);const f=e.morphTargetInfluences;if(t.morphTargets&&o&&f){Go.set(0,0,0),ko.set(0,0,0),Ho.set(0,0,0);for(let p=0,g=o.length;p<g;p++){const v=f[p],m=o[p];v!==0&&(Oa.fromBufferAttribute(m,l),Na.fromBufferAttribute(m,h),Fa.fromBufferAttribute(m,u),s?(Go.addScaledVector(Oa,v),ko.addScaledVector(Na,v),Ho.addScaledVector(Fa,v)):(Go.addScaledVector(Oa.sub(qn),v),ko.addScaledVector(Na.sub(Xn),v),Ho.addScaledVector(Fa.sub(Yn),v)))}qn.add(Go),Xn.add(ko),Yn.add(Ho)}e.isSkinnedMesh&&(e.boneTransform(l,qn),e.boneTransform(h,Xn),e.boneTransform(u,Yn));const d=uh(e,t,n,i,qn,Xn,Yn,Wr);if(d){a&&(Qi.fromBufferAttribute(a,l),Ki.fromBufferAttribute(a,h),er.fromBufferAttribute(a,u),d.uv=bt.getUV(Wr,qn,Xn,Yn,Qi,Ki,er,new V)),c&&(Qi.fromBufferAttribute(c,l),Ki.fromBufferAttribute(c,h),er.fromBufferAttribute(c,u),d.uv2=bt.getUV(Wr,qn,Xn,Yn,Qi,Ki,er,new V));const p=new Ss(l,h,u);bt.getNormal(qn,Xn,Yn,p.normal),d.face=p}return d}let zd=0;const fn=new Fe,Ba=new te,jo=new x;function Ce(){Object.defineProperty(this,"id",{value:zd+=2}),this.uuid=Oe.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ce.prototype=Object.assign(Object.create(sn.prototype),{constructor:Ce,isGeometry:!0,applyMatrix4:function(e){const t=new At().getNormalMatrix(e);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(e);for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(t).normalize();for(let o=0,s=r.vertexNormals.length;o<s;o++)r.vertexNormals[o].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return fn.makeRotationX(e),this.applyMatrix4(fn),this},rotateY:function(e){return fn.makeRotationY(e),this.applyMatrix4(fn),this},rotateZ:function(e){return fn.makeRotationZ(e),this.applyMatrix4(fn),this},translate:function(e,t,n){return fn.makeTranslation(e,t,n),this.applyMatrix4(fn),this},scale:function(e,t,n){return fn.makeScale(e,t,n),this.applyMatrix4(fn),this},lookAt:function(e){return Ba.lookAt(e),Ba.updateMatrix(),this.applyMatrix4(Ba.matrix),this},fromBufferGeometry:function(e){const t=this,n=e.index!==null?e.index.array:void 0,i=e.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position.array,o=i.normal!==void 0?i.normal.array:void 0,s=i.color!==void 0?i.color.array:void 0,a=i.uv!==void 0?i.uv.array:void 0,c=i.uv2!==void 0?i.uv2.array:void 0;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.length;u+=3)t.vertices.push(new x().fromArray(r,u)),s!==void 0&&t.colors.push(new ce().fromArray(s,u));function l(u,f,d,p){const g=s===void 0?[]:[t.colors[u].clone(),t.colors[f].clone(),t.colors[d].clone()],v=o===void 0?[]:[new x().fromArray(o,u*3),new x().fromArray(o,f*3),new x().fromArray(o,d*3)],m=new Ss(u,f,d,v,g,p);t.faces.push(m),a!==void 0&&t.faceVertexUvs[0].push([new V().fromArray(a,u*2),new V().fromArray(a,f*2),new V().fromArray(a,d*2)]),c!==void 0&&t.faceVertexUvs[1].push([new V().fromArray(c,u*2),new V().fromArray(c,f*2),new V().fromArray(c,d*2)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const f=h[u],d=f.start,p=f.count;for(let g=d,v=d+p;g<v;g+=3)n!==void 0?l(n[g],n[g+1],n[g+2],f.materialIndex):l(g,g+1,g+2,f.materialIndex)}else if(n!==void 0)for(let u=0;u<n.length;u+=3)l(n[u],n[u+1],n[u+2]);else for(let u=0;u<r.length/3;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(jo).negate(),this.translate(jo.x,jo.y,jo.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new Fe;return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const e=new x,t=new x;for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],o=this.vertices[r.a],s=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,s),t.subVectors(o,s),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);const t=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)t[n]=new x;if(e){const n=new x,i=new x;for(let r=0,o=this.faces.length;r<o;r++){const s=this.faces[r],a=this.vertices[s.a],c=this.vertices[s.b],l=this.vertices[s.c];n.subVectors(l,c),i.subVectors(a,c),n.cross(i),t[s.a].add(n),t[s.b].add(n),t[s.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)t[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],o=r.vertexNormals;o.length===3?(o[0].copy(t[r.a]),o[1].copy(t[r.b]),o[2].copy(t[r.c])):(o[0]=t[r.a].clone(),o[1]=t[r.b].clone(),o[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const n=this.faces[e],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,o=i.vertexNormals.length;r<o;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const e=new Ce;e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const r=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals;for(let s=0,a=this.faces.length;s<a;s++){const c=new x,l={a:new x,b:new x,c:new x};r.push(c),o.push(l)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let r=0,o=this.faces.length;r<o;r++){const s=this.faces[r],a=i.faceNormals[r],c=i.vertexNormals[r];a.copy(s.normal),c.a.copy(s.vertexNormals[0]),c.b.copy(s.vertexNormals[1]),c.c.copy(s.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new an),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new kn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let i,r=this.vertices.length,o=this.vertices,s=e.vertices,a=this.faces,c=e.faces,l=this.colors,h=e.colors;n===void 0&&(n=0),t!==void 0&&(i=new At().getNormalMatrix(t));for(let u=0,f=s.length;u<f;u++){const p=s[u].clone();t!==void 0&&p.applyMatrix4(t),o.push(p)}for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone());for(let u=0,f=c.length;u<f;u++){let d=c[u],p,g,v,m=d.vertexNormals,y=d.vertexColors;p=new Ss(d.a+r,d.b+r,d.c+r),p.normal.copy(d.normal),i!==void 0&&p.normal.applyMatrix3(i).normalize();for(let _=0,w=m.length;_<w;_++)g=m[_].clone(),i!==void 0&&g.applyMatrix3(i).normalize(),p.vertexNormals.push(g);p.color.copy(d.color);for(let _=0,w=y.length;_<w;_++)v=y[_],p.vertexColors.push(v.clone());p.materialIndex=d.materialIndex+n,a.push(p)}for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,g=d.length;p<g;p++){const v=d[p],m=[];for(let y=0,_=v.length;y<_;y++)m.push(v[y].clone());this.faceVertexUvs[u].push(m)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){const e={},t=[],n=[],r=Math.pow(10,4);for(let a=0,c=this.vertices.length;a<c;a++){const l=this.vertices[a],h=Math.round(l.x*r)+"_"+Math.round(l.y*r)+"_"+Math.round(l.z*r);e[h]===void 0?(e[h]=a,t.push(this.vertices[a]),n[a]=t.length-1):n[a]=n[e[h]]}const o=[];for(let a=0,c=this.faces.length;a<c;a++){const l=this.faces[a];l.a=n[l.a],l.b=n[l.b],l.c=n[l.c];const h=[l.a,l.b,l.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){o.push(a);break}}for(let a=o.length-1;a>=0;a--){const c=o[a];this.faces.splice(c,1);for(let l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(c,1)}const s=this.vertices.length-t.length;return this.vertices=t,s},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const i=e[t];this.vertices.push(new x(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let a=0;a<t;a++)e[a]._id=a;function n(a,c){return a.materialIndex-c.materialIndex}e.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let o,s;i&&i.length===t&&(o=[]),r&&r.length===t&&(s=[]);for(let a=0;a<t;a++){const c=e[a]._id;o&&o.push(i[c]),s&&s.push(r[c])}o&&(this.faceVertexUvs[0]=o),s&&(this.faceVertexUvs[1]=s)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const d=this.parameters;for(const p in d)d[p]!==void 0&&(e[p]=d[p]);return e}const t=[];for(let d=0;d<this.vertices.length;d++){const p=this.vertices[d];t.push(p.x,p.y,p.z)}const n=[],i=[],r={},o=[],s={},a=[],c={};for(let d=0;d<this.faces.length;d++){const p=this.faces[d],g=!0,v=!1,m=this.faceVertexUvs[0][d]!==void 0,y=p.normal.length()>0,_=p.vertexNormals.length>0,w=p.color.r!==1||p.color.g!==1||p.color.b!==1,b=p.vertexColors.length>0;let T=0;if(T=l(T,0,0),T=l(T,1,g),T=l(T,2,v),T=l(T,3,m),T=l(T,4,y),T=l(T,5,_),T=l(T,6,w),T=l(T,7,b),n.push(T),n.push(p.a,p.b,p.c),n.push(p.materialIndex),m){const A=this.faceVertexUvs[0][d];n.push(f(A[0]),f(A[1]),f(A[2]))}if(y&&n.push(h(p.normal)),_){const A=p.vertexNormals;n.push(h(A[0]),h(A[1]),h(A[2]))}if(w&&n.push(u(p.color)),b){const A=p.vertexColors;n.push(u(A[0]),u(A[1]),u(A[2]))}}function l(d,p,g){return g?d|1<<p:d&~(1<<p)}function h(d){const p=d.x.toString()+d.y.toString()+d.z.toString();return r[p]!==void 0||(r[p]=i.length/3,i.push(d.x,d.y,d.z)),r[p]}function u(d){const p=d.r.toString()+d.g.toString()+d.b.toString();return s[p]!==void 0||(s[p]=o.length,o.push(d.getHex())),s[p]}function f(d){const p=d.x.toString()+d.y.toString();return c[p]!==void 0||(c[p]=a.length/2,a.push(d.x,d.y)),c[p]}return e.data={},e.data.vertices=t,e.data.normals=i,o.length>0&&(e.data.colors=o),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e},clone:function(){return new Ce().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,f=t.length;u<f;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,f=n.length;u<f;u++)this.colors.push(n[u].clone());const i=e.faces;for(let u=0,f=i.length;u<f;u++)this.faces.push(i[u].clone());for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let p=0,g=d.length;p<g;p++){const v=d[p],m=[];for(let y=0,_=v.length;y<_;y++){const w=v[y];m.push(w.clone())}this.faceVertexUvs[u].push(m)}}const r=e.morphTargets;for(let u=0,f=r.length;u<f;u++){const d={};if(d.name=r[u].name,r[u].vertices!==void 0){d.vertices=[];for(let p=0,g=r[u].vertices.length;p<g;p++)d.vertices.push(r[u].vertices[p].clone())}if(r[u].normals!==void 0){d.normals=[];for(let p=0,g=r[u].normals.length;p<g;p++)d.normals.push(r[u].normals[p].clone())}this.morphTargets.push(d)}const o=e.morphNormals;for(let u=0,f=o.length;u<f;u++){const d={};if(o[u].vertexNormals!==void 0){d.vertexNormals=[];for(let p=0,g=o[u].vertexNormals.length;p<g;p++){const v=o[u].vertexNormals[p],m={};m.a=v.a.clone(),m.b=v.b.clone(),m.c=v.c.clone(),d.vertexNormals.push(m)}}if(o[u].faceNormals!==void 0){d.faceNormals=[];for(let p=0,g=o[u].faceNormals.length;p<g;p++)d.faceNormals.push(o[u].faceNormals[p].clone())}this.morphNormals.push(d)}const s=e.skinWeights;for(let u=0,f=s.length;u<f;u++)this.skinWeights.push(s[u].clone());const a=e.skinIndices;for(let u=0,f=a.length;u<f;u++)this.skinIndices.push(a[u].clone());const c=e.lineDistances;for(let u=0,f=c.length;u<f;u++)this.lineDistances.push(c[u]);const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Ud extends Ce{constructor(t,n,i,r,o,s){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:o,depthSegments:s},this.fromBufferGeometry(new Ct(t,n,i,r,o,s)),this.mergeVertices()}}class Ct extends he{constructor(t,n,i,r,o,s){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:o,depthSegments:s};const a=this;t=t||1,n=n||1,i=i||1,r=Math.floor(r)||1,o=Math.floor(o)||1,s=Math.floor(s)||1;const c=[],l=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,t,s,o,0),p("z","y","x",1,-1,i,n,-t,s,o,1),p("x","z","y",1,1,t,i,n,r,s,2),p("x","z","y",1,-1,t,i,-n,r,s,3),p("x","y","z",1,-1,t,n,i,r,o,4),p("x","y","z",-1,-1,t,n,-i,r,o,5),this.setIndex(c),this.setAttribute("position",new ie(l,3)),this.setAttribute("normal",new ie(h,3)),this.setAttribute("uv",new ie(u,2));function p(g,v,m,y,_,w,b,T,A,N,P){const Y=w/A,O=b/N,U=w/2,q=b/2,z=T/2,G=A+1,K=N+1;let pe=0,ne=0;const oe=new x;for(let se=0;se<K;se++){const de=se*O-q;for(let Ge=0;Ge<G;Ge++){const Be=Ge*Y-U;oe[g]=Be*y,oe[v]=de*_,oe[m]=z,l.push(oe.x,oe.y,oe.z),oe[g]=0,oe[v]=0,oe[m]=T>0?1:-1,h.push(oe.x,oe.y,oe.z),u.push(Ge/A),u.push(1-se/N),pe+=1}}for(let se=0;se<N;se++)for(let de=0;de<A;de++){const Ge=f+de+G*se,Be=f+de+G*(se+1),re=f+(de+1)+G*(se+1),ve=f+(de+1)+G*se;c.push(Ge,Be,ve),c.push(Be,re,ve),ne+=6}a.addGroup(d,ne,P),d+=ne,f+=pe}}}function ar(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function wt(e){const t={};for(let n=0;n<e.length;n++){const i=ar(e[n]);for(const r in i)t[r]=i[r]}return t}const Gd={clone:ar,merge:wt};var kd=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Hd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function Nt(e){Te.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=kd,this.fragmentShader=Hd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}Nt.prototype=Object.create(Te.prototype);Nt.prototype.constructor=Nt;Nt.prototype.isShaderMaterial=!0;Nt.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ar(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this};Nt.prototype.toJSON=function(e){const t=Te.prototype.toJSON.call(this,e);t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t};function On(){te.call(this),this.type="Camera",this.matrixWorldInverse=new Fe,this.projectionMatrix=new Fe,this.projectionMatrixInverse=new Fe}On.prototype=Object.assign(Object.create(te.prototype),{constructor:On,isCamera:!0,copy:function(e,t){return te.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new x),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){te.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){te.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function dt(e,t,n,i){On.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}dt.prototype=Object.assign(Object.create(On.prototype),{constructor:dt,isPerspectiveCamera:!0,copy:function(e,t){return On.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=Oe.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(Oe.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Oe.RAD2DEG*2*Math.atan(Math.tan(Oe.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){let e=this.near,t=e*Math.tan(Oe.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,o=this.view;if(this.view!==null&&this.view.enabled){const a=o.fullWidth,c=o.fullHeight;r+=o.offsetX*i/a,t-=o.offsetY*n/c,i*=o.width/a,n*=o.height/c}const s=this.filmOffset;s!==0&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=te.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Gi=90,ki=1;function Qr(e,t,n){if(te.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new dt(Gi,ki,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new x(1,0,0)),this.add(i);const r=new dt(Gi,ki,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new x(-1,0,0)),this.add(r);const o=new dt(Gi,ki,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new x(0,1,0)),this.add(o);const s=new dt(Gi,ki,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new x(0,-1,0)),this.add(s);const a=new dt(Gi,ki,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new x(0,0,1)),this.add(a);const c=new dt(Gi,ki,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new x(0,0,-1)),this.add(c),this.update=function(l,h){this.parent===null&&this.updateMatrixWorld();const u=l.xr.enabled,f=l.getRenderTarget();l.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,l.setRenderTarget(n,0),l.render(h,i),l.setRenderTarget(n,1),l.render(h,r),l.setRenderTarget(n,2),l.render(h,o),l.setRenderTarget(n,3),l.render(h,s),l.setRenderTarget(n,4),l.render(h,a),n.texture.generateMipmaps=d,l.setRenderTarget(n,5),l.render(h,c),l.setRenderTarget(f),l.xr.enabled=u},this.clear=function(l,h,u,f){const d=l.getRenderTarget();for(let p=0;p<6;p++)l.setRenderTarget(n,p),l.clear(h,u,f);l.setRenderTarget(d)}}Qr.prototype=Object.create(te.prototype);Qr.prototype.constructor=Qr;function Kr(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),qt.call(this,e,e,t)}Kr.prototype=Object.create(qt.prototype);Kr.prototype.constructor=Kr;Kr.prototype.isWebGLCubeRenderTarget=!0;Kr.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;const n=new sr,i={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join(`
`),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#include <common>","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV = equirectUv( direction );","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join(`
`)},r=new Nt({type:"CubemapFromEquirect",uniforms:ar(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:vt,blending:ei});r.uniforms.tEquirect.value=t;const o=new ee(new Ct(5,5,5),r);return n.add(o),new Qr(1,10,this).update(e,n),o.geometry.dispose(),o.material.dispose(),this};function cr(e,t,n,i,r,o,s,a,c,l,h,u){et.call(this,null,o,s,a,c,l,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=c!==void 0?c:pt,this.minFilter=l!==void 0?l:pt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}cr.prototype=Object.create(et.prototype);cr.prototype.constructor=cr;cr.prototype.isDataTexture=!0;const Hi=new kn,qo=new x;function Ro(e,t,n,i,r,o){this.planes=[e!==void 0?e:new pn,t!==void 0?t:new pn,n!==void 0?n:new pn,i!==void 0?i:new pn,r!==void 0?r:new pn,o!==void 0?o:new pn]}Object.assign(Ro.prototype,{set:function(e,t,n,i,r,o){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(o),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromProjectionMatrix:function(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],o=n[2],s=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],f=n[9],d=n[10],p=n[11],g=n[12],v=n[13],m=n[14],y=n[15];return t[0].setComponents(s-i,h-a,p-u,y-g).normalize(),t[1].setComponents(s+i,h+a,p+u,y+g).normalize(),t[2].setComponents(s+r,h+c,p+f,y+v).normalize(),t[3].setComponents(s-r,h-c,p-f,y-v).normalize(),t[4].setComponents(s-o,h-l,p-d,y-m).normalize(),t[5].setComponents(s+o,h+l,p+d,y+m).normalize(),this},intersectsObject:function(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Hi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Hi)},intersectsSprite:function(e){return Hi.center.set(0,0,0),Hi.radius=.7071067811865476,Hi.applyMatrix4(e.matrixWorld),this.intersectsSphere(Hi)},intersectsSphere:function(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0},intersectsBox:function(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(qo.x=i.normal.x>0?e.max.x:e.min.x,qo.y=i.normal.y>0?e.max.y:e.min.y,qo.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(qo)<0)return!1}return!0},containsPoint:function(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}});const le={common:{diffuse:{value:new ce(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new At},uv2Transform:{value:new At},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new V(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ce(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new ce(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new At}},sprite:{diffuse:{value:new ce(15658734)},opacity:{value:1},center:{value:new V(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new At}}};function hh(){let e=null,t=!1,n=null;function i(r,o){t!==!1&&(n(r,o),e.requestAnimationFrame(i))}return{start:function(){t!==!0&&n!==null&&(e.requestAnimationFrame(i),t=!0)},stop:function(){t=!1},setAnimationLoop:function(r){n=r},setContext:function(r){e=r}}}function Vd(e,t){const n=t.isWebGL2,i=new WeakMap;function r(l,h){const u=l.array,f=l.usage,d=e.createBuffer();e.bindBuffer(h,d),e.bufferData(h,u,f),l.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:u instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function o(l,h,u){const f=h.array,d=h.updateRange;e.bindBuffer(u,l),d.count===-1?e.bufferSubData(u,0,f):(n?e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function s(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=i.get(l);h&&(e.deleteBuffer(h.buffer),i.delete(l))}function c(l,h){l.isInterleavedBufferAttribute&&(l=l.data);const u=i.get(l);u===void 0?i.set(l,r(l,h)):u.version<l.version&&(o(u.buffer,l,h),u.version=l.version)}return{get:s,remove:a,update:c}}function Es(e,t,n,i){Ce.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new Rt(e,t,n,i)),this.mergeVertices()}Es.prototype=Object.create(Ce.prototype);Es.prototype.constructor=Es;function Rt(e,t,n,i){he.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},e=e||1,t=t||1;const r=e/2,o=t/2,s=Math.floor(n)||1,a=Math.floor(i)||1,c=s+1,l=a+1,h=e/s,u=t/a,f=[],d=[],p=[],g=[];for(let v=0;v<l;v++){const m=v*u-o;for(let y=0;y<c;y++){const _=y*h-r;d.push(_,-m,0),p.push(0,0,1),g.push(y/s),g.push(1-v/a)}}for(let v=0;v<a;v++)for(let m=0;m<s;m++){const y=m+c*v,_=m+c*(v+1),w=m+1+c*(v+1),b=m+1+c*v;f.push(y,_,b),f.push(_,w,b)}this.setIndex(f),this.setAttribute("position",new ie(d,3)),this.setAttribute("normal",new ie(p,3)),this.setAttribute("uv",new ie(g,2))}Rt.prototype=Object.create(he.prototype);Rt.prototype.constructor=Rt;var Wd=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,jd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,qd=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Xd=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Yd=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Zd="vec3 transformed = vec3( position );",Jd=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,$d=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha  = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Qd=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Kd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,ep=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,tp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,np=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,ip=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,rp=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,op=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,sp=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,ap=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
  return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,cp=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_maxMipLevel 8.0
#define cubeUV_minMipLevel 4.0
#define cubeUV_maxTileSize 256.0
#define cubeUV_minTileSize 16.0
float getFace(vec3 direction) {
    vec3 absDirection = abs(direction);
    float face = -1.0;
    if (absDirection.x > absDirection.z) {
      if (absDirection.x > absDirection.y)
        face = direction.x > 0.0 ? 0.0 : 3.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    } else {
      if (absDirection.z > absDirection.y)
        face = direction.z > 0.0 ? 2.0 : 5.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    }
    return face;
}
vec2 getUV(vec3 direction, float face) {
    vec2 uv;
    if (face == 0.0) {
      uv = vec2(direction.z, direction.y) / abs(direction.x);    } else if (face == 1.0) {
      uv = vec2(-direction.x, -direction.z) / abs(direction.y);    } else if (face == 2.0) {
      uv = vec2(-direction.x, direction.y) / abs(direction.z);    } else if (face == 3.0) {
      uv = vec2(-direction.z, direction.y) / abs(direction.x);    } else if (face == 4.0) {
      uv = vec2(-direction.x, direction.z) / abs(direction.y);    } else {
      uv = vec2(direction.x, direction.y) / abs(direction.z);    }
    return 0.5 * (uv + 1.0);
}
vec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
  float face = getFace(direction);
  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
  mipInt = max(mipInt, cubeUV_minMipLevel);
  float faceSize = exp2(mipInt);
  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
  vec2 uv = getUV(direction, face) * (faceSize - 1.0);
  vec2 f = fract(uv);
  uv += 0.5 - f;
  if (face > 2.0) {
    uv.y += faceSize;
    face -= 3.0;
  }
  uv.x += face * faceSize;
  if(mipInt < cubeUV_maxMipLevel){
    uv.y += 2.0 * cubeUV_maxTileSize;
  }
  uv.y += filterInt * 2.0 * cubeUV_minTileSize;
  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
  uv *= texelSize;
  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x += texelSize;
  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.y += texelSize;
  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x -= texelSize;
  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  vec3 tm = mix(tl, tr, f.x);
  vec3 bm = mix(bl, br, f.x);
  return mix(tm, bm, f.y);
}
#define r0 1.0
#define v0 0.339
#define m0 -2.0
#define r1 0.8
#define v1 0.276
#define m1 -1.0
#define r4 0.4
#define v4 0.046
#define m4 2.0
#define r5 0.305
#define v5 0.016
#define m5 3.0
#define r6 0.21
#define v6 0.0038
#define m6 4.0
float roughnessToMip(float roughness) {
  float mip = 0.0;
  if (roughness >= r1) {
    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
  } else if (roughness >= r4) {
    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
  } else if (roughness >= r5) {
    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
  } else if (roughness >= r6) {
    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
  } else {
    mip = -2.0 * log2(1.16 * roughness);  }
  return mip;
}
vec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {
  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);
  float mipF = fract(mip);
  float mipInt = floor(mip);
  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);
  if (mipF == 0.0) {
    return vec4(color0, 1.0);
  } else {
    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);
    return vec4(mix(color0, color1, mipF), 1.0);
  }
}
#endif`,lp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,up=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,hp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,fp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,dp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,pp="gl_FragColor = linearToOutputTexel( gl_FragColor );",mp=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,gp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		}  else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		reflectVec = normalize( reflectVec );
		vec2 sampleUV = equirectUv( reflectVec );
		vec4 envColor = texture2D( envMap, sampleUV );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,yp=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,vp=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,xp=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_p=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) { 
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,bp=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,wp=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,Mp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Sp=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Ep=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,Tp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,Ap=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Lp=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Pp=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
		struct PointLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,Cp=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
		  vec3 reflectVec = reflect( -viewDir, normal );
		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV = equirectUv( reflectVec );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,Rp=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Ip=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Dp=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Op=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Np=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,Fp=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Bp=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,zp=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,Up=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Gp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,kp=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Hp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Vp=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Wp=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,jp=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,qp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Xp=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Yp=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Zp=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Jp=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,$p=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Qp=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += morphTarget4 * morphTargetInfluences[ 4 ];
	transformed += morphTarget5 * morphTargetInfluences[ 5 ];
	transformed += morphTarget6 * morphTargetInfluences[ 6 ];
	transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Kp=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,em=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,tm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,nm=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,im=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,rm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,om=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,sm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,am=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cm=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,lm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,um=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,hm=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,fm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,dm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,pm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,mm=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,gm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ym=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,vm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,xm=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,_m=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,bm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,wm=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Mm=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,Sm=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Em=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Tm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Am=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Lm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Pm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Cm=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,Rm=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Im=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Dm=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Om=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Nm=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Fm=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Bm=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,zm=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Um=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Gm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,km=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Hm=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Vm=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wm=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,jm=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qm=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Xm=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ym=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Zm=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Jm=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$m=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qm=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Km=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSPARENCY
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSPARENCY
	uniform float transparency;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSPARENCY
		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eg=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tg=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,ng=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,ig=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,rg=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,og=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sg=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ag=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,cg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const We={alphamap_fragment:Wd,alphamap_pars_fragment:jd,alphatest_fragment:qd,aomap_fragment:Xd,aomap_pars_fragment:Yd,begin_vertex:Zd,beginnormal_vertex:Jd,bsdfs:$d,bumpmap_pars_fragment:Qd,clipping_planes_fragment:Kd,clipping_planes_pars_fragment:ep,clipping_planes_pars_vertex:tp,clipping_planes_vertex:np,color_fragment:ip,color_pars_fragment:rp,color_pars_vertex:op,color_vertex:sp,common:ap,cube_uv_reflection_fragment:cp,defaultnormal_vertex:lp,displacementmap_pars_vertex:up,displacementmap_vertex:hp,emissivemap_fragment:fp,emissivemap_pars_fragment:dp,encodings_fragment:pp,encodings_pars_fragment:mp,envmap_fragment:gp,envmap_common_pars_fragment:yp,envmap_pars_fragment:vp,envmap_pars_vertex:xp,envmap_physical_pars_fragment:Cp,envmap_vertex:_p,fog_vertex:bp,fog_pars_vertex:wp,fog_fragment:Mp,fog_pars_fragment:Sp,gradientmap_pars_fragment:Ep,lightmap_fragment:Tp,lightmap_pars_fragment:Ap,lights_lambert_vertex:Lp,lights_pars_begin:Pp,lights_toon_fragment:Rp,lights_toon_pars_fragment:Ip,lights_phong_fragment:Dp,lights_phong_pars_fragment:Op,lights_physical_fragment:Np,lights_physical_pars_fragment:Fp,lights_fragment_begin:Bp,lights_fragment_maps:zp,lights_fragment_end:Up,logdepthbuf_fragment:Gp,logdepthbuf_pars_fragment:kp,logdepthbuf_pars_vertex:Hp,logdepthbuf_vertex:Vp,map_fragment:Wp,map_pars_fragment:jp,map_particle_fragment:qp,map_particle_pars_fragment:Xp,metalnessmap_fragment:Yp,metalnessmap_pars_fragment:Zp,morphnormal_vertex:Jp,morphtarget_pars_vertex:$p,morphtarget_vertex:Qp,normal_fragment_begin:Kp,normal_fragment_maps:em,normalmap_pars_fragment:tm,clearcoat_normal_fragment_begin:nm,clearcoat_normal_fragment_maps:im,clearcoat_pars_fragment:rm,packing:om,premultiplied_alpha_fragment:sm,project_vertex:am,dithering_fragment:cm,dithering_pars_fragment:lm,roughnessmap_fragment:um,roughnessmap_pars_fragment:hm,shadowmap_pars_fragment:fm,shadowmap_pars_vertex:dm,shadowmap_vertex:pm,shadowmask_pars_fragment:mm,skinbase_vertex:gm,skinning_pars_vertex:ym,skinning_vertex:vm,skinnormal_vertex:xm,specularmap_fragment:_m,specularmap_pars_fragment:bm,tonemapping_fragment:wm,tonemapping_pars_fragment:Mm,uv_pars_fragment:Sm,uv_pars_vertex:Em,uv_vertex:Tm,uv2_pars_fragment:Am,uv2_pars_vertex:Lm,uv2_vertex:Pm,worldpos_vertex:Cm,background_frag:Rm,background_vert:Im,cube_frag:Dm,cube_vert:Om,depth_frag:Nm,depth_vert:Fm,distanceRGBA_frag:Bm,distanceRGBA_vert:zm,equirect_frag:Um,equirect_vert:Gm,linedashed_frag:km,linedashed_vert:Hm,meshbasic_frag:Vm,meshbasic_vert:Wm,meshlambert_frag:jm,meshlambert_vert:qm,meshmatcap_frag:Xm,meshmatcap_vert:Ym,meshtoon_frag:Zm,meshtoon_vert:Jm,meshphong_frag:$m,meshphong_vert:Qm,meshphysical_frag:Km,meshphysical_vert:eg,normal_frag:tg,normal_vert:ng,points_frag:ig,points_vert:rg,shadow_frag:og,shadow_vert:sg,sprite_frag:ag,sprite_vert:cg},Cn={basic:{uniforms:wt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.fog]),vertexShader:We.meshbasic_vert,fragmentShader:We.meshbasic_frag},lambert:{uniforms:wt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.fog,le.lights,{emissive:{value:new ce(0)}}]),vertexShader:We.meshlambert_vert,fragmentShader:We.meshlambert_frag},phong:{uniforms:wt([le.common,le.specularmap,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.fog,le.lights,{emissive:{value:new ce(0)},specular:{value:new ce(1118481)},shininess:{value:30}}]),vertexShader:We.meshphong_vert,fragmentShader:We.meshphong_frag},standard:{uniforms:wt([le.common,le.envmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.roughnessmap,le.metalnessmap,le.fog,le.lights,{emissive:{value:new ce(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:We.meshphysical_vert,fragmentShader:We.meshphysical_frag},toon:{uniforms:wt([le.common,le.specularmap,le.aomap,le.lightmap,le.emissivemap,le.bumpmap,le.normalmap,le.displacementmap,le.gradientmap,le.fog,le.lights,{emissive:{value:new ce(0)},specular:{value:new ce(1118481)},shininess:{value:30}}]),vertexShader:We.meshtoon_vert,fragmentShader:We.meshtoon_frag},matcap:{uniforms:wt([le.common,le.bumpmap,le.normalmap,le.displacementmap,le.fog,{matcap:{value:null}}]),vertexShader:We.meshmatcap_vert,fragmentShader:We.meshmatcap_frag},points:{uniforms:wt([le.points,le.fog]),vertexShader:We.points_vert,fragmentShader:We.points_frag},dashed:{uniforms:wt([le.common,le.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:We.linedashed_vert,fragmentShader:We.linedashed_frag},depth:{uniforms:wt([le.common,le.displacementmap]),vertexShader:We.depth_vert,fragmentShader:We.depth_frag},normal:{uniforms:wt([le.common,le.bumpmap,le.normalmap,le.displacementmap,{opacity:{value:1}}]),vertexShader:We.normal_vert,fragmentShader:We.normal_frag},sprite:{uniforms:wt([le.sprite,le.fog]),vertexShader:We.sprite_vert,fragmentShader:We.sprite_frag},background:{uniforms:{uvTransform:{value:new At},t2D:{value:null}},vertexShader:We.background_vert,fragmentShader:We.background_frag},cube:{uniforms:wt([le.envmap,{opacity:{value:1}}]),vertexShader:We.cube_vert,fragmentShader:We.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:We.equirect_vert,fragmentShader:We.equirect_frag},distanceRGBA:{uniforms:wt([le.common,le.displacementmap,{referencePosition:{value:new x},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:We.distanceRGBA_vert,fragmentShader:We.distanceRGBA_frag},shadow:{uniforms:wt([le.lights,le.fog,{color:{value:new ce(0)},opacity:{value:1}}]),vertexShader:We.shadow_vert,fragmentShader:We.shadow_frag}};Cn.physical={uniforms:wt([Cn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new V(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ce(0)},transparency:{value:0}}]),vertexShader:We.meshphysical_vert,fragmentShader:We.meshphysical_frag};function lg(e,t,n,i){const r=new ce(0);let o=0,s,a,c=null,l=0,h=null;function u(d,p,g,v){let m=p.background;const y=e.xr,_=y.getSession&&y.getSession();if(_&&_.environmentBlendMode==="additive"&&(m=null),m===null?f(r,o):m&&m.isColor&&(f(m,1),v=!0),(e.autoClear||v)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===Po)){a===void 0&&(a=new ee(new Ct(1,1,1),new Nt({type:"BackgroundCubeMaterial",uniforms:ar(Cn.cube.uniforms),vertexShader:Cn.cube.vertexShader,fragmentShader:Cn.cube.fragmentShader,side:vt,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(b,T,A){this.matrixWorld.copyPosition(A.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(a));const w=m.isWebGLCubeRenderTarget?m.texture:m;a.material.uniforms.envMap.value=w,a.material.uniforms.flipEnvMap.value=w.isCubeTexture?-1:1,(c!==m||l!==w.version||h!==e.toneMapping)&&(a.material.needsUpdate=!0,c=m,l=w.version,h=e.toneMapping),d.unshift(a,a.geometry,a.material,0,0,null)}else m&&m.isTexture&&(s===void 0&&(s=new ee(new Rt(2,2),new Nt({type:"BackgroundMaterial",uniforms:ar(Cn.background.uniforms),vertexShader:Cn.background.vertexShader,fragmentShader:Cn.background.fragmentShader,side:Sr,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(s)),s.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||l!==m.version||h!==e.toneMapping)&&(s.material.needsUpdate=!0,c=m,l=m.version,h=e.toneMapping),d.unshift(s,s.geometry,s.material,0,0,null))}function f(d,p){t.buffers.color.setClear(d.r,d.g,d.b,p,i)}return{getClearColor:function(){return r},setClearColor:function(d,p){r.set(d),o=p!==void 0?p:1,f(r,o)},getClearAlpha:function(){return o},setClearAlpha:function(d){o=d,f(r,o)},render:u}}function ug(e,t,n,i){const r=i.isWebGL2;let o;function s(l){o=l}function a(l,h){e.drawArrays(o,l,h),n.update(h,o)}function c(l,h,u,f){if(f===0)return;let d,p;if(r)d=e,p="drawArraysInstanced";else if(d=t.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](o,h,u,f),n.update(u,o,f)}this.setMode=s,this.render=a,this.renderInstances=c}function hg(e,t,n){let i;function r(){if(i!==void 0)return i;const T=t.get("EXT_texture_filter_anisotropic");return T!==null?i=e.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function o(T){if(T==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";T="mediump"}return T==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&e instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const c=o(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=n.logarithmicDepthBuffer===!0,h=e.getParameter(34930),u=e.getParameter(35660),f=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),g=e.getParameter(36347),v=e.getParameter(36348),m=e.getParameter(36349),y=u>0,_=s||!!t.get("OES_texture_float"),w=y&&_,b=s?e.getParameter(36183):0;return{isWebGL2:s,getMaxAnisotropy:r,getMaxPrecision:o,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:g,maxVaryings:v,maxFragmentUniforms:m,vertexTextures:y,floatFragmentTextures:_,floatVertexTextures:w,maxSamples:b}}function fg(){const e=this;let t=null,n=0,i=!1,r=!1;const o=new pn,s=new At,a={value:null,needsUpdate:!1};this.uniform=a,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u,f){const d=h.length!==0||u||n!==0||i;return i=u,t=l(h,f,0),n=h.length,d},this.beginShadows=function(){r=!0,l(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,u,f,d,p,g){if(!i||h===null||h.length===0||r&&!f)r?l(null):c();else{const v=r?0:n,m=v*4;let y=p.clippingState||null;a.value=y,y=l(h,d,m,g);for(let _=0;_!==m;++_)y[_]=t[_];p.clippingState=y,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=v}};function c(){a.value!==t&&(a.value=t,a.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function l(h,u,f,d){let p=h!==null?h.length:0,g=null;if(p!==0){if(g=a.value,d!==!0||g===null){const v=f+p*4,m=u.matrixWorldInverse;s.getNormalMatrix(m),(g===null||g.length<v)&&(g=new Float32Array(v));for(let y=0,_=f;y!==p;++y,_+=4)o.copy(h[y]).applyMatrix4(m,s),o.normal.toArray(g,_),g[_+3]=o.constant}a.value=g,a.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,g}}function dg(e){const t={};return{get:function(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=i,i}}}function pg(e,t,n){const i=new WeakMap,r=new WeakMap;function o(h){const u=h.target,f=i.get(u);f.index!==null&&t.remove(f.index);for(const p in f.attributes)t.remove(f.attributes[p]);u.removeEventListener("dispose",o),i.delete(u);const d=r.get(f);d&&(t.remove(d),r.delete(f)),n.memory.geometries--}function s(h,u){let f=i.get(u);return f||(u.addEventListener("dispose",o),u.isBufferGeometry?f=u:u.isGeometry&&(u._bufferGeometry===void 0&&(u._bufferGeometry=new he().setFromObject(h)),f=u._bufferGeometry),i.set(u,f),n.memory.geometries++,f)}function a(h){const u=h.index,f=h.attributes;u!==null&&t.update(u,34963);for(const p in f)t.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const g=d[p];for(let v=0,m=g.length;v<m;v++)t.update(g[v],34962)}}function c(h){const u=[],f=h.index,d=h.attributes.position;let p=0;if(f!==null){const m=f.array;p=f.version;for(let y=0,_=m.length;y<_;y+=3){const w=m[y+0],b=m[y+1],T=m[y+2];u.push(w,b,b,T,T,w)}}else{const m=d.array;p=d.version;for(let y=0,_=m.length/3-1;y<_;y+=3){const w=y+0,b=y+1,T=y+2;u.push(w,b,b,T,T,w)}}const g=new(lh(u)>65535?$r:Jr)(u,1);g.version=p,t.update(g,34963);const v=r.get(h);v&&t.remove(v),r.set(h,g)}function l(h){const u=r.get(h);if(u){const f=h.index;f!==null&&u.version<f.version&&c(h)}else c(h);return r.get(h)}return{get:s,update:a,getWireframeAttribute:l}}function mg(e,t,n,i){const r=i.isWebGL2;let o;function s(f){o=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,d){e.drawElements(o,d,a,f*c),n.update(d,o)}function u(f,d,p,g){if(g===0)return;let v,m;if(r)v=e,m="drawElementsInstanced";else if(v=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[m](o,p,a,d*c,g),n.update(p,o,g)}this.setMode=s,this.setIndex=l,this.render=h,this.renderInstances=u}function gg(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(o,s,a){switch(a=a||1,n.calls++,s){case 4:n.triangles+=a*(o/3);break;case 1:n.lines+=a*(o/2);break;case 3:n.lines+=a*(o-1);break;case 2:n.lines+=a*o;break;case 0:n.points+=a*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function yg(e,t){return Math.abs(t[1])-Math.abs(e[1])}function vg(e){const t={},n=new Float32Array(8);function i(r,o,s,a){const c=r.morphTargetInfluences,l=c===void 0?0:c.length;let h=t[o.id];if(h===void 0){h=[];for(let g=0;g<l;g++)h[g]=[g,0];t[o.id]=h}const u=s.morphTargets&&o.morphAttributes.position,f=s.morphNormals&&o.morphAttributes.normal;for(let g=0;g<l;g++)h[g][1]!==0&&(u&&o.deleteAttribute("morphTarget"+g),f&&o.deleteAttribute("morphNormal"+g));for(let g=0;g<l;g++){const v=h[g];v[0]=g,v[1]=c[g]}h.sort(yg);let d=0;for(let g=0;g<8;g++){const v=h[g];if(v){const m=v[0],y=v[1];if(y){u&&o.setAttribute("morphTarget"+g,u[m]),f&&o.setAttribute("morphNormal"+g,f[m]),n[g]=y,d+=y;continue}}n[g]=0}const p=o.morphTargetsRelative?1:1-d;a.getUniforms().setValue(e,"morphTargetBaseInfluence",p),a.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:i}}function xg(e,t,n,i){let r=new WeakMap;function o(a){const c=i.render.frame,l=a.geometry,h=t.get(a,l);return r.get(h)!==c&&(l.isGeometry&&h.updateFromObject(a),t.update(h),r.set(h,c)),a.isInstancedMesh&&n.update(a.instanceMatrix,34962),h}function s(){r=new WeakMap}return{update:o,dispose:s}}function oi(e,t,n,i,r,o,s,a,c,l){e=e!==void 0?e:[],t=t!==void 0?t:Qc,s=s!==void 0?s:xi,et.call(this,e,t,n,i,r,o,s,a,c,l),this.flipY=!1}oi.prototype=Object.create(et.prototype);oi.prototype.constructor=oi;oi.prototype.isCubeTexture=!0;Object.defineProperty(oi.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function eo(e,t,n,i){et.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=pt,this.minFilter=pt,this.wrapR=It,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}eo.prototype=Object.create(et.prototype);eo.prototype.constructor=eo;eo.prototype.isDataTexture2DArray=!0;function to(e,t,n,i){et.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=pt,this.minFilter=pt,this.wrapR=It,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}to.prototype=Object.create(et.prototype);to.prototype.constructor=to;to.prototype.isDataTexture3D=!0;const fh=new et,_g=new eo,bg=new to,dh=new oi,Gl=[],kl=[],Hl=new Float32Array(16),Vl=new Float32Array(9),Wl=new Float32Array(4);function Ar(e,t,n){const i=e[0];if(i<=0||i>0)return e;let r=t*n,o=Gl[r];if(o===void 0&&(o=new Float32Array(r),Gl[r]=o),t!==0){i.toArray(o,0);for(let s=1,a=0;s!==t;++s)a+=n,e[s].toArray(o,a)}return o}function Yt(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Ut(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function ph(e,t){let n=kl[t];n===void 0&&(n=new Int32Array(t),kl[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function wg(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Mg(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Yt(n,t))return;e.uniform2fv(this.addr,t),Ut(n,t)}}function Sg(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Yt(n,t))return;e.uniform3fv(this.addr,t),Ut(n,t)}}function Eg(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Yt(n,t))return;e.uniform4fv(this.addr,t),Ut(n,t)}}function Tg(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Yt(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ut(n,t)}else{if(Yt(n,i))return;Wl.set(i),e.uniformMatrix2fv(this.addr,!1,Wl),Ut(n,i)}}function Ag(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Yt(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ut(n,t)}else{if(Yt(n,i))return;Vl.set(i),e.uniformMatrix3fv(this.addr,!1,Vl),Ut(n,i)}}function Lg(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Yt(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ut(n,t)}else{if(Yt(n,i))return;Hl.set(i),e.uniformMatrix4fv(this.addr,!1,Hl),Ut(n,i)}}function Pg(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||fh,r)}function Cg(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||_g,r)}function Rg(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||bg,r)}function Ig(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||dh,r)}function Dg(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Og(e,t){const n=this.cache;Yt(n,t)||(e.uniform2iv(this.addr,t),Ut(n,t))}function Ng(e,t){const n=this.cache;Yt(n,t)||(e.uniform3iv(this.addr,t),Ut(n,t))}function Fg(e,t){const n=this.cache;Yt(n,t)||(e.uniform4iv(this.addr,t),Ut(n,t))}function Bg(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function zg(e){switch(e){case 5126:return wg;case 35664:return Mg;case 35665:return Sg;case 35666:return Eg;case 35674:return Tg;case 35675:return Ag;case 35676:return Lg;case 5124:case 35670:return Dg;case 35667:case 35671:return Og;case 35668:case 35672:return Ng;case 35669:case 35673:return Fg;case 5125:return Bg;case 35678:case 36198:case 36298:case 36306:case 35682:return Pg;case 35679:case 36299:case 36307:return Rg;case 35680:case 36300:case 36308:case 36293:return Ig;case 36289:case 36303:case 36311:case 36292:return Cg}}function Ug(e,t){e.uniform1fv(this.addr,t)}function Gg(e,t){e.uniform1iv(this.addr,t)}function kg(e,t){e.uniform2iv(this.addr,t)}function Hg(e,t){e.uniform3iv(this.addr,t)}function Vg(e,t){e.uniform4iv(this.addr,t)}function Wg(e,t){const n=Ar(t,this.size,2);e.uniform2fv(this.addr,n)}function jg(e,t){const n=Ar(t,this.size,3);e.uniform3fv(this.addr,n)}function qg(e,t){const n=Ar(t,this.size,4);e.uniform4fv(this.addr,n)}function Xg(e,t){const n=Ar(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Yg(e,t){const n=Ar(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Zg(e,t){const n=Ar(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Jg(e,t,n){const i=t.length,r=ph(n,i);e.uniform1iv(this.addr,r);for(let o=0;o!==i;++o)n.safeSetTexture2D(t[o]||fh,r[o])}function $g(e,t,n){const i=t.length,r=ph(n,i);e.uniform1iv(this.addr,r);for(let o=0;o!==i;++o)n.safeSetTextureCube(t[o]||dh,r[o])}function Qg(e){switch(e){case 5126:return Ug;case 35664:return Wg;case 35665:return jg;case 35666:return qg;case 35674:return Xg;case 35675:return Yg;case 35676:return Zg;case 5124:case 35670:return Gg;case 35667:case 35671:return kg;case 35668:case 35672:return Hg;case 35669:case 35673:return Vg;case 35678:case 36198:case 36298:case 36306:case 35682:return Jg;case 35680:case 36300:case 36308:case 36293:return $g}}function Kg(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=zg(t.type)}function mh(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Qg(t.type)}mh.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),Ut(t,e)};function gh(e){this.id=e,this.seq=[],this.map={}}gh.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const s=i[r];s.setValue(e,t[s.id],n)}};const za=/([\w\d_]+)(\])?(\[|\.)?/g;function jl(e,t){e.seq.push(t),e.map[t.id]=t}function e0(e,t,n){const i=e.name,r=i.length;for(za.lastIndex=0;;){const o=za.exec(i),s=za.lastIndex;let a=o[1],c=o[2]==="]",l=o[3];if(c&&(a=a|0),l===void 0||l==="["&&s+2===r){jl(n,l===void 0?new Kg(a,e,t):new mh(a,e,t));break}else{let u=n.map[a];u===void 0&&(u=new gh(a),jl(n,u)),n=u}}}function ti(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);e0(r,o,this)}}ti.prototype.setValue=function(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)};ti.prototype.setOptional=function(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)};ti.upload=function(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const s=t[r],a=n[s.id];a.needsUpdate!==!1&&s.setValue(e,a.value,i)}};ti.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n};function ql(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let t0=0;function n0(e){const t=e.split(`
`);for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function yh(e){switch(e){case Dt:return["Linear","( value )"];case ua:return["sRGB","( value )"];case rl:return["RGBE","( value )"];case rh:return["RGBM","( value, 7.0 )"];case oh:return["RGBM","( value, 16.0 )"];case sh:return["RGBD","( value, 256.0 )"];case il:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case _d:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e)}}function Xl(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const o=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+n0(o)}function Dr(e,t){const n=yh(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function i0(e,t){const n=yh(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function r0(e,t){let n;switch(t){case Ku:n="Linear";break;case bf:n="Reinhard";break;case wf:n="Uncharted2";break;case Mf:n="OptimizedCineon";break;case Sf:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function o0(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Gr).join(`
`)}function s0(e){const t=[];for(const n in e){const i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function a0(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const s=e.getActiveAttrib(t,r).name;n[s]=e.getAttribLocation(t,s)}return n}function Gr(e){return e!==""}function Yl(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Zl(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const c0=/^[ \t]*#include +<([\w\d./]+)>/gm;function lc(e){return e.replace(c0,l0)}function l0(e,t){const n=We[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return lc(n)}const u0=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,h0=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function Jl(e){return e.replace(h0,vh).replace(u0,f0)}function f0(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),vh(e,t,n,i)}function vh(e,t,n,i){let r="";for(let o=parseInt(t);o<parseInt(n);o++)r+=i.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return r}function $l(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function d0(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Yu?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Kh?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Ur&&(t="SHADOWMAP_TYPE_VSM"),t}function p0(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Qc:case Kc:t="ENVMAP_TYPE_CUBE";break;case Po:case tl:t="ENVMAP_TYPE_CUBE_UV";break;case eh:case el:t="ENVMAP_TYPE_EQUIREC";break}return t}function m0(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Kc:case el:t="ENVMAP_MODE_REFRACTION";break}return t}function g0(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case ca:t="ENVMAP_BLENDING_MULTIPLY";break;case xf:t="ENVMAP_BLENDING_MIX";break;case _f:t="ENVMAP_BLENDING_ADD";break}return t}function y0(e,t,n){const i=e.getContext(),r=n.defines;let o=n.vertexShader,s=n.fragmentShader;const a=d0(n),c=p0(n),l=m0(n),h=g0(n),u=e.gammaFactor>0?e.gammaFactor:1,f=n.isWebGL2?"":o0(n),d=s0(r),p=i.createProgram();let g,v;if(n.isRawShaderMaterial?(g=[d].filter(Gr).join(`
`),g.length>0&&(g+=`
`),v=[f,d].filter(Gr).join(`
`),v.length>0&&(v+=`
`)):(g=[$l(n),"#define SHADER_NAME "+n.shaderName,d,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+u,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+a:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Gr).join(`
`),v=[f,$l(n),"#define SHADER_NAME "+n.shaderName,d,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+u,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+a:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Hr?"#define TONE_MAPPING":"",n.toneMapping!==Hr?We.tonemapping_pars_fragment:"",n.toneMapping!==Hr?r0("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.outputEncoding||n.mapEncoding||n.matcapEncoding||n.envMapEncoding||n.emissiveMapEncoding||n.lightMapEncoding?We.encodings_pars_fragment:"",n.mapEncoding?Dr("mapTexelToLinear",n.mapEncoding):"",n.matcapEncoding?Dr("matcapTexelToLinear",n.matcapEncoding):"",n.envMapEncoding?Dr("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMapEncoding?Dr("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMapEncoding?Dr("lightMapTexelToLinear",n.lightMapEncoding):"",n.outputEncoding?i0("linearToOutputTexel",n.outputEncoding):"",n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Gr).join(`
`)),o=lc(o),o=Yl(o,n),o=Zl(o,n),s=lc(s),s=Yl(s,n),s=Zl(s,n),o=Jl(o),s=Jl(s),n.isWebGL2&&!n.isRawShaderMaterial){let A=!1;const N=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&o.match(N)!==null&&s.match(N)!==null&&(A=!0,o=o.replace(N,""),s=s.replace(N,"")),g=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,v=[`#version 300 es
`,"#define varying in",A?"":"out highp vec4 pc_fragColor;",A?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v}const m=g+o,y=v+s,_=ql(i,35633,m),w=ql(i,35632,y);if(i.attachShader(p,_),i.attachShader(p,w),n.index0AttributeName!==void 0?i.bindAttribLocation(p,0,n.index0AttributeName):n.morphTargets===!0&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),e.debug.checkShaderErrors){const A=i.getProgramInfoLog(p).trim(),N=i.getShaderInfoLog(_).trim(),P=i.getShaderInfoLog(w).trim();let Y=!0,O=!0;if(i.getProgramParameter(p,35714)===!1){Y=!1;const U=Xl(i,_,"vertex"),q=Xl(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(p,35715),"gl.getProgramInfoLog",A,U,q)}else A!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",A):(N===""||P==="")&&(O=!1);O&&(this.diagnostics={runnable:Y,programLog:A,vertexShader:{log:N,prefix:g},fragmentShader:{log:P,prefix:v}})}i.deleteShader(_),i.deleteShader(w);let b;this.getUniforms=function(){return b===void 0&&(b=new ti(i,p)),b};let T;return this.getAttributes=function(){return T===void 0&&(T=a0(i,p)),T},this.destroy=function(){i.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=t0++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=_,this.fragmentShader=w,this}function v0(e,t,n){const i=[],r=n.isWebGL2,o=n.logarithmicDepthBuffer,s=n.floatVertexTextures,a=n.maxVertexUniforms,c=n.vertexTextures;let l=n.precision;const h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},u=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function f(g,v){let m;if(v){const y=Cn[v];m={name:g.type,uniforms:Gd.clone(y.uniforms),vertexShader:y.vertexShader,fragmentShader:y.fragmentShader}}else m={name:g.type,uniforms:g.uniforms,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader};return m}function d(g){const m=g.skeleton.bones;if(s)return 1024;{const _=Math.floor((a-20)/4),w=Math.min(_,m.length);return w<m.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+m.length+" bones. This GPU supports "+w+"."),0):w}}function p(g){let v;return g?g.isTexture?v=g.encoding:g.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),v=g.texture.encoding):v=Dt,v}this.getParameters=function(g,v,m,y,_,w,b){const T=y.fog,A=g.isMeshStandardMaterial?y.environment:null,N=g.envMap||A,P=h[g.type],Y=b.isSkinnedMesh?d(b):0;g.precision!==null&&(l=n.getMaxPrecision(g.precision),l!==g.precision&&console.warn("THREE.WebGLProgram.getParameters:",g.precision,"not supported, using",l,"instead."));const O=f(g,P);g.onBeforeCompile(O,e);const U=e.getRenderTarget();return{isWebGL2:r,shaderID:P,shaderName:O.name,uniforms:O.uniforms,vertexShader:O.vertexShader,fragmentShader:O.fragmentShader,defines:g.defines,isRawShaderMaterial:g.isRawShaderMaterial,isShaderMaterial:g.isShaderMaterial,precision:l,instancing:b.isInstancedMesh===!0,supportsVertexTextures:c,outputEncoding:U!==null?p(U.texture):e.outputEncoding,map:!!g.map,mapEncoding:p(g.map),matcap:!!g.matcap,matcapEncoding:p(g.matcap),envMap:!!N,envMapMode:N&&N.mapping,envMapEncoding:p(N),envMapCubeUV:!!N&&(N.mapping===Po||N.mapping===tl),lightMap:!!g.lightMap,lightMapEncoding:p(g.lightMap),aoMap:!!g.aoMap,emissiveMap:!!g.emissiveMap,emissiveMapEncoding:p(g.emissiveMap),bumpMap:!!g.bumpMap,normalMap:!!g.normalMap,objectSpaceNormalMap:g.normalMapType===Md,tangentSpaceNormalMap:g.normalMapType===Er,clearcoatMap:!!g.clearcoatMap,clearcoatRoughnessMap:!!g.clearcoatRoughnessMap,clearcoatNormalMap:!!g.clearcoatNormalMap,displacementMap:!!g.displacementMap,roughnessMap:!!g.roughnessMap,metalnessMap:!!g.metalnessMap,specularMap:!!g.specularMap,alphaMap:!!g.alphaMap,gradientMap:!!g.gradientMap,sheen:!!g.sheen,combine:g.combine,vertexTangents:g.normalMap&&g.vertexTangents,vertexColors:g.vertexColors,vertexUvs:!!g.map||!!g.bumpMap||!!g.normalMap||!!g.specularMap||!!g.alphaMap||!!g.emissiveMap||!!g.roughnessMap||!!g.metalnessMap||!!g.clearcoatMap||!!g.clearcoatRoughnessMap||!!g.clearcoatNormalMap||!!g.displacementMap,uvsVertexOnly:!(g.map||g.bumpMap||g.normalMap||g.specularMap||g.alphaMap||g.emissiveMap||g.roughnessMap||g.metalnessMap||g.clearcoatNormalMap)&&!!g.displacementMap,fog:!!T,useFog:g.fog,fogExp2:T&&T.isFogExp2,flatShading:g.flatShading,sizeAttenuation:g.sizeAttenuation,logarithmicDepthBuffer:o,skinning:g.skinning&&Y>0,maxBones:Y,useVertexTexture:s,morphTargets:g.morphTargets,morphNormals:g.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:v.directional.length,numPointLights:v.point.length,numSpotLights:v.spot.length,numRectAreaLights:v.rectArea.length,numHemiLights:v.hemi.length,numDirLightShadows:v.directionalShadowMap.length,numPointLightShadows:v.pointShadowMap.length,numSpotLightShadows:v.spotShadowMap.length,numClippingPlanes:_,numClipIntersection:w,dithering:g.dithering,shadowMapEnabled:e.shadowMap.enabled&&m.length>0,shadowMapType:e.shadowMap.type,toneMapping:g.toneMapped?e.toneMapping:Hr,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:g.premultipliedAlpha,alphaTest:g.alphaTest,doubleSided:g.side===ri,flipSided:g.side===vt,depthPacking:g.depthPacking!==void 0?g.depthPacking:!1,index0AttributeName:g.index0AttributeName,extensionDerivatives:g.extensions&&g.extensions.derivatives,extensionFragDepth:g.extensions&&g.extensions.fragDepth,extensionDrawBuffers:g.extensions&&g.extensions.drawBuffers,extensionShaderTextureLOD:g.extensions&&g.extensions.shaderTextureLOD,rendererExtensionFragDepth:r||t.get("EXT_frag_depth")!==null,rendererExtensionDrawBuffers:r||t.get("WEBGL_draw_buffers")!==null,rendererExtensionShaderTextureLod:r||t.get("EXT_shader_texture_lod")!==null,onBeforeCompile:g.onBeforeCompile}},this.getProgramCacheKey=function(g){const v=[];if(g.shaderID?v.push(g.shaderID):(v.push(g.fragmentShader),v.push(g.vertexShader)),g.defines!==void 0)for(const m in g.defines)v.push(m),v.push(g.defines[m]);if(g.isRawShaderMaterial===void 0){for(let m=0;m<u.length;m++)v.push(g[u[m]]);v.push(e.outputEncoding),v.push(e.gammaFactor)}return v.push(g.onBeforeCompile.toString()),v.join()},this.acquireProgram=function(g,v){let m;for(let y=0,_=i.length;y<_;y++){const w=i[y];if(w.cacheKey===v){m=w,++m.usedTimes;break}}return m===void 0&&(m=new y0(e,v,g),i.push(m)),m},this.releaseProgram=function(g){if(--g.usedTimes===0){const v=i.indexOf(g);i[v]=i[i.length-1],i.pop(),g.destroy()}},this.programs=i}function x0(){let e=new WeakMap;function t(o){let s=e.get(o);return s===void 0&&(s={},e.set(o,s)),s}function n(o){e.delete(o)}function i(o,s,a){e.get(o)[s]=a}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function _0(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function b0(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ql(){const e=[];let t=0;const n=[],i=[],r={id:-1};function o(){t=0,n.length=0,i.length=0}function s(u,f,d,p,g,v){let m=e[t];return m===void 0?(m={id:u.id,object:u,geometry:f,material:d,program:d.program||r,groupOrder:p,renderOrder:u.renderOrder,z:g,group:v},e[t]=m):(m.id=u.id,m.object=u,m.geometry=f,m.material=d,m.program=d.program||r,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=g,m.group=v),t++,m}function a(u,f,d,p,g,v){const m=s(u,f,d,p,g,v);(d.transparent===!0?i:n).push(m)}function c(u,f,d,p,g,v){const m=s(u,f,d,p,g,v);(d.transparent===!0?i:n).unshift(m)}function l(u,f){n.length>1&&n.sort(u||_0),i.length>1&&i.sort(f||b0)}function h(){for(let u=t,f=e.length;u<f;u++){const d=e[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.program=null,d.group=null}}return{opaque:n,transparent:i,init:o,push:a,unshift:c,finish:h,sort:l}}function w0(){let e=new WeakMap;function t(r){const o=r.target;o.removeEventListener("dispose",t),e.delete(o)}function n(r,o){const s=e.get(r);let a;return s===void 0?(a=new Ql,e.set(r,new WeakMap),e.get(r).set(o,a),r.addEventListener("dispose",t)):(a=s.get(o),a===void 0&&(a=new Ql,s.set(o,a))),a}function i(){e=new WeakMap}return{get:n,dispose:i}}function M0(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new x,color:new ce};break;case"SpotLight":n={position:new x,direction:new x,color:new ce,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new x,color:new ce,distance:0,decay:0};break;case"HemisphereLight":n={direction:new x,skyColor:new ce,groundColor:new ce};break;case"RectAreaLight":n={color:new ce,position:new x,halfWidth:new x,halfHeight:new x};break}return e[t.id]=n,n}}}function S0(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new V};break;case"SpotLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new V};break;case"PointLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new V,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let E0=0;function T0(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function A0(){const e=new M0,t=S0(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new x);const i=new x,r=new Fe,o=new Fe;function s(a,c,l){let h=0,u=0,f=0;for(let A=0;A<9;A++)n.probe[A].set(0,0,0);let d=0,p=0,g=0,v=0,m=0,y=0,_=0,w=0;const b=l.matrixWorldInverse;a.sort(T0);for(let A=0,N=a.length;A<N;A++){const P=a[A],Y=P.color,O=P.intensity,U=P.distance,q=P.shadow&&P.shadow.map?P.shadow.map.texture:null;if(P.isAmbientLight)h+=Y.r*O,u+=Y.g*O,f+=Y.b*O;else if(P.isLightProbe)for(let z=0;z<9;z++)n.probe[z].addScaledVector(P.sh.coefficients[z],O);else if(P.isDirectionalLight){const z=e.get(P);if(z.color.copy(P.color).multiplyScalar(P.intensity),z.direction.setFromMatrixPosition(P.matrixWorld),i.setFromMatrixPosition(P.target.matrixWorld),z.direction.sub(i),z.direction.transformDirection(b),P.castShadow){const G=P.shadow,K=t.get(P);K.shadowBias=G.bias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.directionalShadow[d]=K,n.directionalShadowMap[d]=q,n.directionalShadowMatrix[d]=P.shadow.matrix,y++}n.directional[d]=z,d++}else if(P.isSpotLight){const z=e.get(P);if(z.position.setFromMatrixPosition(P.matrixWorld),z.position.applyMatrix4(b),z.color.copy(Y).multiplyScalar(O),z.distance=U,z.direction.setFromMatrixPosition(P.matrixWorld),i.setFromMatrixPosition(P.target.matrixWorld),z.direction.sub(i),z.direction.transformDirection(b),z.coneCos=Math.cos(P.angle),z.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),z.decay=P.decay,P.castShadow){const G=P.shadow,K=t.get(P);K.shadowBias=G.bias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.spotShadow[g]=K,n.spotShadowMap[g]=q,n.spotShadowMatrix[g]=P.shadow.matrix,w++}n.spot[g]=z,g++}else if(P.isRectAreaLight){const z=e.get(P);z.color.copy(Y).multiplyScalar(O),z.position.setFromMatrixPosition(P.matrixWorld),z.position.applyMatrix4(b),o.identity(),r.copy(P.matrixWorld),r.premultiply(b),o.extractRotation(r),z.halfWidth.set(P.width*.5,0,0),z.halfHeight.set(0,P.height*.5,0),z.halfWidth.applyMatrix4(o),z.halfHeight.applyMatrix4(o),n.rectArea[v]=z,v++}else if(P.isPointLight){const z=e.get(P);if(z.position.setFromMatrixPosition(P.matrixWorld),z.position.applyMatrix4(b),z.color.copy(P.color).multiplyScalar(P.intensity),z.distance=P.distance,z.decay=P.decay,P.castShadow){const G=P.shadow,K=t.get(P);K.shadowBias=G.bias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,K.shadowCameraNear=G.camera.near,K.shadowCameraFar=G.camera.far,n.pointShadow[p]=K,n.pointShadowMap[p]=q,n.pointShadowMatrix[p]=P.shadow.matrix,_++}n.point[p]=z,p++}else if(P.isHemisphereLight){const z=e.get(P);z.direction.setFromMatrixPosition(P.matrixWorld),z.direction.transformDirection(b),z.direction.normalize(),z.skyColor.copy(P.color).multiplyScalar(O),z.groundColor.copy(P.groundColor).multiplyScalar(O),n.hemi[m]=z,m++}}n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const T=n.hash;(T.directionalLength!==d||T.pointLength!==p||T.spotLength!==g||T.rectAreaLength!==v||T.hemiLength!==m||T.numDirectionalShadows!==y||T.numPointShadows!==_||T.numSpotShadows!==w)&&(n.directional.length=d,n.spot.length=g,n.rectArea.length=v,n.point.length=p,n.hemi.length=m,n.directionalShadow.length=y,n.directionalShadowMap.length=y,n.pointShadow.length=_,n.pointShadowMap.length=_,n.spotShadow.length=w,n.spotShadowMap.length=w,n.directionalShadowMatrix.length=y,n.pointShadowMatrix.length=_,n.spotShadowMatrix.length=w,T.directionalLength=d,T.pointLength=p,T.spotLength=g,T.rectAreaLength=v,T.hemiLength=m,T.numDirectionalShadows=y,T.numPointShadows=_,T.numSpotShadows=w,n.version=E0++)}return{setup:s,state:n}}function Kl(){const e=new A0,t=[],n=[];function i(){t.length=0,n.length=0}function r(c){t.push(c)}function o(c){n.push(c)}function s(c){e.setup(t,n,c)}return{init:i,state:{lightsArray:t,shadowsArray:n,lights:e},setupLights:s,pushLight:r,pushShadow:o}}function L0(){let e=new WeakMap;function t(r){const o=r.target;o.removeEventListener("dispose",t),e.delete(o)}function n(r,o){let s;return e.has(r)===!1?(s=new Kl,e.set(r,new WeakMap),e.get(r).set(o,s),r.addEventListener("dispose",t)):e.get(r).has(o)===!1?(s=new Kl,e.get(r).set(o,s)):s=e.get(r).get(o),s}function i(){e=new WeakMap}return{get:n,dispose:i}}function Mi(e){Te.call(this),this.type="MeshDepthMaterial",this.depthPacking=bd,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}Mi.prototype=Object.create(Te.prototype);Mi.prototype.constructor=Mi;Mi.prototype.isMeshDepthMaterial=!0;Mi.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function Si(e){Te.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new x,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}Si.prototype=Object.create(Te.prototype);Si.prototype.constructor=Si;Si.prototype.isMeshDistanceMaterial=!0;Si.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var P0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
  float mean = 0.0;
  float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );
  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
    #ifdef HORIZONAL_PASS
      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
      mean += distribution.x;
      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
    #else
      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );
      mean += depth;
      squared_mean += depth * depth;
    #endif
  }
  mean = mean * HALF_SAMPLE_RATE;
  squared_mean = squared_mean * HALF_SAMPLE_RATE;
  float std_dev = sqrt( squared_mean - mean * mean );
  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,C0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function xh(e,t,n){let i=new Ro;const r=new V,o=new V,s=new Qe,a=[],c=[],l={},h={0:vt,1:Sr,2:ri},u=new Nt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new V},radius:{value:4}},vertexShader:C0,fragmentShader:P0}),f=u.clone();f.defines.HORIZONAL_PASS=1;const d=new he;d.setAttribute("position",new Ae(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new ee(d,u),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Yu,this.render=function(b,T,A){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const N=e.getRenderTarget(),P=e.getActiveCubeFace(),Y=e.getActiveMipmapLevel(),O=e.state;O.setBlending(ei),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);for(let U=0,q=b.length;U<q;U++){const z=b[U],G=z.shadow;if(G===void 0){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}r.copy(G.mapSize);const K=G.getFrameExtents();if(r.multiply(K),o.copy(G.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(o.x=Math.floor(n/K.x),r.x=o.x*K.x,G.mapSize.x=o.x),r.y>n&&(o.y=Math.floor(n/K.y),r.y=o.y*K.y,G.mapSize.y=o.y)),G.map===null&&!G.isPointLightShadow&&this.type===Ur){const ne={minFilter:Mt,magFilter:Mt,format:jt};G.map=new qt(r.x,r.y,ne),G.map.texture.name=z.name+".shadowMap",G.mapPass=new qt(r.x,r.y,ne),G.camera.updateProjectionMatrix()}if(G.map===null){const ne={minFilter:pt,magFilter:pt,format:jt};G.map=new qt(r.x,r.y,ne),G.map.texture.name=z.name+".shadowMap",G.camera.updateProjectionMatrix()}e.setRenderTarget(G.map),e.clear();const pe=G.getViewportCount();for(let ne=0;ne<pe;ne++){const oe=G.getViewport(ne);s.set(o.x*oe.x,o.y*oe.y,o.x*oe.z,o.y*oe.w),O.viewport(s),G.updateMatrices(z,ne),i=G.getFrustum(),w(T,A,G.camera,z,this.type)}!G.isPointLightShadow&&this.type===Ur&&v(G,A)}g.needsUpdate=!1,e.setRenderTarget(N,P,Y)};function v(b,T){const A=t.update(p);u.uniforms.shadow_pass.value=b.map.texture,u.uniforms.resolution.value=b.mapSize,u.uniforms.radius.value=b.radius,e.setRenderTarget(b.mapPass),e.clear(),e.renderBufferDirect(T,null,A,u,p,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,e.setRenderTarget(b.map),e.clear(),e.renderBufferDirect(T,null,A,f,p,null)}function m(b,T,A){const N=b<<0|T<<1|A<<2;let P=a[N];return P===void 0&&(P=new Mi({depthPacking:wd,morphTargets:b,skinning:T}),a[N]=P),P}function y(b,T,A){const N=b<<0|T<<1|A<<2;let P=c[N];return P===void 0&&(P=new Si({morphTargets:b,skinning:T}),c[N]=P),P}function _(b,T,A,N,P,Y,O){let U=null,q=m,z=b.customDepthMaterial;if(N.isPointLight===!0&&(q=y,z=b.customDistanceMaterial),z===void 0){let G=!1;A.morphTargets===!0&&(G=T.morphAttributes&&T.morphAttributes.position&&T.morphAttributes.position.length>0);let K=!1;b.isSkinnedMesh===!0&&(A.skinning===!0?K=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",b));const pe=b.isInstancedMesh===!0;U=q(G,K,pe)}else U=z;if(e.localClippingEnabled&&A.clipShadows===!0&&A.clippingPlanes.length!==0){const G=U.uuid,K=A.uuid;let pe=l[G];pe===void 0&&(pe={},l[G]=pe);let ne=pe[K];ne===void 0&&(ne=U.clone(),pe[K]=ne),U=ne}return U.visible=A.visible,U.wireframe=A.wireframe,O===Ur?U.side=A.shadowSide!==null?A.shadowSide:A.side:U.side=A.shadowSide!==null?A.shadowSide:h[A.side],U.clipShadows=A.clipShadows,U.clippingPlanes=A.clippingPlanes,U.clipIntersection=A.clipIntersection,U.wireframeLinewidth=A.wireframeLinewidth,U.linewidth=A.linewidth,N.isPointLight===!0&&U.isMeshDistanceMaterial===!0&&(U.referencePosition.setFromMatrixPosition(N.matrixWorld),U.nearDistance=P,U.farDistance=Y),U}function w(b,T,A,N,P){if(b.visible===!1)return;if(b.layers.test(T.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&P===Ur)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,b.matrixWorld);const U=t.update(b),q=b.material;if(Array.isArray(q)){const z=U.groups;for(let G=0,K=z.length;G<K;G++){const pe=z[G],ne=q[pe.materialIndex];if(ne&&ne.visible){const oe=_(b,U,ne,N,A.near,A.far,P);e.renderBufferDirect(A,null,U,oe,b,pe)}}}else if(q.visible){const z=_(b,U,q,N,A.near,A.far,P);e.renderBufferDirect(A,null,U,z,b,null)}}const O=b.children;for(let U=0,q=O.length;U<q;U++)w(O[U],T,A,N,P)}}function R0(e,t,n){const i=n.isWebGL2;function r(){let R=!1;const Ee=new Qe;let Le=null;const tt=new Qe(0,0,0,0);return{setMask:function(Pe){Le!==Pe&&!R&&(e.colorMask(Pe,Pe,Pe,Pe),Le=Pe)},setLocked:function(Pe){R=Pe},setClear:function(Pe,st,xt,Et,cn){cn===!0&&(Pe*=Et,st*=Et,xt*=Et),Ee.set(Pe,st,xt,Et),tt.equals(Ee)===!1&&(e.clearColor(Pe,st,xt,Et),tt.copy(Ee))},reset:function(){R=!1,Le=null,tt.set(-1,0,0,0)}}}function o(){let R=!1,Ee=null,Le=null,tt=null;return{setTest:function(Pe){Pe?Q(2929):k(2929)},setMask:function(Pe){Ee!==Pe&&!R&&(e.depthMask(Pe),Ee=Pe)},setFunc:function(Pe){if(Le!==Pe){if(Pe)switch(Pe){case df:e.depthFunc(512);break;case Qu:e.depthFunc(519);break;case pf:e.depthFunc(513);break;case $a:e.depthFunc(515);break;case mf:e.depthFunc(514);break;case gf:e.depthFunc(518);break;case yf:e.depthFunc(516);break;case vf:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);Le=Pe}},setLocked:function(Pe){R=Pe},setClear:function(Pe){tt!==Pe&&(e.clearDepth(Pe),tt=Pe)},reset:function(){R=!1,Ee=null,Le=null,tt=null}}}function s(){let R=!1,Ee=null,Le=null,tt=null,Pe=null,st=null,xt=null,Et=null,cn=null;return{setTest:function(at){R||(at?Q(2960):k(2960))},setMask:function(at){Ee!==at&&!R&&(e.stencilMask(at),Ee=at)},setFunc:function(at,Vt,ln){(Le!==at||tt!==Vt||Pe!==ln)&&(e.stencilFunc(at,Vt,ln),Le=at,tt=Vt,Pe=ln)},setOp:function(at,Vt,ln){(st!==at||xt!==Vt||Et!==ln)&&(e.stencilOp(at,Vt,ln),st=at,xt=Vt,Et=ln)},setLocked:function(at){R=at},setClear:function(at){cn!==at&&(e.clearStencil(at),cn=at)},reset:function(){R=!1,Ee=null,Le=null,tt=null,Pe=null,st=null,xt=null,Et=null,cn=null}}}const a=new r,c=new o,l=new s,h=e.getParameter(34921),u=new Uint8Array(h),f=new Uint8Array(h),d=new Uint8Array(h);let p={},g=null,v=null,m=null,y=null,_=null,w=null,b=null,T=null,A=null,N=!1,P=null,Y=null,O=null,U=null,q=null;const z=e.getParameter(35661);let G=!1,K=0;const pe=e.getParameter(7938);pe.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL\ ([0-9])/.exec(pe)[1]),G=K>=1):pe.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(pe)[1]),G=K>=2);let ne=null,oe={};const se=new Qe,de=new Qe;function Ge(R,Ee,Le){const tt=new Uint8Array(4),Pe=e.createTexture();e.bindTexture(R,Pe),e.texParameteri(R,10241,9728),e.texParameteri(R,10240,9728);for(let st=0;st<Le;st++)e.texImage2D(Ee+st,0,6408,1,1,0,6408,5121,tt);return Pe}const Be={};Be[3553]=Ge(3553,3553,1),Be[34067]=Ge(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),Q(2929),c.setFunc($a),fe(!1),M(yl),Q(2884),L(ei);function re(){for(let R=0,Ee=u.length;R<Ee;R++)u[R]=0}function ve(R){W(R,0)}function W(R,Ee){u[R]=1,f[R]===0&&(e.enableVertexAttribArray(R),f[R]=1),d[R]!==Ee&&((i?e:t.get("ANGLE_instanced_arrays"))[i?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](R,Ee),d[R]=Ee)}function xe(){for(let R=0,Ee=f.length;R!==Ee;++R)f[R]!==u[R]&&(e.disableVertexAttribArray(R),f[R]=0)}function _e(R,Ee,Le,tt,Pe,st){i===!0&&(Le===5124||Le===5125)?e.vertexAttribIPointer(R,Ee,Le,tt,Pe,st):e.vertexAttribPointer(R,Ee,Le,tt,Pe,st)}function Q(R){p[R]!==!0&&(e.enable(R),p[R]=!0)}function k(R){p[R]!==!1&&(e.disable(R),p[R]=!1)}function I(R){return g!==R?(e.useProgram(R),g=R,!0):!1}const B={[Zi]:32774,[tf]:32778,[nf]:32779};if(i)B[bl]=32775,B[wl]=32776;else{const R=t.get("EXT_blend_minmax");R!==null&&(B[bl]=R.MIN_EXT,B[wl]=R.MAX_EXT)}const D={[rf]:0,[of]:1,[sf]:768,[Ju]:770,[ff]:776,[uf]:774,[cf]:772,[af]:769,[$u]:771,[hf]:775,[lf]:773};function L(R,Ee,Le,tt,Pe,st,xt,Et){if(R===ei){v&&(k(3042),v=!1);return}if(v||(Q(3042),v=!0),R!==ef){if(R!==m||Et!==N){if((y!==Zi||b!==Zi)&&(e.blendEquation(32774),y=Zi,b=Zi),Et)switch(R){case kr:e.blendFuncSeparate(1,771,1,771);break;case vl:e.blendFunc(1,1);break;case xl:e.blendFuncSeparate(0,0,769,771);break;case _l:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case kr:e.blendFuncSeparate(770,771,1,771);break;case vl:e.blendFunc(770,1);break;case xl:e.blendFunc(0,769);break;case _l:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}_=null,w=null,T=null,A=null,m=R,N=Et}return}Pe=Pe||Ee,st=st||Le,xt=xt||tt,(Ee!==y||Pe!==b)&&(e.blendEquationSeparate(B[Ee],B[Pe]),y=Ee,b=Pe),(Le!==_||tt!==w||st!==T||xt!==A)&&(e.blendFuncSeparate(D[Le],D[tt],D[st],D[xt]),_=Le,w=tt,T=st,A=xt),m=R,N=null}function J(R,Ee){R.side===ri?k(2884):Q(2884);let Le=R.side===vt;Ee&&(Le=!Le),fe(Le),R.blending===kr&&R.transparent===!1?L(ei):L(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),c.setFunc(R.depthFunc),c.setTest(R.depthTest),c.setMask(R.depthWrite),a.setMask(R.colorWrite);const tt=R.stencilWrite;l.setTest(tt),tt&&(l.setMask(R.stencilWriteMask),l.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),l.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),Z(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits)}function fe(R){P!==R&&(R?e.frontFace(2304):e.frontFace(2305),P=R)}function M(R){R!==$h?(Q(2884),R!==Y&&(R===yl?e.cullFace(1029):R===Qh?e.cullFace(1028):e.cullFace(1032))):k(2884),Y=R}function E(R){R!==O&&(G&&e.lineWidth(R),O=R)}function Z(R,Ee,Le){R?(Q(32823),(U!==Ee||q!==Le)&&(e.polygonOffset(Ee,Le),U=Ee,q=Le)):k(32823)}function j(R){R?Q(3089):k(3089)}function me(R){R===void 0&&(R=33984+z-1),ne!==R&&(e.activeTexture(R),ne=R)}function we(R,Ee){ne===null&&me();let Le=oe[ne];Le===void 0&&(Le={type:void 0,texture:void 0},oe[ne]=Le),(Le.type!==R||Le.texture!==Ee)&&(e.bindTexture(R,Ee||Be[R]),Le.type=R,Le.texture=Ee)}function C(){const R=oe[ne];R!==void 0&&R.type!==void 0&&(e.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function ae(){try{e.compressedTexImage2D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function be(){try{e.texImage2D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function ge(){try{e.texImage3D.apply(e,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function He(R){se.equals(R)===!1&&(e.scissor(R.x,R.y,R.z,R.w),se.copy(R))}function Xe(R){de.equals(R)===!1&&(e.viewport(R.x,R.y,R.z,R.w),de.copy(R))}function Me(){for(let R=0;R<f.length;R++)f[R]===1&&(e.disableVertexAttribArray(R),f[R]=0);p={},ne=null,oe={},g=null,m=null,P=null,Y=null,a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},initAttributes:re,enableAttribute:ve,enableAttributeAndDivisor:W,disableUnusedAttributes:xe,vertexAttribPointer:_e,enable:Q,disable:k,useProgram:I,setBlending:L,setMaterial:J,setFlipSided:fe,setCullFace:M,setLineWidth:E,setPolygonOffset:Z,setScissorTest:j,activeTexture:me,bindTexture:we,unbindTexture:C,compressedTexImage2D:ae,texImage2D:be,texImage3D:ge,scissor:He,viewport:Xe,reset:Me}}function I0(e,t,n,i,r,o,s){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(M,E){return p?new OffscreenCanvas(M,E):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(M,E,Z,j){let me=1;if((M.width>j||M.height>j)&&(me=j/Math.max(M.width,M.height)),me<1||E===!0)if(typeof HTMLImageElement<"u"&&M instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&M instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&M instanceof ImageBitmap){const we=E?Oe.floorPowerOfTwo:Math.floor,C=we(me*M.width),ae=we(me*M.height);d===void 0&&(d=g(C,ae));const be=Z?g(C,ae):d;return be.width=C,be.height=ae,be.getContext("2d").drawImage(M,0,0,C,ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+M.width+"x"+M.height+") to ("+C+"x"+ae+")."),be}else return"data"in M&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+M.width+"x"+M.height+")."),M;return M}function m(M){return Oe.isPowerOfTwo(M.width)&&Oe.isPowerOfTwo(M.height)}function y(M){return a?!1:M.wrapS!==It||M.wrapT!==It||M.minFilter!==pt&&M.minFilter!==Mt}function _(M,E){return M.generateMipmaps&&E&&M.minFilter!==pt&&M.minFilter!==Mt}function w(M,E,Z,j){e.generateMipmap(M);const me=i.get(E);me.__maxMipLevel=Math.log(Math.max(Z,j))*Math.LOG2E}function b(M,E,Z){if(a===!1)return E;if(M!==null){if(e[M]!==void 0)return e[M];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+M+"'")}let j=E;return E===6403&&(Z===5126&&(j=33326),Z===5131&&(j=33325),Z===5121&&(j=33321)),E===6407&&(Z===5126&&(j=34837),Z===5131&&(j=34843),Z===5121&&(j=32849)),E===6408&&(Z===5126&&(j=34836),Z===5131&&(j=34842),Z===5121&&(j=32856)),(j===33325||j===33326||j===34842||j===34836)&&t.get("EXT_color_buffer_float"),j}function T(M){return M===pt||M===Qa||M===Ka?9728:9729}function A(M){const E=M.target;E.removeEventListener("dispose",A),P(E),E.isVideoTexture&&f.delete(E),s.memory.textures--}function N(M){const E=M.target;E.removeEventListener("dispose",N),Y(E),s.memory.textures--}function P(M){const E=i.get(M);E.__webglInit!==void 0&&(e.deleteTexture(E.__webglTexture),i.remove(M))}function Y(M){const E=i.get(M),Z=i.get(M.texture);if(M){if(Z.__webglTexture!==void 0&&e.deleteTexture(Z.__webglTexture),M.depthTexture&&M.depthTexture.dispose(),M.isWebGLCubeRenderTarget)for(let j=0;j<6;j++)e.deleteFramebuffer(E.__webglFramebuffer[j]),E.__webglDepthbuffer&&e.deleteRenderbuffer(E.__webglDepthbuffer[j]);else e.deleteFramebuffer(E.__webglFramebuffer),E.__webglDepthbuffer&&e.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&e.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer&&e.deleteRenderbuffer(E.__webglColorRenderbuffer),E.__webglDepthRenderbuffer&&e.deleteRenderbuffer(E.__webglDepthRenderbuffer);i.remove(M.texture),i.remove(M)}}let O=0;function U(){O=0}function q(){const M=O;return M>=c&&console.warn("THREE.WebGLTextures: Trying to use "+M+" texture units while this GPU supports only "+c),O+=1,M}function z(M,E){const Z=i.get(M);if(M.isVideoTexture&&B(M),M.version>0&&Z.__version!==M.version){const j=M.image;if(j===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Be(Z,M,E);return}}n.activeTexture(33984+E),n.bindTexture(3553,Z.__webglTexture)}function G(M,E){const Z=i.get(M);if(M.version>0&&Z.__version!==M.version){Be(Z,M,E);return}n.activeTexture(33984+E),n.bindTexture(35866,Z.__webglTexture)}function K(M,E){const Z=i.get(M);if(M.version>0&&Z.__version!==M.version){Be(Z,M,E);return}n.activeTexture(33984+E),n.bindTexture(32879,Z.__webglTexture)}function pe(M,E){if(M.image.length!==6)return;const Z=i.get(M);if(M.version>0&&Z.__version!==M.version){Ge(Z,M),n.activeTexture(33984+E),n.bindTexture(34067,Z.__webglTexture),e.pixelStorei(37440,M.flipY);const j=M&&(M.isCompressedTexture||M.image[0].isCompressedTexture),me=M.image[0]&&M.image[0].isDataTexture,we=[];for(let Me=0;Me<6;Me++)!j&&!me?we[Me]=v(M.image[Me],!1,!0,l):we[Me]=me?M.image[Me].image:M.image[Me];const C=we[0],ae=m(C)||a,be=o.convert(M.format),ge=o.convert(M.type),He=b(M.internalFormat,be,ge);de(34067,M,ae);let Xe;if(j){for(let Me=0;Me<6;Me++){Xe=we[Me].mipmaps;for(let R=0;R<Xe.length;R++){const Ee=Xe[R];M.format!==jt&&M.format!==xi?be!==null?n.compressedTexImage2D(34069+Me,R,He,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+Me,R,He,Ee.width,Ee.height,0,be,ge,Ee.data)}}Z.__maxMipLevel=Xe.length-1}else{Xe=M.mipmaps;for(let Me=0;Me<6;Me++)if(me){n.texImage2D(34069+Me,0,He,we[Me].width,we[Me].height,0,be,ge,we[Me].data);for(let R=0;R<Xe.length;R++){const Le=Xe[R].image[Me].image;n.texImage2D(34069+Me,R+1,He,Le.width,Le.height,0,be,ge,Le.data)}}else{n.texImage2D(34069+Me,0,He,be,ge,we[Me]);for(let R=0;R<Xe.length;R++){const Ee=Xe[R];n.texImage2D(34069+Me,R+1,He,be,ge,Ee.image[Me])}}Z.__maxMipLevel=Xe.length}_(M,ae)&&w(34067,M,C.width,C.height),Z.__version=M.version,M.onUpdate&&M.onUpdate(M)}else n.activeTexture(33984+E),n.bindTexture(34067,Z.__webglTexture)}function ne(M,E){n.activeTexture(33984+E),n.bindTexture(34067,i.get(M).__webglTexture)}const oe={[rr]:10497,[It]:33071,[xs]:33648},se={[pt]:9728,[Qa]:9984,[Ka]:9986,[Mt]:9729,[th]:9985,[la]:9987};function de(M,E,Z){Z?(e.texParameteri(M,10242,oe[E.wrapS]),e.texParameteri(M,10243,oe[E.wrapT]),(M===32879||M===35866)&&e.texParameteri(M,32882,oe[E.wrapR]),e.texParameteri(M,10240,se[E.magFilter]),e.texParameteri(M,10241,se[E.minFilter])):(e.texParameteri(M,10242,33071),e.texParameteri(M,10243,33071),(M===32879||M===35866)&&e.texParameteri(M,32882,33071),(E.wrapS!==It||E.wrapT!==It)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(M,10240,T(E.magFilter)),e.texParameteri(M,10241,T(E.minFilter)),E.minFilter!==pt&&E.minFilter!==Mt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const j=t.get("EXT_texture_filter_anisotropic");if(j){if(E.type===Qn&&t.get("OES_texture_float_linear")===null||E.type===bs&&(a||t.get("OES_texture_half_float_linear"))===null)return;(E.anisotropy>1||i.get(E).__currentAnisotropy)&&(e.texParameterf(M,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,r.getMaxAnisotropy())),i.get(E).__currentAnisotropy=E.anisotropy)}}function Ge(M,E){M.__webglInit===void 0&&(M.__webglInit=!0,E.addEventListener("dispose",A),M.__webglTexture=e.createTexture(),s.memory.textures++)}function Be(M,E,Z){let j=3553;E.isDataTexture2DArray&&(j=35866),E.isDataTexture3D&&(j=32879),Ge(M,E),n.activeTexture(33984+Z),n.bindTexture(j,M.__webglTexture),e.pixelStorei(37440,E.flipY),e.pixelStorei(37441,E.premultiplyAlpha),e.pixelStorei(3317,E.unpackAlignment);const me=y(E)&&m(E.image)===!1,we=v(E.image,me,!1,h),C=m(we)||a,ae=o.convert(E.format);let be=o.convert(E.type),ge=b(E.internalFormat,ae,be);de(j,E,C);let He;const Xe=E.mipmaps;if(E.isDepthTexture)ge=6402,a?E.type===Qn?ge=36012:E.type===gs?ge=33190:E.type===Vr?ge=35056:ge=33189:E.type===Qn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===nr&&ge===6402&&E.type!==_s&&E.type!==gs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=_s,be=o.convert(E.type)),E.format===Yr&&ge===6402&&(ge=34041,E.type!==Vr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=Vr,be=o.convert(E.type))),n.texImage2D(3553,0,ge,we.width,we.height,0,ae,be,null);else if(E.isDataTexture)if(Xe.length>0&&C){for(let Me=0,R=Xe.length;Me<R;Me++)He=Xe[Me],n.texImage2D(3553,Me,ge,He.width,He.height,0,ae,be,He.data);E.generateMipmaps=!1,M.__maxMipLevel=Xe.length-1}else n.texImage2D(3553,0,ge,we.width,we.height,0,ae,be,we.data),M.__maxMipLevel=0;else if(E.isCompressedTexture){for(let Me=0,R=Xe.length;Me<R;Me++)He=Xe[Me],E.format!==jt&&E.format!==xi?ae!==null?n.compressedTexImage2D(3553,Me,ge,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,Me,ge,He.width,He.height,0,ae,be,He.data);M.__maxMipLevel=Xe.length-1}else if(E.isDataTexture2DArray)n.texImage3D(35866,0,ge,we.width,we.height,we.depth,0,ae,be,we.data),M.__maxMipLevel=0;else if(E.isDataTexture3D)n.texImage3D(32879,0,ge,we.width,we.height,we.depth,0,ae,be,we.data),M.__maxMipLevel=0;else if(Xe.length>0&&C){for(let Me=0,R=Xe.length;Me<R;Me++)He=Xe[Me],n.texImage2D(3553,Me,ge,ae,be,He);E.generateMipmaps=!1,M.__maxMipLevel=Xe.length-1}else n.texImage2D(3553,0,ge,ae,be,we),M.__maxMipLevel=0;_(E,C)&&w(j,E,we.width,we.height),M.__version=E.version,E.onUpdate&&E.onUpdate(E)}function re(M,E,Z,j){const me=o.convert(E.texture.format),we=o.convert(E.texture.type),C=b(E.texture.internalFormat,me,we);n.texImage2D(j,0,C,E.width,E.height,0,me,we,null),e.bindFramebuffer(36160,M),e.framebufferTexture2D(36160,Z,j,i.get(E.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function ve(M,E,Z){if(e.bindRenderbuffer(36161,M),E.depthBuffer&&!E.stencilBuffer){let j=33189;if(Z){const me=E.depthTexture;me&&me.isDepthTexture&&(me.type===Qn?j=36012:me.type===gs&&(j=33190));const we=I(E);e.renderbufferStorageMultisample(36161,we,j,E.width,E.height)}else e.renderbufferStorage(36161,j,E.width,E.height);e.framebufferRenderbuffer(36160,36096,36161,M)}else if(E.depthBuffer&&E.stencilBuffer){if(Z){const j=I(E);e.renderbufferStorageMultisample(36161,j,35056,E.width,E.height)}else e.renderbufferStorage(36161,34041,E.width,E.height);e.framebufferRenderbuffer(36160,33306,36161,M)}else{const j=o.convert(E.texture.format),me=o.convert(E.texture.type),we=b(E.texture.internalFormat,j,me);if(Z){const C=I(E);e.renderbufferStorageMultisample(36161,C,we,E.width,E.height)}else e.renderbufferStorage(36161,we,E.width,E.height)}e.bindRenderbuffer(36161,null)}function W(M,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,M),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),z(E.depthTexture,0);const j=i.get(E.depthTexture).__webglTexture;if(E.depthTexture.format===nr)e.framebufferTexture2D(36160,36096,3553,j,0);else if(E.depthTexture.format===Yr)e.framebufferTexture2D(36160,33306,3553,j,0);else throw new Error("Unknown depthTexture format")}function xe(M){const E=i.get(M),Z=M.isWebGLCubeRenderTarget===!0;if(M.depthTexture){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");W(E.__webglFramebuffer,M)}else if(Z){E.__webglDepthbuffer=[];for(let j=0;j<6;j++)e.bindFramebuffer(36160,E.__webglFramebuffer[j]),E.__webglDepthbuffer[j]=e.createRenderbuffer(),ve(E.__webglDepthbuffer[j],M,!1)}else e.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=e.createRenderbuffer(),ve(E.__webglDepthbuffer,M,!1);e.bindFramebuffer(36160,null)}function _e(M){const E=i.get(M),Z=i.get(M.texture);M.addEventListener("dispose",N),Z.__webglTexture=e.createTexture(),s.memory.textures++;const j=M.isWebGLCubeRenderTarget===!0,me=M.isWebGLMultisampleRenderTarget===!0,we=m(M)||a;if(a&&M.texture.format===xi&&(M.texture.type===Qn||M.texture.type===bs)&&(M.texture.format=jt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),j){E.__webglFramebuffer=[];for(let C=0;C<6;C++)E.__webglFramebuffer[C]=e.createFramebuffer()}else if(E.__webglFramebuffer=e.createFramebuffer(),me)if(a){E.__webglMultisampledFramebuffer=e.createFramebuffer(),E.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,E.__webglColorRenderbuffer);const C=o.convert(M.texture.format),ae=o.convert(M.texture.type),be=b(M.texture.internalFormat,C,ae),ge=I(M);e.renderbufferStorageMultisample(36161,ge,be,M.width,M.height),e.bindFramebuffer(36160,E.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,E.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),M.depthBuffer&&(E.__webglDepthRenderbuffer=e.createRenderbuffer(),ve(E.__webglDepthRenderbuffer,M,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(j){n.bindTexture(34067,Z.__webglTexture),de(34067,M.texture,we);for(let C=0;C<6;C++)re(E.__webglFramebuffer[C],M,36064,34069+C);_(M.texture,we)&&w(34067,M.texture,M.width,M.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Z.__webglTexture),de(3553,M.texture,we),re(E.__webglFramebuffer,M,36064,3553),_(M.texture,we)&&w(3553,M.texture,M.width,M.height),n.bindTexture(3553,null);M.depthBuffer&&xe(M)}function Q(M){const E=M.texture,Z=m(M)||a;if(_(E,Z)){const j=M.isWebGLCubeRenderTarget?34067:3553,me=i.get(E).__webglTexture;n.bindTexture(j,me),w(j,E,M.width,M.height),n.bindTexture(j,null)}}function k(M){if(M.isWebGLMultisampleRenderTarget)if(a){const E=i.get(M);e.bindFramebuffer(36008,E.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,E.__webglFramebuffer);const Z=M.width,j=M.height;let me=16384;M.depthBuffer&&(me|=256),M.stencilBuffer&&(me|=1024),e.blitFramebuffer(0,0,Z,j,0,0,Z,j,me,9728),e.bindFramebuffer(36160,E.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function I(M){return a&&M.isWebGLMultisampleRenderTarget?Math.min(u,M.samples):0}function B(M){const E=s.render.frame;f.get(M)!==E&&(f.set(M,E),M.update())}let D=!1,L=!1;function J(M,E){M&&M.isWebGLRenderTarget&&(D===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),D=!0),M=M.texture),z(M,E)}function fe(M,E){M&&M.isWebGLCubeRenderTarget&&(L===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),L=!0),M=M.texture),M&&M.isCubeTexture||Array.isArray(M.image)&&M.image.length===6?pe(M,E):ne(M,E)}this.allocateTextureUnit=q,this.resetTextureUnits=U,this.setTexture2D=z,this.setTexture2DArray=G,this.setTexture3D=K,this.setTextureCube=pe,this.setTextureCubeDynamic=ne,this.setupRenderTarget=_e,this.updateRenderTargetMipmap=Q,this.updateMultisampleRenderTarget=k,this.safeSetTexture2D=J,this.safeSetTextureCube=fe}function D0(e,t,n){const i=n.isWebGL2;function r(o){let s;if(o===Co)return 5121;if(o===Lf)return 32819;if(o===Pf)return 32820;if(o===Cf)return 33635;if(o===Ef)return 5120;if(o===Tf)return 5122;if(o===_s)return 5123;if(o===Af)return 5124;if(o===gs)return 5125;if(o===Qn)return 5126;if(o===bs)return i?5131:(s=t.get("OES_texture_half_float"),s!==null?s.HALF_FLOAT_OES:null);if(o===Rf)return 6406;if(o===xi)return 6407;if(o===jt)return 6408;if(o===If)return 6409;if(o===Df)return 6410;if(o===nr)return 6402;if(o===Yr)return 34041;if(o===Nf)return 6403;if(o===Ff)return 36244;if(o===Bf)return 33319;if(o===zf)return 33320;if(o===Uf)return 36248;if(o===Gf)return 36249;if(o===ec||o===Ml||o===tc||o===nc)if(s=t.get("WEBGL_compressed_texture_s3tc"),s!==null){if(o===ec)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(o===Ml)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(o===tc)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(o===nc)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(o===Sl||o===El||o===Tl||o===Al)if(s=t.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(o===Sl)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(o===El)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(o===Tl)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(o===Al)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(o===nh)return s=t.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if((o===Ll||o===Pl)&&(s=t.get("WEBGL_compressed_texture_etc"),s!==null)){if(o===Ll)return s.COMPRESSED_RGB8_ETC2;if(o===Pl)return s.COMPRESSED_RGBA8_ETC2_EAC}if(o===kf||o===Hf||o===Vf||o===Wf||o===jf||o===qf||o===Xf||o===Yf||o===Zf||o===Jf||o===$f||o===Qf||o===Kf||o===ed||o===nd||o===id||o===rd||o===od||o===sd||o===ad||o===cd||o===ld||o===ud||o===hd||o===fd||o===dd||o===pd||o===md)return s=t.get("WEBGL_compressed_texture_astc"),s!==null?o:null;if(o===td)return s=t.get("EXT_texture_compression_bptc"),s!==null?o:null;if(o===Vr)return i?34042:(s=t.get("WEBGL_depth_texture"),s!==null?s.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function uc(e){dt.call(this),this.cameras=e||[]}uc.prototype=Object.assign(Object.create(dt.prototype),{constructor:uc,isArrayCamera:!0});function lr(){te.call(this),this.type="Group"}lr.prototype=Object.assign(Object.create(te.prototype),{constructor:lr,isGroup:!0});function Ts(){this._targetRay=null,this._grip=null}Object.assign(Ts.prototype,{constructor:Ts,getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new lr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new lr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this},update:function(e,t,n){let i=null,r=null;const o=this._targetRay,s=this._grip;return e&&(o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),s!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale)))),o!==null&&(o.visible=i!==null),s!==null&&(s.visible=r!==null),this}});function _h(e,t){const n=this;let i=null,r=1,o=null,s="local-floor",a=null;const c=[],l=new Map,h=new dt;h.layers.enable(1),h.viewport=new Qe;const u=new dt;u.layers.enable(2),u.viewport=new Qe;const f=[h,u],d=new uc;d.layers.enable(1),d.layers.enable(2);let p=null,g=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(O){let U=c[O];return U===void 0&&(U=new Ts,c[O]=U),U.getTargetRaySpace()},this.getControllerGrip=function(O){let U=c[O];return U===void 0&&(U=new Ts,c[O]=U),U.getGripSpace()};function v(O){const U=l.get(O.inputSource);U&&U.dispatchEvent({type:O.type})}function m(){l.forEach(function(O,U){O.disconnect(U)}),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),Y.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function y(O){o=O,Y.setContext(i),Y.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(O){r=O,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(O){s=O,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return i},this.setSession=function(O){if(i=O,i!==null){i.addEventListener("select",v),i.addEventListener("selectstart",v),i.addEventListener("selectend",v),i.addEventListener("squeeze",v),i.addEventListener("squeezestart",v),i.addEventListener("squeezeend",v),i.addEventListener("end",m);const U=t.getContextAttributes();U.xrCompatible!==!0&&t.makeXRCompatible();const q={antialias:U.antialias,alpha:U.alpha,depth:U.depth,stencil:U.stencil,framebufferScaleFactor:r},z=new XRWebGLLayer(i,t,q);i.updateRenderState({baseLayer:z}),i.requestReferenceSpace(s).then(y),i.addEventListener("inputsourceschange",_)}};function _(O){const U=i.inputSources;for(let q=0;q<c.length;q++)l.set(U[q],c[q]);for(let q=0;q<O.removed.length;q++){const z=O.removed[q],G=l.get(z);G&&(G.dispatchEvent({type:"disconnected",data:z}),l.delete(z))}for(let q=0;q<O.added.length;q++){const z=O.added[q],G=l.get(z);G&&G.dispatchEvent({type:"connected",data:z})}}const w=new x,b=new x;function T(O,U,q){w.setFromMatrixPosition(U.matrixWorld),b.setFromMatrixPosition(q.matrixWorld);const z=w.distanceTo(b),G=U.projectionMatrix.elements,K=q.projectionMatrix.elements,pe=G[14]/(G[10]-1),ne=G[14]/(G[10]+1),oe=(G[9]+1)/G[5],se=(G[9]-1)/G[5],de=(G[8]-1)/G[0],Ge=(K[8]+1)/K[0],Be=pe*de,re=pe*Ge,ve=z/(-de+Ge),W=ve*-de;U.matrixWorld.decompose(O.position,O.quaternion,O.scale),O.translateX(W),O.translateZ(ve),O.matrixWorld.compose(O.position,O.quaternion,O.scale),O.matrixWorldInverse.getInverse(O.matrixWorld);const xe=pe+ve,_e=ne+ve,Q=Be-W,k=re+(z-W),I=oe*ne/_e*xe,B=se*ne/_e*xe;O.projectionMatrix.makePerspective(Q,k,I,B,xe,_e)}function A(O,U){U===null?O.matrixWorld.copy(O.matrix):O.matrixWorld.multiplyMatrices(U.matrixWorld,O.matrix),O.matrixWorldInverse.getInverse(O.matrixWorld)}this.getCamera=function(O){d.near=u.near=h.near=O.near,d.far=u.far=h.far=O.far,(p!==d.near||g!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),p=d.near,g=d.far);const U=O.parent,q=d.cameras;A(d,U);for(let G=0;G<q.length;G++)A(q[G],U);O.matrixWorld.copy(d.matrixWorld);const z=O.children;for(let G=0,K=z.length;G<K;G++)z[G].updateMatrixWorld(!0);return q.length===2?T(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let N=null;function P(O,U){if(a=U.getViewerPose(o),a!==null){const z=a.views,G=i.renderState.baseLayer;e.setFramebuffer(G.framebuffer);let K=!1;z.length!==d.cameras.length&&(d.cameras.length=0,K=!0);for(let pe=0;pe<z.length;pe++){const ne=z[pe],oe=G.getViewport(ne),se=f[pe];se.matrix.fromArray(ne.transform.matrix),se.projectionMatrix.fromArray(ne.projectionMatrix),se.viewport.set(oe.x,oe.y,oe.width,oe.height),pe===0&&d.matrix.copy(se.matrix),K===!0&&d.cameras.push(se)}}const q=i.inputSources;for(let z=0;z<c.length;z++){const G=c[z],K=q[z];G.update(K,U,o)}N&&N(O,U)}const Y=new hh;Y.setAnimationLoop(P),this.setAnimationLoop=function(O){N=O},this.dispose=function(){}}Object.assign(_h.prototype,sn.prototype);function O0(e){function t(m,y){m.fogColor.value.copy(y.color),y.isFog?(m.fogNear.value=y.near,m.fogFar.value=y.far):y.isFogExp2&&(m.fogDensity.value=y.density)}function n(m,y,_,w,b){y.isMeshBasicMaterial?i(m,y):y.isMeshLambertMaterial?(i(m,y),c(m,y)):y.isMeshToonMaterial?(i(m,y),h(m,y)):y.isMeshPhongMaterial?(i(m,y),l(m,y)):y.isMeshStandardMaterial?(i(m,y,_),y.isMeshPhysicalMaterial?f(m,y,_):u(m,y,_)):y.isMeshMatcapMaterial?(i(m,y),d(m,y)):y.isMeshDepthMaterial?(i(m,y),p(m,y)):y.isMeshDistanceMaterial?(i(m,y),g(m,y)):y.isMeshNormalMaterial?(i(m,y),v(m,y)):y.isLineBasicMaterial?(r(m,y),y.isLineDashedMaterial&&o(m,y)):y.isPointsMaterial?s(m,y,w,b):y.isSpriteMaterial?a(m,y):y.isShadowMaterial?(m.color.value.copy(y.color),m.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function i(m,y,_){m.opacity.value=y.opacity,y.color&&m.diffuse.value.copy(y.color),y.emissive&&m.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(m.map.value=y.map),y.alphaMap&&(m.alphaMap.value=y.alphaMap),y.specularMap&&(m.specularMap.value=y.specularMap);const w=y.envMap||_;w&&(m.envMap.value=w,m.flipEnvMap.value=w.isCubeTexture?-1:1,m.reflectivity.value=y.reflectivity,m.refractionRatio.value=y.refractionRatio,m.maxMipLevel.value=e.get(w).__maxMipLevel),y.lightMap&&(m.lightMap.value=y.lightMap,m.lightMapIntensity.value=y.lightMapIntensity),y.aoMap&&(m.aoMap.value=y.aoMap,m.aoMapIntensity.value=y.aoMapIntensity);let b;y.map?b=y.map:y.specularMap?b=y.specularMap:y.displacementMap?b=y.displacementMap:y.normalMap?b=y.normalMap:y.bumpMap?b=y.bumpMap:y.roughnessMap?b=y.roughnessMap:y.metalnessMap?b=y.metalnessMap:y.alphaMap?b=y.alphaMap:y.emissiveMap&&(b=y.emissiveMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix));let T;y.aoMap?T=y.aoMap:y.lightMap&&(T=y.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),m.uv2Transform.value.copy(T.matrix))}function r(m,y){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity}function o(m,y){m.dashSize.value=y.dashSize,m.totalSize.value=y.dashSize+y.gapSize,m.scale.value=y.scale}function s(m,y,_,w){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity,m.size.value=y.size*_,m.scale.value=w*.5,y.map&&(m.map.value=y.map),y.alphaMap&&(m.alphaMap.value=y.alphaMap);let b;y.map?b=y.map:y.alphaMap&&(b=y.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix))}function a(m,y){m.diffuse.value.copy(y.color),m.opacity.value=y.opacity,m.rotation.value=y.rotation,y.map&&(m.map.value=y.map),y.alphaMap&&(m.alphaMap.value=y.alphaMap);let _;y.map?_=y.map:y.alphaMap&&(_=y.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix))}function c(m,y){y.emissiveMap&&(m.emissiveMap.value=y.emissiveMap)}function l(m,y){m.specular.value.copy(y.specular),m.shininess.value=Math.max(y.shininess,1e-4),y.emissiveMap&&(m.emissiveMap.value=y.emissiveMap),y.bumpMap&&(m.bumpMap.value=y.bumpMap,m.bumpScale.value=y.bumpScale,y.side===vt&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,m.normalScale.value.copy(y.normalScale),y.side===vt&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias)}function h(m,y){m.specular.value.copy(y.specular),m.shininess.value=Math.max(y.shininess,1e-4),y.gradientMap&&(m.gradientMap.value=y.gradientMap),y.emissiveMap&&(m.emissiveMap.value=y.emissiveMap),y.bumpMap&&(m.bumpMap.value=y.bumpMap,m.bumpScale.value=y.bumpScale,y.side===vt&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,m.normalScale.value.copy(y.normalScale),y.side===vt&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias)}function u(m,y,_){m.roughness.value=y.roughness,m.metalness.value=y.metalness,y.roughnessMap&&(m.roughnessMap.value=y.roughnessMap),y.metalnessMap&&(m.metalnessMap.value=y.metalnessMap),y.emissiveMap&&(m.emissiveMap.value=y.emissiveMap),y.bumpMap&&(m.bumpMap.value=y.bumpMap,m.bumpScale.value=y.bumpScale,y.side===vt&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,m.normalScale.value.copy(y.normalScale),y.side===vt&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias),(y.envMap||_)&&(m.envMapIntensity.value=y.envMapIntensity)}function f(m,y,_){u(m,y,_),m.reflectivity.value=y.reflectivity,m.clearcoat.value=y.clearcoat,m.clearcoatRoughness.value=y.clearcoatRoughness,y.sheen&&m.sheen.value.copy(y.sheen),y.clearcoatMap&&(m.clearcoatMap.value=y.clearcoatMap),y.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap),y.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),m.clearcoatNormalMap.value=y.clearcoatNormalMap,y.side===vt&&m.clearcoatNormalScale.value.negate()),m.transparency.value=y.transparency}function d(m,y){y.matcap&&(m.matcap.value=y.matcap),y.bumpMap&&(m.bumpMap.value=y.bumpMap,m.bumpScale.value=y.bumpScale,y.side===vt&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,m.normalScale.value.copy(y.normalScale),y.side===vt&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias)}function p(m,y){y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias)}function g(m,y){y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias),m.referencePosition.value.copy(y.referencePosition),m.nearDistance.value=y.nearDistance,m.farDistance.value=y.farDistance}function v(m,y){y.bumpMap&&(m.bumpMap.value=y.bumpMap,m.bumpScale.value=y.bumpScale,y.side===vt&&(m.bumpScale.value*=-1)),y.normalMap&&(m.normalMap.value=y.normalMap,m.normalScale.value.copy(y.normalScale),y.side===vt&&m.normalScale.value.negate()),y.displacementMap&&(m.displacementMap.value=y.displacementMap,m.displacementScale.value=y.displacementScale,m.displacementBias.value=y.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function sl(e){e=e||{};const t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,o=e.stencil!==void 0?e.stencil:!0,s=e.antialias!==void 0?e.antialias:!1,a=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,c=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,l=e.powerPreference!==void 0?e.powerPreference:"default",h=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1;let u=null,f=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Dt,this.physicallyCorrectLights=!1,this.toneMapping=Hr,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;let d=this,p=!1,g=null,v=0,m=0,y=null,_=null,w=-1,b={geometry:null,program:null,wireframe:!1},T=null,A=null,N=new Qe,P=new Qe,Y=null,O=t.width,U=t.height,q=1,z=null,G=null,K=new Qe(0,0,O,U),pe=new Qe(0,0,O,U),ne=!1,oe=new Ro,se=new fg,de=!1,Ge=!1,Be=new Fe,re=new x;function ve(){return y===null?q:1}let W;try{const S={alpha:i,depth:r,stencil:o,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Xe,!1),t.addEventListener("webglcontextrestored",Me,!1),W=n||t.getContext("webgl",S)||t.getContext("experimental-webgl",S),W===null)throw t.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");W.getShaderPrecisionFormat===void 0&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(S){throw console.error("THREE.WebGLRenderer: "+S.message),S}let xe,_e,Q,k,I,B,D,L,J,fe,M,E,Z,j,me,we,C,ae;function be(){xe=new dg(W),_e=new hg(W,xe,e),_e.isWebGL2===!1&&(xe.get("WEBGL_depth_texture"),xe.get("OES_texture_float"),xe.get("OES_texture_half_float"),xe.get("OES_texture_half_float_linear"),xe.get("OES_standard_derivatives"),xe.get("OES_element_index_uint"),xe.get("ANGLE_instanced_arrays")),xe.get("OES_texture_float_linear"),ae=new D0(W,xe,_e),Q=new R0(W,xe,_e),Q.scissor(P.copy(pe).multiplyScalar(q).floor()),Q.viewport(N.copy(K).multiplyScalar(q).floor()),k=new gg,I=new x0,B=new I0(W,xe,Q,I,_e,ae,k),D=new Vd(W,_e),L=new pg(W,D,k),J=new xg(W,L,D,k),me=new vg(W),fe=new v0(d,xe,_e),M=new O0(I),E=new w0,Z=new L0,j=new lg(d,Q,J,a),we=new ug(W,xe,k,_e),C=new mg(W,xe,k,_e),k.programs=fe.programs,d.capabilities=_e,d.extensions=xe,d.properties=I,d.renderLists=E,d.state=Q,d.info=k}be();const ge=new _h(d,W);this.xr=ge;const He=new xh(d,J,_e.maxTextureSize);this.shadowMap=He,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const S=xe.get("WEBGL_lose_context");S&&S.loseContext()},this.forceContextRestore=function(){const S=xe.get("WEBGL_lose_context");S&&S.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(S){S!==void 0&&(q=S,this.setSize(O,U,!1))},this.getSize=function(S){return S===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),S=new V),S.set(O,U)},this.setSize=function(S,H,F){if(ge.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=S,U=H,t.width=Math.floor(S*q),t.height=Math.floor(H*q),F!==!1&&(t.style.width=S+"px",t.style.height=H+"px"),this.setViewport(0,0,S,H)},this.getDrawingBufferSize=function(S){return S===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),S=new V),S.set(O*q,U*q).floor()},this.setDrawingBufferSize=function(S,H,F){O=S,U=H,q=F,t.width=Math.floor(S*F),t.height=Math.floor(H*F),this.setViewport(0,0,S,H)},this.getCurrentViewport=function(S){return S===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),S=new Qe),S.copy(N)},this.getViewport=function(S){return S.copy(K)},this.setViewport=function(S,H,F,X){S.isVector4?K.set(S.x,S.y,S.z,S.w):K.set(S,H,F,X),Q.viewport(N.copy(K).multiplyScalar(q).floor())},this.getScissor=function(S){return S.copy(pe)},this.setScissor=function(S,H,F,X){S.isVector4?pe.set(S.x,S.y,S.z,S.w):pe.set(S,H,F,X),Q.scissor(P.copy(pe).multiplyScalar(q).floor())},this.getScissorTest=function(){return ne},this.setScissorTest=function(S){Q.setScissorTest(ne=S)},this.setOpaqueSort=function(S){z=S},this.setTransparentSort=function(S){G=S},this.getClearColor=function(){return j.getClearColor()},this.setClearColor=function(){j.setClearColor.apply(j,arguments)},this.getClearAlpha=function(){return j.getClearAlpha()},this.setClearAlpha=function(){j.setClearAlpha.apply(j,arguments)},this.clear=function(S,H,F){let X=0;(S===void 0||S)&&(X|=16384),(H===void 0||H)&&(X|=256),(F===void 0||F)&&(X|=1024),W.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Xe,!1),t.removeEventListener("webglcontextrestored",Me,!1),E.dispose(),Z.dispose(),I.dispose(),J.dispose(),ge.dispose(),cn.stop()};function Xe(S){S.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Me(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,be()}function R(S){const H=S.target;H.removeEventListener("dispose",R),Ee(H)}function Ee(S){Le(S),I.remove(S)}function Le(S){const H=I.get(S).program;S.program=void 0,H!==void 0&&fe.releaseProgram(H)}function tt(S,H){S.render(function(F){d.renderBufferImmediate(F,H)})}this.renderBufferImmediate=function(S,H){Q.initAttributes();const F=I.get(S);S.hasPositions&&!F.position&&(F.position=W.createBuffer()),S.hasNormals&&!F.normal&&(F.normal=W.createBuffer()),S.hasUvs&&!F.uv&&(F.uv=W.createBuffer()),S.hasColors&&!F.color&&(F.color=W.createBuffer());const X=H.getAttributes();S.hasPositions&&(W.bindBuffer(34962,F.position),W.bufferData(34962,S.positionArray,35048),Q.enableAttribute(X.position),W.vertexAttribPointer(X.position,3,5126,!1,0,0)),S.hasNormals&&(W.bindBuffer(34962,F.normal),W.bufferData(34962,S.normalArray,35048),Q.enableAttribute(X.normal),W.vertexAttribPointer(X.normal,3,5126,!1,0,0)),S.hasUvs&&(W.bindBuffer(34962,F.uv),W.bufferData(34962,S.uvArray,35048),Q.enableAttribute(X.uv),W.vertexAttribPointer(X.uv,2,5126,!1,0,0)),S.hasColors&&(W.bindBuffer(34962,F.color),W.bufferData(34962,S.colorArray,35048),Q.enableAttribute(X.color),W.vertexAttribPointer(X.color,3,5126,!1,0,0)),Q.disableUnusedAttributes(),W.drawArrays(4,0,S.count),S.count=0};const Pe=new sr;this.renderBufferDirect=function(S,H,F,X,ue,Ne){H===null&&(H=Pe);const Re=ue.isMesh&&ue.matrixWorld.determinant()<0,ye=gl(S,H,X,ue);Q.setMaterial(X,Re);let ke=!1;(b.geometry!==F.id||b.program!==ye.id||b.wireframe!==(X.wireframe===!0))&&(b.geometry=F.id,b.program=ye.id,b.wireframe=X.wireframe===!0,ke=!0),(X.morphTargets||X.morphNormals)&&(me.update(ue,F,X,ye),ke=!0),ue.isInstancedMesh===!0&&(ke=!0);let ze=F.index;const je=F.attributes.position;if(ze===null){if(je===void 0||je.count===0)return}else if(ze.count===0)return;let Ze=1;X.wireframe===!0&&(ze=L.getWireframeAttribute(F),Ze=2);let Ie,Ve=we;ze!==null&&(Ie=D.get(ze),Ve=C,Ve.setIndex(Ie)),ke&&(st(ue,F,X,ye),ze!==null&&W.bindBuffer(34963,Ie.buffer));const ut=ze!==null?ze.count:je.count,Je=F.drawRange.start*Ze,un=F.drawRange.count*Ze,Pt=Ne!==null?Ne.start*Ze:0,li=Ne!==null?Ne.count*Ze:1/0,Ci=Math.max(Je,Pt),Yh=Math.min(ut,Je+un,Pt+li)-1,Io=Math.max(0,Yh-Ci+1);if(Io!==0){if(ue.isMesh)X.wireframe===!0?(Q.setLineWidth(X.wireframeLinewidth*ve()),Ve.setMode(1)):Ve.setMode(4);else if(ue.isLine){let Lr=X.linewidth;Lr===void 0&&(Lr=1),Q.setLineWidth(Lr*ve()),ue.isLineSegments?Ve.setMode(1):ue.isLineLoop?Ve.setMode(2):Ve.setMode(3)}else ue.isPoints?Ve.setMode(0):ue.isSprite&&Ve.setMode(4);if(ue.isInstancedMesh)Ve.renderInstances(F,Ci,Io,ue.count);else if(F.isInstancedBufferGeometry){const Lr=Math.min(F.instanceCount,F._maxInstanceCount);Ve.renderInstances(F,Ci,Io,Lr)}else Ve.render(Ci,Io)}};function st(S,H,F,X){if(_e.isWebGL2===!1&&(S.isInstancedMesh||H.isInstancedBufferGeometry)&&xe.get("ANGLE_instanced_arrays")===null)return;Q.initAttributes();const ue=H.attributes,Ne=X.getAttributes(),Re=F.defaultAttributeValues;for(const ye in Ne){const ke=Ne[ye];if(ke>=0){const ze=ue[ye];if(ze!==void 0){const je=ze.normalized,Ze=ze.itemSize,Ie=D.get(ze);if(Ie===void 0)continue;const Ve=Ie.buffer,ut=Ie.type,Je=Ie.bytesPerElement;if(ze.isInterleavedBufferAttribute){const un=ze.data,Pt=un.stride,li=ze.offset;un&&un.isInstancedInterleavedBuffer?(Q.enableAttributeAndDivisor(ke,un.meshPerAttribute),H._maxInstanceCount===void 0&&(H._maxInstanceCount=un.meshPerAttribute*un.count)):Q.enableAttribute(ke),W.bindBuffer(34962,Ve),Q.vertexAttribPointer(ke,Ze,ut,je,Pt*Je,li*Je)}else ze.isInstancedBufferAttribute?(Q.enableAttributeAndDivisor(ke,ze.meshPerAttribute),H._maxInstanceCount===void 0&&(H._maxInstanceCount=ze.meshPerAttribute*ze.count)):Q.enableAttribute(ke),W.bindBuffer(34962,Ve),Q.vertexAttribPointer(ke,Ze,ut,je,0,0)}else if(ye==="instanceMatrix"){const je=D.get(S.instanceMatrix);if(je===void 0)continue;const Ze=je.buffer,Ie=je.type;Q.enableAttributeAndDivisor(ke+0,1),Q.enableAttributeAndDivisor(ke+1,1),Q.enableAttributeAndDivisor(ke+2,1),Q.enableAttributeAndDivisor(ke+3,1),W.bindBuffer(34962,Ze),W.vertexAttribPointer(ke+0,4,Ie,!1,64,0),W.vertexAttribPointer(ke+1,4,Ie,!1,64,16),W.vertexAttribPointer(ke+2,4,Ie,!1,64,32),W.vertexAttribPointer(ke+3,4,Ie,!1,64,48)}else if(Re!==void 0){const je=Re[ye];if(je!==void 0)switch(je.length){case 2:W.vertexAttrib2fv(ke,je);break;case 3:W.vertexAttrib3fv(ke,je);break;case 4:W.vertexAttrib4fv(ke,je);break;default:W.vertexAttrib1fv(ke,je)}}}}Q.disableUnusedAttributes()}this.compile=function(S,H){f=Z.get(S,H),f.init(),S.traverse(function(X){X.isLight&&(f.pushLight(X),X.castShadow&&f.pushShadow(X))}),f.setupLights(H);const F={};S.traverse(function(X){let ue=X.material;if(ue)if(Array.isArray(ue))for(let Ne=0;Ne<ue.length;Ne++){let Re=ue[Ne];Re.uuid in F||(Mn(Re,S,X),F[Re.uuid]=!0)}else ue.uuid in F||(Mn(ue,S,X),F[ue.uuid]=!0)})};let xt=null;function Et(S){ge.isPresenting||xt&&xt(S)}const cn=new hh;cn.setAnimationLoop(Et),typeof window<"u"&&cn.setContext(window),this.setAnimationLoop=function(S){xt=S,ge.setAnimationLoop(S),cn.start()},this.render=function(S,H){let F,X;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),F=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),X=arguments[3]),!(H&&H.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p)return;b.geometry=null,b.program=null,b.wireframe=!1,w=-1,T=null,S.autoUpdate===!0&&S.updateMatrixWorld(),H.parent===null&&H.updateMatrixWorld(),ge.enabled&&ge.isPresenting&&(H=ge.getCamera(H)),S.isScene&&S.onBeforeRender(d,S,H,F||y),f=Z.get(S,H),f.init(),Be.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),oe.setFromProjectionMatrix(Be),Ge=this.localClippingEnabled,de=se.init(this.clippingPlanes,Ge,H),u=E.get(S,H),u.init(),at(S,H,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(z,G),de&&se.beginShadows();const ue=f.state.shadowsArray;He.render(ue,S,H),f.setupLights(H),de&&se.endShadows(),this.info.autoReset&&this.info.reset(),F!==void 0&&this.setRenderTarget(F),j.render(u,S,H,X);const Ne=u.opaque,Re=u.transparent;if(S.overrideMaterial){const ye=S.overrideMaterial;Ne.length&&Vt(Ne,S,H,ye),Re.length&&Vt(Re,S,H,ye)}else Ne.length&&Vt(Ne,S,H),Re.length&&Vt(Re,S,H);S.isScene&&S.onAfterRender(d,S,H),y!==null&&(B.updateRenderTargetMipmap(y),B.updateMultisampleRenderTarget(y)),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1),u=null,f=null};function at(S,H,F,X){if(S.visible===!1)return;if(S.layers.test(H.layers)){if(S.isGroup)F=S.renderOrder;else if(S.isLOD)S.autoUpdate===!0&&S.update(H);else if(S.isLight)f.pushLight(S),S.castShadow&&f.pushShadow(S);else if(S.isSprite){if(!S.frustumCulled||oe.intersectsSprite(S)){X&&re.setFromMatrixPosition(S.matrixWorld).applyMatrix4(Be);const Re=J.update(S),ye=S.material;ye.visible&&u.push(S,Re,ye,F,re.z,null)}}else if(S.isImmediateRenderObject)X&&re.setFromMatrixPosition(S.matrixWorld).applyMatrix4(Be),u.push(S,null,S.material,F,re.z,null);else if((S.isMesh||S.isLine||S.isPoints)&&(S.isSkinnedMesh&&S.skeleton.frame!==k.render.frame&&(S.skeleton.update(),S.skeleton.frame=k.render.frame),!S.frustumCulled||oe.intersectsObject(S))){X&&re.setFromMatrixPosition(S.matrixWorld).applyMatrix4(Be);const Re=J.update(S),ye=S.material;if(Array.isArray(ye)){const ke=Re.groups;for(let ze=0,je=ke.length;ze<je;ze++){const Ze=ke[ze],Ie=ye[Ze.materialIndex];Ie&&Ie.visible&&u.push(S,Re,Ie,F,re.z,Ze)}}else ye.visible&&u.push(S,Re,ye,F,re.z,null)}}const Ne=S.children;for(let Re=0,ye=Ne.length;Re<ye;Re++)at(Ne[Re],H,F,X)}function Vt(S,H,F,X){for(let ue=0,Ne=S.length;ue<Ne;ue++){const Re=S[ue],ye=Re.object,ke=Re.geometry,ze=X===void 0?Re.material:X,je=Re.group;if(F.isArrayCamera){A=F;const Ze=F.cameras;for(let Ie=0,Ve=Ze.length;Ie<Ve;Ie++){const ut=Ze[Ie];ye.layers.test(ut.layers)&&(Q.viewport(N.copy(ut.viewport)),f.setupLights(ut),ln(ye,H,ut,ke,ze,je))}}else A=null,ln(ye,H,F,ke,ze,je)}}function ln(S,H,F,X,ue,Ne){if(S.onBeforeRender(d,H,F,X,ue,Ne),f=Z.get(H,A||F),S.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,S.matrixWorld),S.normalMatrix.getNormalMatrix(S.modelViewMatrix),S.isImmediateRenderObject){const Re=gl(F,H,ue,S);Q.setMaterial(ue),b.geometry=null,b.program=null,b.wireframe=!1,tt(S,Re)}else d.renderBufferDirect(F,H,X,ue,S,Ne);S.onAfterRender(d,H,F,X,ue,Ne),f=Z.get(H,A||F)}function Mn(S,H,F){const X=I.get(S),ue=f.state.lights,Ne=f.state.shadowsArray,Re=ue.state.version,ye=fe.getParameters(S,ue.state,Ne,H,se.numPlanes,se.numIntersection,F),ke=fe.getProgramCacheKey(ye);let ze=X.program,je=!0;if(ze===void 0)S.addEventListener("dispose",R);else if(ze.cacheKey!==ke)Le(S);else if(X.lightsStateVersion!==Re)X.lightsStateVersion=Re,je=!1;else{if(ye.shaderID!==void 0)return;je=!1}je&&(ze=fe.acquireProgram(ye,ke),X.program=ze,X.uniforms=ye.uniforms,X.outputEncoding=ye.outputEncoding,S.program=ze);const Ze=ze.getAttributes();if(S.morphTargets){S.numSupportedMorphTargets=0;for(let Je=0;Je<d.maxMorphTargets;Je++)Ze["morphTarget"+Je]>=0&&S.numSupportedMorphTargets++}if(S.morphNormals){S.numSupportedMorphNormals=0;for(let Je=0;Je<d.maxMorphNormals;Je++)Ze["morphNormal"+Je]>=0&&S.numSupportedMorphNormals++}const Ie=X.uniforms;(!S.isShaderMaterial&&!S.isRawShaderMaterial||S.clipping===!0)&&(X.numClippingPlanes=se.numPlanes,X.numIntersection=se.numIntersection,Ie.clippingPlanes=se.uniform),X.environment=S.isMeshStandardMaterial?H.environment:null,X.fog=H.fog,X.needsLights=Xh(S),X.lightsStateVersion=Re,X.needsLights&&(Ie.ambientLightColor.value=ue.state.ambient,Ie.lightProbe.value=ue.state.probe,Ie.directionalLights.value=ue.state.directional,Ie.directionalLightShadows.value=ue.state.directionalShadow,Ie.spotLights.value=ue.state.spot,Ie.spotLightShadows.value=ue.state.spotShadow,Ie.rectAreaLights.value=ue.state.rectArea,Ie.pointLights.value=ue.state.point,Ie.pointLightShadows.value=ue.state.pointShadow,Ie.hemisphereLights.value=ue.state.hemi,Ie.directionalShadowMap.value=ue.state.directionalShadowMap,Ie.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,Ie.spotShadowMap.value=ue.state.spotShadowMap,Ie.spotShadowMatrix.value=ue.state.spotShadowMatrix,Ie.pointShadowMap.value=ue.state.pointShadowMap,Ie.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Ve=X.program.getUniforms(),ut=ti.seqWithValue(Ve.seq,Ie);X.uniformsList=ut}function gl(S,H,F,X){B.resetTextureUnits();const ue=H.fog,Ne=F.isMeshStandardMaterial?H.environment:null,Re=y===null?d.outputEncoding:y.texture.encoding,ye=I.get(F),ke=f.state.lights;if(de&&(Ge||S!==T)){const Je=S===T&&F.id===w;se.setState(F.clippingPlanes,F.clipIntersection,F.clipShadows,S,ye,Je)}F.version===ye.__version?(ye.program===void 0||F.fog&&ye.fog!==ue||ye.environment!==Ne||ye.needsLights&&ye.lightsStateVersion!==ke.state.version||ye.numClippingPlanes!==void 0&&(ye.numClippingPlanes!==se.numPlanes||ye.numIntersection!==se.numIntersection)||ye.outputEncoding!==Re)&&Mn(F,H,X):(Mn(F,H,X),ye.__version=F.version);let ze=!1,je=!1,Ze=!1;const Ie=ye.program,Ve=Ie.getUniforms(),ut=ye.uniforms;if(Q.useProgram(Ie.program)&&(ze=!0,je=!0,Ze=!0),F.id!==w&&(w=F.id,je=!0),ze||T!==S){if(Ve.setValue(W,"projectionMatrix",S.projectionMatrix),_e.logarithmicDepthBuffer&&Ve.setValue(W,"logDepthBufFC",2/(Math.log(S.far+1)/Math.LN2)),T!==S&&(T=S,je=!0,Ze=!0),F.isShaderMaterial||F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshStandardMaterial||F.envMap){const Je=Ve.map.cameraPosition;Je!==void 0&&Je.setValue(W,re.setFromMatrixPosition(S.matrixWorld))}(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial)&&Ve.setValue(W,"isOrthographic",S.isOrthographicCamera===!0),(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial||F.skinning)&&Ve.setValue(W,"viewMatrix",S.matrixWorldInverse)}if(F.skinning){Ve.setOptional(W,X,"bindMatrix"),Ve.setOptional(W,X,"bindMatrixInverse");const Je=X.skeleton;if(Je){const un=Je.bones;if(_e.floatVertexTextures){if(Je.boneTexture===void 0){let Pt=Math.sqrt(un.length*4);Pt=Oe.ceilPowerOfTwo(Pt),Pt=Math.max(Pt,4);const li=new Float32Array(Pt*Pt*4);li.set(Je.boneMatrices);const Ci=new cr(li,Pt,Pt,jt,Qn);Je.boneMatrices=li,Je.boneTexture=Ci,Je.boneTextureSize=Pt}Ve.setValue(W,"boneTexture",Je.boneTexture,B),Ve.setValue(W,"boneTextureSize",Je.boneTextureSize)}else Ve.setOptional(W,Je,"boneMatrices")}}return(je||ye.receiveShadow!==X.receiveShadow)&&(ye.receiveShadow=X.receiveShadow,Ve.setValue(W,"receiveShadow",X.receiveShadow)),je&&(Ve.setValue(W,"toneMappingExposure",d.toneMappingExposure),Ve.setValue(W,"toneMappingWhitePoint",d.toneMappingWhitePoint),ye.needsLights&&qh(ut,Ze),ue&&F.fog&&M.refreshFogUniforms(ut,ue),M.refreshMaterialUniforms(ut,F,Ne,q,U),ut.ltc_1!==void 0&&(ut.ltc_1.value=le.LTC_1),ut.ltc_2!==void 0&&(ut.ltc_2.value=le.LTC_2),ti.upload(W,ye.uniformsList,ut,B)),F.isShaderMaterial&&F.uniformsNeedUpdate===!0&&(ti.upload(W,ye.uniformsList,ut,B),F.uniformsNeedUpdate=!1),F.isSpriteMaterial&&Ve.setValue(W,"center",X.center),Ve.setValue(W,"modelViewMatrix",X.modelViewMatrix),Ve.setValue(W,"normalMatrix",X.normalMatrix),Ve.setValue(W,"modelMatrix",X.matrixWorld),Ie}function qh(S,H){S.ambientLightColor.needsUpdate=H,S.lightProbe.needsUpdate=H,S.directionalLights.needsUpdate=H,S.directionalLightShadows.needsUpdate=H,S.pointLights.needsUpdate=H,S.pointLightShadows.needsUpdate=H,S.spotLights.needsUpdate=H,S.spotLightShadows.needsUpdate=H,S.rectAreaLights.needsUpdate=H,S.hemisphereLights.needsUpdate=H}function Xh(S){return S.isMeshLambertMaterial||S.isMeshToonMaterial||S.isMeshPhongMaterial||S.isMeshStandardMaterial||S.isShadowMaterial||S.isShaderMaterial&&S.lights===!0}this.setFramebuffer=function(S){g!==S&&y===null&&W.bindFramebuffer(36160,S),g=S},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return m},this.getRenderTarget=function(){return y},this.setRenderTarget=function(S,H,F){y=S,v=H,m=F,S&&I.get(S).__webglFramebuffer===void 0&&B.setupRenderTarget(S);let X=g,ue=!1;if(S){const Ne=I.get(S).__webglFramebuffer;S.isWebGLCubeRenderTarget?(X=Ne[H||0],ue=!0):S.isWebGLMultisampleRenderTarget?X=I.get(S).__webglMultisampledFramebuffer:X=Ne,N.copy(S.viewport),P.copy(S.scissor),Y=S.scissorTest}else N.copy(K).multiplyScalar(q).floor(),P.copy(pe).multiplyScalar(q).floor(),Y=ne;if(_!==X&&(W.bindFramebuffer(36160,X),_=X),Q.viewport(N),Q.scissor(P),Q.setScissorTest(Y),ue){const Ne=I.get(S.texture);W.framebufferTexture2D(36160,36064,34069+(H||0),Ne.__webglTexture,F||0)}},this.readRenderTargetPixels=function(S,H,F,X,ue,Ne,Re){if(!(S&&S.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ye=I.get(S).__webglFramebuffer;if(S.isWebGLCubeRenderTarget&&Re!==void 0&&(ye=ye[Re]),ye){let ke=!1;ye!==_&&(W.bindFramebuffer(36160,ye),ke=!0);try{const ze=S.texture,je=ze.format,Ze=ze.type;if(je!==jt&&ae.convert(je)!==W.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Ze!==Co&&ae.convert(Ze)!==W.getParameter(35738)&&!(Ze===Qn&&(_e.isWebGL2||xe.get("OES_texture_float")||xe.get("WEBGL_color_buffer_float")))&&!(Ze===bs&&(_e.isWebGL2?xe.get("EXT_color_buffer_float"):xe.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W.checkFramebufferStatus(36160)===36053?H>=0&&H<=S.width-X&&F>=0&&F<=S.height-ue&&W.readPixels(H,F,X,ue,ae.convert(je),ae.convert(Ze),Ne):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{ke&&W.bindFramebuffer(36160,_)}}},this.copyFramebufferToTexture=function(S,H,F){F===void 0&&(F=0);const X=Math.pow(2,-F),ue=Math.floor(H.image.width*X),Ne=Math.floor(H.image.height*X),Re=ae.convert(H.format);B.setTexture2D(H,0),W.copyTexImage2D(3553,F,Re,S.x,S.y,ue,Ne,0),Q.unbindTexture()},this.copyTextureToTexture=function(S,H,F,X){X===void 0&&(X=0);const ue=H.image.width,Ne=H.image.height,Re=ae.convert(F.format),ye=ae.convert(F.type);B.setTexture2D(F,0),H.isDataTexture?W.texSubImage2D(3553,X,S.x,S.y,ue,Ne,Re,ye,H.image.data):H.isCompressedTexture?W.compressedTexSubImage2D(3553,X,S.x,S.y,H.mipmaps[0].width,H.mipmaps[0].height,Re,H.mipmaps[0].data):W.texSubImage2D(3553,X,S.x,S.y,Re,ye,H.image),X===0&&F.generateMipmaps&&W.generateMipmap(3553),Q.unbindTexture()},this.initTexture=function(S){B.setTexture2D(S,0),Q.unbindTexture()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function hc(e,t){this.name="",this.color=new ce(e),this.density=t!==void 0?t:25e-5}Object.assign(hc.prototype,{isFogExp2:!0,clone:function(){return new hc(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});function fc(e,t,n){this.name="",this.color=new ce(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}Object.assign(fc.prototype,{isFog:!0,clone:function(){return new fc(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});function Wt(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ha,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Oe.generateUUID()}Object.defineProperty(Wt.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Wt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Oe.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new Wt(t,this.stride);return n.setUsage(this.usage),n},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Oe.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const di=new x;function Ei(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}Object.defineProperties(Ei.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(Ei.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)di.x=this.getX(t),di.y=this.getY(t),di.z=this.getZ(t),di.applyMatrix4(e),this.setXYZ(t,di.x,di.y,di.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Ae(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ei(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function Ti(e){Te.call(this),this.type="SpriteMaterial",this.color=new ce(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}Ti.prototype=Object.create(Te.prototype);Ti.prototype.constructor=Ti;Ti.prototype.isSpriteMaterial=!0;Ti.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Vi;const Or=new x,Wi=new x,ji=new x,qi=new V,Nr=new V,bh=new Fe,Xo=new x,Fr=new x,Yo=new x,eu=new V,Ua=new V,tu=new V;function dc(e){if(te.call(this),this.type="Sprite",Vi===void 0){Vi=new he;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Wt(t,5);Vi.setIndex([0,1,2,0,2,3]),Vi.setAttribute("position",new Ei(n,3,0,!1)),Vi.setAttribute("uv",new Ei(n,2,3,!1))}this.geometry=Vi,this.material=e!==void 0?e:new Ti,this.center=new V(.5,.5)}dc.prototype=Object.assign(Object.create(te.prototype),{constructor:dc,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Wi.setFromMatrixScale(this.matrixWorld),bh.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),ji.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Wi.multiplyScalar(-ji.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Zo(Xo.set(-.5,-.5,0),ji,o,Wi,i,r),Zo(Fr.set(.5,-.5,0),ji,o,Wi,i,r),Zo(Yo.set(.5,.5,0),ji,o,Wi,i,r),eu.set(0,0),Ua.set(1,0),tu.set(1,1);let s=e.ray.intersectTriangle(Xo,Fr,Yo,!1,Or);if(s===null&&(Zo(Fr.set(-.5,.5,0),ji,o,Wi,i,r),Ua.set(0,1),s=e.ray.intersectTriangle(Xo,Yo,Fr,!1,Or),s===null))return;const a=e.ray.origin.distanceTo(Or);a<e.near||a>e.far||t.push({distance:a,point:Or.clone(),uv:bt.getUV(Or,Xo,Fr,Yo,eu,Ua,tu,new V),face:null,object:this})},copy:function(e){return te.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}});function Zo(e,t,n,i,r,o){qi.subVectors(e,n).addScalar(.5).multiply(i),r!==void 0?(Nr.x=o*qi.x-r*qi.y,Nr.y=r*qi.x+o*qi.y):Nr.copy(qi),e.copy(t),e.x+=Nr.x,e.y+=Nr.y,e.applyMatrix4(bh)}const Jo=new x,nu=new x;function As(){te.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}As.prototype=Object.assign(Object.create(te.prototype),{constructor:As,isLOD:!0,copy:function(e){te.prototype.copy.call(this,e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){if(this.levels.length>0){Jo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Jo);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){Jo.setFromMatrixPosition(e.matrixWorld),nu.setFromMatrixPosition(this.matrixWorld);const n=Jo.distanceTo(nu)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},toJSON:function(e){const t=te.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}});function pc(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),ee.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Fe,this.bindMatrixInverse=new Fe}pc.prototype=Object.assign(Object.create(ee.prototype),{constructor:pc,isSkinnedMesh:!0,copy:function(e){return ee.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new Qe,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){ee.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new x,t=new Qe,n=new Qe,i=new x,r=new Fe;return function(o,s){const a=this.skeleton,c=this.geometry;t.fromBufferAttribute(c.attributes.skinIndex,o),n.fromBufferAttribute(c.attributes.skinWeight,o),e.fromBufferAttribute(c.attributes.position,o).applyMatrix4(this.bindMatrix),s.set(0,0,0);for(let l=0;l<4;l++){const h=n.getComponent(l);if(h!==0){const u=t.getComponent(l);r.multiplyMatrices(a.bones[u].matrixWorld,a.boneInverses[u]),s.addScaledVector(i.copy(e).applyMatrix4(r),h)}}return s.applyMatrix4(this.bindMatrixInverse)}}()});const iu=new Fe,N0=new Fe;function mc(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Fe)}}Object.assign(mc.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const n=new Fe;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const s=e[r]?e[r].matrixWorld:N0;iu.multiplyMatrices(s,t[r]),iu.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new mc(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function ru(){te.call(this),this.type="Bone"}ru.prototype=Object.assign(Object.create(te.prototype),{constructor:ru,isBone:!0});const ou=new Fe,su=new Fe,$o=[],Br=new ee;function gc(e,t,n){ee.call(this,e,t),this.instanceMatrix=new Ae(new Float32Array(n*16),16),this.count=n,this.frustumCulled=!1}gc.prototype=Object.assign(Object.create(ee.prototype),{constructor:gc,isInstancedMesh:!0,copy:function(e){return ee.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){const n=this.matrixWorld,i=this.count;if(Br.geometry=this.geometry,Br.material=this.material,Br.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,ou),su.multiplyMatrices(n,ou),Br.matrixWorld=su,Br.raycast(e,$o);for(let o=0,s=$o.length;o<s;o++){const a=$o[o];a.instanceId=r,a.object=this,t.push(a)}$o.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function nt(e){Te.call(this),this.type="LineBasicMaterial",this.color=new ce(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}nt.prototype=Object.create(Te.prototype);nt.prototype.constructor=nt;nt.prototype.isLineBasicMaterial=!0;nt.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const au=new x,cu=new x,lu=new Fe,Qo=new Tr,Ko=new kn;function De(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),te.call(this),this.type="Line",this.geometry=e!==void 0?e:new he,this.material=t!==void 0?t:new nt,this.updateMorphTargets()}De.prototype=Object.assign(Object.create(te.prototype),{constructor:De,isLine:!0,copy:function(e){return te.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)au.fromBufferAttribute(t,i-1),cu.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=au.distanceTo(cu);e.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let i=1,r=t.length;i<r;i++)n[i]=n[i-1],n[i]+=t[i-1].distanceTo(t[i])}return this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Ko.copy(n.boundingSphere),Ko.applyMatrix4(i),Ko.radius+=r,e.ray.intersectsSphere(Ko)===!1)return;lu.getInverse(i),Qo.copy(e.ray).applyMatrix4(lu);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,a=new x,c=new x,l=new x,h=new x,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,p=n.attributes.position.array;if(f!==null){const g=f.array;for(let v=0,m=g.length-1;v<m;v+=u){const y=g[v],_=g[v+1];if(a.fromArray(p,y*3),c.fromArray(p,_*3),Qo.distanceSqToSegment(a,c,h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(h);b<e.near||b>e.far||t.push({distance:b,point:l.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(let g=0,v=p.length/3-1;g<v;g+=u){if(a.fromArray(p,3*g),c.fromArray(p,3*g+3),Qo.distanceSqToSegment(a,c,h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(h);y<e.near||y>e.far||t.push({distance:y,point:l.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,d=f.length;for(let p=0;p<d-1;p+=u){if(Qo.distanceSqToSegment(f[p],f[p+1],h,l)>s)continue;h.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(h);v<e.near||v>e.far||t.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const es=new x,ts=new x;function lt(e,t){De.call(this,e,t),this.type="LineSegments"}lt.prototype=Object.assign(Object.create(De.prototype),{constructor:lt,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)es.fromBufferAttribute(t,i),ts.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+es.distanceTo(ts);e.setAttribute("lineDistance",new ie(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let i=0,r=t.length;i<r;i+=2)es.copy(t[i]),ts.copy(t[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+es.distanceTo(ts)}return this}});function yc(e,t){De.call(this,e,t),this.type="LineLoop"}yc.prototype=Object.assign(Object.create(De.prototype),{constructor:yc,isLineLoop:!0});function vn(e){Te.call(this),this.type="PointsMaterial",this.color=new ce(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}vn.prototype=Object.create(Te.prototype);vn.prototype.constructor=vn;vn.prototype.isPointsMaterial=!0;vn.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const uu=new Fe,vc=new Tr,ns=new kn,is=new x;function no(e,t){te.call(this),this.type="Points",this.geometry=e!==void 0?e:new he,this.material=t!==void 0?t:new vn,this.updateMorphTargets()}no.prototype=Object.assign(Object.create(te.prototype),{constructor:no,isPoints:!0,copy:function(e){return te.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),ns.copy(n.boundingSphere),ns.applyMatrix4(i),ns.radius+=r,e.ray.intersectsSphere(ns)===!1)return;uu.getInverse(i),vc.copy(e.ray).applyMatrix4(uu);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position.array;if(a!==null){const h=a.array;for(let u=0,f=h.length;u<f;u++){const d=h[u];is.fromArray(l,d*3),Ga(is,d,s,i,e,t,this)}}else for(let h=0,u=l.length/3;h<u;h++)is.fromArray(l,h*3),Ga(is,h,s,i,e,t,this)}else{const a=n.vertices;for(let c=0,l=a.length;c<l;c++)Ga(a[c],c,s,i,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const s=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Ga(e,t,n,i,r,o,s){const a=vc.distanceSqToPoint(e);if(a<n){const c=new x;vc.closestPointToPoint(e,c),c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;o.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:s})}}function hu(e,t,n,i,r,o,s,a,c){et.call(this,e,t,n,i,r,o,s,a,c),this.format=s!==void 0?s:xi,this.minFilter=o!==void 0?o:Mt,this.magFilter=r!==void 0?r:Mt,this.generateMipmaps=!1}hu.prototype=Object.assign(Object.create(et.prototype),{constructor:hu,isVideoTexture:!0,update:function(){const e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function io(e,t,n,i,r,o,s,a,c,l,h,u){et.call(this,null,o,s,a,c,l,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}io.prototype=Object.create(et.prototype);io.prototype.constructor=io;io.prototype.isCompressedTexture=!0;function Ls(e,t,n,i,r,o,s,a,c){et.call(this,e,t,n,i,r,o,s,a,c),this.needsUpdate=!0}Ls.prototype=Object.create(et.prototype);Ls.prototype.constructor=Ls;Ls.prototype.isCanvasTexture=!0;function Ps(e,t,n,i,r,o,s,a,c,l){if(l=l!==void 0?l:nr,l!==nr&&l!==Yr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===nr&&(n=_s),n===void 0&&l===Yr&&(n=Vr),et.call(this,null,i,r,o,s,a,l,n,c),this.image={width:e,height:t},this.magFilter=s!==void 0?s:pt,this.minFilter=a!==void 0?a:pt,this.flipY=!1,this.generateMipmaps=!1}Ps.prototype=Object.create(et.prototype);Ps.prototype.constructor=Ps;Ps.prototype.isDepthTexture=!0;function Cs(e){he.call(this),this.type="WireframeGeometry";const t=[],n=[0,0],i={},r=["a","b","c"];if(e&&e.isGeometry){const o=e.faces;for(let s=0,a=o.length;s<a;s++){const c=o[s];for(let l=0;l<3;l++){const h=c[r[l]],u=c[r[(l+1)%3]];n[0]=Math.min(h,u),n[1]=Math.max(h,u);const f=n[0]+","+n[1];i[f]===void 0&&(i[f]={index1:n[0],index2:n[1]})}}for(const s in i){const a=i[s];let c=e.vertices[a.index1];t.push(c.x,c.y,c.z),c=e.vertices[a.index2],t.push(c.x,c.y,c.z)}}else if(e&&e.isBufferGeometry){let o=new x;if(e.index!==null){const s=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],f=u.start,d=u.count;for(let p=f,g=f+d;p<g;p+=3)for(let v=0;v<3;v++){const m=a.getX(p+v),y=a.getX(p+(v+1)%3);n[0]=Math.min(m,y),n[1]=Math.max(m,y);const _=n[0]+","+n[1];i[_]===void 0&&(i[_]={index1:n[0],index2:n[1]})}}for(const l in i){const h=i[l];o.fromBufferAttribute(s,h.index1),t.push(o.x,o.y,o.z),o.fromBufferAttribute(s,h.index2),t.push(o.x,o.y,o.z)}}else{const s=e.attributes.position;for(let a=0,c=s.count/3;a<c;a++)for(let l=0;l<3;l++){const h=3*a+l;o.fromBufferAttribute(s,h),t.push(o.x,o.y,o.z);const u=3*a+(l+1)%3;o.fromBufferAttribute(s,u),t.push(o.x,o.y,o.z)}}}this.setAttribute("position",new ie(t,3))}Cs.prototype=Object.create(he.prototype);Cs.prototype.constructor=Cs;function Rs(e,t,n){Ce.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new ro(e,t,n)),this.mergeVertices()}Rs.prototype=Object.create(Ce.prototype);Rs.prototype.constructor=Rs;function ro(e,t,n){he.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const i=[],r=[],o=[],s=[],a=1e-5,c=new x,l=new x,h=new x,u=new x,f=new x;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=t+1;for(let p=0;p<=n;p++){const g=p/n;for(let v=0;v<=t;v++){const m=v/t;e(m,g,l),r.push(l.x,l.y,l.z),m-a>=0?(e(m-a,g,h),u.subVectors(l,h)):(e(m+a,g,h),u.subVectors(h,l)),g-a>=0?(e(m,g-a,h),f.subVectors(l,h)):(e(m,g+a,h),f.subVectors(h,l)),c.crossVectors(u,f).normalize(),o.push(c.x,c.y,c.z),s.push(m,g)}}for(let p=0;p<n;p++)for(let g=0;g<t;g++){const v=p*d+g,m=p*d+g+1,y=(p+1)*d+g+1,_=(p+1)*d+g;i.push(v,m,_),i.push(m,y,_)}this.setIndex(i),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(o,3)),this.setAttribute("uv",new ie(s,2))}ro.prototype=Object.create(he.prototype);ro.prototype.constructor=ro;function Is(e,t,n,i){Ce.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},this.fromBufferGeometry(new Gt(e,t,n,i)),this.mergeVertices()}Is.prototype=Object.create(Ce.prototype);Is.prototype.constructor=Is;function Gt(e,t,n,i){he.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},n=n||1,i=i||0;const r=[],o=[];s(i),c(n),l(),this.setAttribute("position",new ie(r,3)),this.setAttribute("normal",new ie(r.slice(),3)),this.setAttribute("uv",new ie(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function s(m){const y=new x,_=new x,w=new x;for(let b=0;b<t.length;b+=3)f(t[b+0],y),f(t[b+1],_),f(t[b+2],w),a(y,_,w,m)}function a(m,y,_,w){const b=Math.pow(2,w),T=[];for(let A=0;A<=b;A++){T[A]=[];const N=m.clone().lerp(_,A/b),P=y.clone().lerp(_,A/b),Y=b-A;for(let O=0;O<=Y;O++)O===0&&A===b?T[A][O]=N:T[A][O]=N.clone().lerp(P,O/Y)}for(let A=0;A<b;A++)for(let N=0;N<2*(b-A)-1;N++){const P=Math.floor(N/2);N%2===0?(u(T[A][P+1]),u(T[A+1][P]),u(T[A][P])):(u(T[A][P+1]),u(T[A+1][P+1]),u(T[A+1][P]))}}function c(m){const y=new x;for(let _=0;_<r.length;_+=3)y.x=r[_+0],y.y=r[_+1],y.z=r[_+2],y.normalize().multiplyScalar(m),r[_+0]=y.x,r[_+1]=y.y,r[_+2]=y.z}function l(){const m=new x;for(let y=0;y<r.length;y+=3){m.x=r[y+0],m.y=r[y+1],m.z=r[y+2];const _=g(m)/2/Math.PI+.5,w=v(m)/Math.PI+.5;o.push(_,1-w)}d(),h()}function h(){for(let m=0;m<o.length;m+=6){const y=o[m+0],_=o[m+2],w=o[m+4],b=Math.max(y,_,w),T=Math.min(y,_,w);b>.9&&T<.1&&(y<.2&&(o[m+0]+=1),_<.2&&(o[m+2]+=1),w<.2&&(o[m+4]+=1))}}function u(m){r.push(m.x,m.y,m.z)}function f(m,y){const _=m*3;y.x=e[_+0],y.y=e[_+1],y.z=e[_+2]}function d(){const m=new x,y=new x,_=new x,w=new x,b=new V,T=new V,A=new V;for(let N=0,P=0;N<r.length;N+=9,P+=6){m.set(r[N+0],r[N+1],r[N+2]),y.set(r[N+3],r[N+4],r[N+5]),_.set(r[N+6],r[N+7],r[N+8]),b.set(o[P+0],o[P+1]),T.set(o[P+2],o[P+3]),A.set(o[P+4],o[P+5]),w.copy(m).add(y).add(_).divideScalar(3);const Y=g(w);p(b,P+0,m,Y),p(T,P+2,y,Y),p(A,P+4,_,Y)}}function p(m,y,_,w){w<0&&m.x===1&&(o[y]=m.x-1),_.x===0&&_.z===0&&(o[y]=w/2/Math.PI+.5)}function g(m){return Math.atan2(m.z,-m.x)}function v(m){return Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))}}Gt.prototype=Object.create(he.prototype);Gt.prototype.constructor=Gt;function Ds(e,t){Ce.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new oo(e,t)),this.mergeVertices()}Ds.prototype=Object.create(Ce.prototype);Ds.prototype.constructor=Ds;function oo(e,t){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];Gt.call(this,n,i,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}oo.prototype=Object.create(Gt.prototype);oo.prototype.constructor=oo;function Os(e,t){Ce.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new zt(e,t)),this.mergeVertices()}Os.prototype=Object.create(Ce.prototype);Os.prototype.constructor=Os;function zt(e,t){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Gt.call(this,n,i,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}zt.prototype=Object.create(Gt.prototype);zt.prototype.constructor=zt;function Ns(e,t){Ce.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new so(e,t)),this.mergeVertices()}Ns.prototype=Object.create(Ce.prototype);Ns.prototype.constructor=Ns;function so(e,t){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Gt.call(this,i,r,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}so.prototype=Object.create(Gt.prototype);so.prototype.constructor=so;function Fs(e,t){Ce.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ao(e,t)),this.mergeVertices()}Fs.prototype=Object.create(Ce.prototype);Fs.prototype.constructor=Fs;function ao(e,t){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Gt.call(this,r,o,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}ao.prototype=Object.create(Gt.prototype);ao.prototype.constructor=ao;function Bs(e,t,n,i,r,o){Ce.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},o!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");const s=new ur(e,t,n,i,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals,this.fromBufferGeometry(s),this.mergeVertices()}Bs.prototype=Object.create(Ce.prototype);Bs.prototype.constructor=Bs;function ur(e,t,n,i,r){he.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},t=t||64,n=n||1,i=i||8,r=r||!1;const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const s=new x,a=new x,c=new V;let l=new x;const h=[],u=[],f=[],d=[];p(),this.setIndex(d),this.setAttribute("position",new ie(h,3)),this.setAttribute("normal",new ie(u,3)),this.setAttribute("uv",new ie(f,2));function p(){for(let y=0;y<t;y++)g(y);g(r===!1?t:0),m(),v()}function g(y){l=e.getPointAt(y/t,l);const _=o.normals[y],w=o.binormals[y];for(let b=0;b<=i;b++){const T=b/i*Math.PI*2,A=Math.sin(T),N=-Math.cos(T);a.x=N*_.x+A*w.x,a.y=N*_.y+A*w.y,a.z=N*_.z+A*w.z,a.normalize(),u.push(a.x,a.y,a.z),s.x=l.x+n*a.x,s.y=l.y+n*a.y,s.z=l.z+n*a.z,h.push(s.x,s.y,s.z)}}function v(){for(let y=1;y<=t;y++)for(let _=1;_<=i;_++){const w=(i+1)*(y-1)+(_-1),b=(i+1)*y+(_-1),T=(i+1)*y+_,A=(i+1)*(y-1)+_;d.push(w,b,A),d.push(b,T,A)}}function m(){for(let y=0;y<=t;y++)for(let _=0;_<=i;_++)c.x=y/t,c.y=_/i,f.push(c.x,c.y)}}ur.prototype=Object.create(he.prototype);ur.prototype.constructor=ur;ur.prototype.toJSON=function(){const e=he.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e};function zs(e,t,n,i,r,o,s){Ce.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},s!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new co(e,t,n,i,r,o)),this.mergeVertices()}zs.prototype=Object.create(Ce.prototype);zs.prototype.constructor=zs;function co(e,t,n,i,r,o){he.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},e=e||1,t=t||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,o=o||3;const s=[],a=[],c=[],l=[],h=new x,u=new x,f=new x,d=new x,p=new x,g=new x,v=new x;for(let y=0;y<=n;++y){const _=y/n*r*Math.PI*2;m(_,r,o,e,f),m(_+.01,r,o,e,d),g.subVectors(d,f),v.addVectors(d,f),p.crossVectors(g,v),v.crossVectors(p,g),p.normalize(),v.normalize();for(let w=0;w<=i;++w){const b=w/i*Math.PI*2,T=-t*Math.cos(b),A=t*Math.sin(b);h.x=f.x+(T*v.x+A*p.x),h.y=f.y+(T*v.y+A*p.y),h.z=f.z+(T*v.z+A*p.z),a.push(h.x,h.y,h.z),u.subVectors(h,f).normalize(),c.push(u.x,u.y,u.z),l.push(y/n),l.push(w/i)}}for(let y=1;y<=n;y++)for(let _=1;_<=i;_++){const w=(i+1)*(y-1)+(_-1),b=(i+1)*y+(_-1),T=(i+1)*y+_,A=(i+1)*(y-1)+_;s.push(w,b,A),s.push(b,T,A)}this.setIndex(s),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(l,2));function m(y,_,w,b,T){const A=Math.cos(y),N=Math.sin(y),P=w/_*y,Y=Math.cos(P);T.x=b*(2+Y)*.5*A,T.y=b*(2+Y)*N*.5,T.z=b*Math.sin(P)*.5}}co.prototype=Object.create(he.prototype);co.prototype.constructor=co;function Us(e,t,n,i,r){Ce.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new In(e,t,n,i,r)),this.mergeVertices()}Us.prototype=Object.create(Ce.prototype);Us.prototype.constructor=Us;function In(e,t,n,i,r){he.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},e=e||1,t=t||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;const o=[],s=[],a=[],c=[],l=new x,h=new x,u=new x;for(let f=0;f<=n;f++)for(let d=0;d<=i;d++){const p=d/i*r,g=f/n*Math.PI*2;h.x=(e+t*Math.cos(g))*Math.cos(p),h.y=(e+t*Math.cos(g))*Math.sin(p),h.z=t*Math.sin(g),s.push(h.x,h.y,h.z),l.x=e*Math.cos(p),l.y=e*Math.sin(p),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(d/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let d=1;d<=i;d++){const p=(i+1)*f+d-1,g=(i+1)*(f-1)+d-1,v=(i+1)*(f-1)+d,m=(i+1)*f+d;o.push(p,g,m),o.push(g,v,m)}this.setIndex(o),this.setAttribute("position",new ie(s,3)),this.setAttribute("normal",new ie(a,3)),this.setAttribute("uv",new ie(c,2))}In.prototype=Object.create(he.prototype);In.prototype.constructor=In;const F0={triangulate:function(e,t,n){n=n||2;let i=t&&t.length,r=i?t[0]*n:e.length,o=wh(e,0,r,n,!0),s=[];if(!o||o.next===o.prev)return s;let a,c,l,h,u,f,d;if(i&&(o=k0(e,t,o,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let p=n;p<r;p+=n)u=e[p],f=e[p+1],u<a&&(a=u),f<c&&(c=f),u>l&&(l=u),f>h&&(h=f);d=Math.max(l-a,h-c),d=d!==0?1/d:0}return lo(o,s,n,a,c,d),s}};function wh(e,t,n,i,r){let o,s;if(r===Q0(e,t,n,i)>0)for(o=t;o<n;o+=i)s=fu(o,e[o],e[o+1],s);else for(o=n-i;o>=t;o-=i)s=fu(o,e[o],e[o+1],s);return s&&fa(s,s.next)&&(ho(s),s=s.next),s}function si(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(fa(n,n.next)||ot(n.prev,n,n.next)===0)){if(ho(n),n=t=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function lo(e,t,n,i,r,o,s){if(!e)return;!s&&o&&q0(e,i,r,o);let a=e,c,l;for(;e.prev!==e.next;){if(c=e.prev,l=e.next,o?z0(e,i,r,o):B0(e)){t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),ho(e),e=l.next,a=l.next;continue}if(e=l,e===a){s?s===1?(e=U0(si(e),t,n),lo(e,t,n,i,r,o,2)):s===2&&G0(e,t,n,i,r,o):lo(si(e),t,n,i,r,o,1);break}}}function B0(e){let t=e.prev,n=e,i=e.next;if(ot(t,n,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(tr(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&ot(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function z0(e,t,n,i){let r=e.prev,o=e,s=e.next;if(ot(r,o,s)>=0)return!1;let a=r.x<o.x?r.x<s.x?r.x:s.x:o.x<s.x?o.x:s.x,c=r.y<o.y?r.y<s.y?r.y:s.y:o.y<s.y?o.y:s.y,l=r.x>o.x?r.x>s.x?r.x:s.x:o.x>s.x?o.x:s.x,h=r.y>o.y?r.y>s.y?r.y:s.y:o.y>s.y?o.y:s.y,u=xc(a,c,t,n,i),f=xc(l,h,t,n,i),d=e.prevZ,p=e.nextZ;for(;d&&d.z>=u&&p&&p.z<=f;){if(d!==e.prev&&d!==e.next&&tr(r.x,r.y,o.x,o.y,s.x,s.y,d.x,d.y)&&ot(d.prev,d,d.next)>=0||(d=d.prevZ,p!==e.prev&&p!==e.next&&tr(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&ot(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&tr(r.x,r.y,o.x,o.y,s.x,s.y,d.x,d.y)&&ot(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==e.prev&&p!==e.next&&tr(r.x,r.y,o.x,o.y,s.x,s.y,p.x,p.y)&&ot(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function U0(e,t,n){let i=e;do{let r=i.prev,o=i.next.next;!fa(r,o)&&Mh(r,i,i.next,o)&&uo(r,o)&&uo(o,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(o.i/n),ho(i),ho(i.next),i=e=o),i=i.next}while(i!==e);return si(i)}function G0(e,t,n,i,r,o){let s=e;do{let a=s.next.next;for(;a!==s.prev;){if(s.i!==a.i&&Z0(s,a)){let c=Sh(s,a);s=si(s,s.next),c=si(c,c.next),lo(s,t,n,i,r,o),lo(c,t,n,i,r,o);return}a=a.next}s=s.next}while(s!==e)}function k0(e,t,n,i){let r=[],o,s,a,c,l;for(o=0,s=t.length;o<s;o++)a=t[o]*i,c=o<s-1?t[o+1]*i:e.length,l=wh(e,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(Y0(l));for(r.sort(H0),o=0;o<r.length;o++)V0(r[o],n),n=si(n,n.next);return n}function H0(e,t){return e.x-t.x}function V0(e,t){if(t=W0(e,t),t){const n=Sh(t,e);si(t,t.next),si(n,n.next)}}function W0(e,t){let n=t,i=e.x,r=e.y,o=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){let f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>o){if(o=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!s)return null;if(i===o)return s;let a=s,c=s.x,l=s.y,h=1/0,u;n=s;do i>=n.x&&n.x>=c&&i!==n.x&&tr(r<l?i:o,r,c,l,r<l?o:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),uo(n,e)&&(u<h||u===h&&(n.x>s.x||n.x===s.x&&j0(s,n)))&&(s=n,h=u)),n=n.next;while(n!==a);return s}function j0(e,t){return ot(e.prev,e,t.prev)<0&&ot(t.next,e,e.next)<0}function q0(e,t,n,i){let r=e;do r.z===null&&(r.z=xc(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,X0(r)}function X0(e){let t,n,i,r,o,s,a,c,l=1;do{for(n=e,e=null,o=null,s=0;n;){for(s++,i=n,a=0,t=0;t<l&&(a++,i=i.nextZ,!!i);t++);for(c=l;a>0||c>0&&i;)a!==0&&(c===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),o?o.nextZ=r:e=r,r.prevZ=o,o=r;n=i}o.nextZ=null,l*=2}while(s>1);return e}function xc(e,t,n,i,r){return e=32767*(e-n)*r,t=32767*(t-i)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function Y0(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function tr(e,t,n,i,r,o,s,a){return(r-s)*(t-a)-(e-s)*(o-a)>=0&&(e-s)*(i-a)-(n-s)*(t-a)>=0&&(n-s)*(o-a)-(r-s)*(i-a)>=0}function Z0(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!J0(e,t)&&(uo(e,t)&&uo(t,e)&&$0(e,t)&&(ot(e.prev,e,t.prev)||ot(e,t.prev,t))||fa(e,t)&&ot(e.prev,e,e.next)>0&&ot(t.prev,t,t.next)>0)}function ot(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function fa(e,t){return e.x===t.x&&e.y===t.y}function Mh(e,t,n,i){const r=os(ot(e,t,n)),o=os(ot(e,t,i)),s=os(ot(n,i,e)),a=os(ot(n,i,t));return!!(r!==o&&s!==a||r===0&&rs(e,n,t)||o===0&&rs(e,i,t)||s===0&&rs(n,e,i)||a===0&&rs(n,t,i))}function rs(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function os(e){return e>0?1:e<0?-1:0}function J0(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Mh(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function uo(e,t){return ot(e.prev,e,e.next)<0?ot(e,t,e.next)>=0&&ot(e,e.prev,t)>=0:ot(e,t,e.prev)<0||ot(e,e.next,t)<0}function $0(e,t){let n=e,i=!1,r=(e.x+t.x)/2,o=(e.y+t.y)/2;do n.y>o!=n.next.y>o&&n.next.y!==n.y&&r<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function Sh(e,t){let n=new _c(e.i,e.x,e.y),i=new _c(t.i,t.x,t.y),r=e.next,o=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,o.next=i,i.prev=o,i}function fu(e,t,n,i){const r=new _c(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ho(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _c(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Q0(e,t,n,i){let r=0;for(let o=t,s=n-i;o<n;o+=i)r+=(e[s]-e[o])*(e[o+1]+e[s+1]),s=o;return r}const ni={area:function(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},isClockWise:function(e){return ni.area(e)<0},triangulateShape:function(e,t){const n=[],i=[],r=[];du(e),pu(n,e);let o=e.length;t.forEach(du);for(let a=0;a<t.length;a++)i.push(o),o+=t[a].length,pu(n,t[a]);const s=F0.triangulate(n,i);for(let a=0;a<s.length;a+=3)r.push(s.slice(a,a+3));return r}};function du(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function pu(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}function hr(e,t){Ce.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Nn(e,t)),this.mergeVertices()}hr.prototype=Object.create(Ce.prototype);hr.prototype.constructor=hr;hr.prototype.toJSON=function(){const e=Ce.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return Eh(t,n,e)};function Nn(e,t){he.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let s=0,a=e.length;s<a;s++){const c=e[s];o(c)}this.setAttribute("position",new ie(i,3)),this.setAttribute("uv",new ie(r,2)),this.computeVertexNormals();function o(s){const a=[],c=t.curveSegments!==void 0?t.curveSegments:12,l=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:100,u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:6,d=t.bevelSize!==void 0?t.bevelSize:f-2,p=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,m=t.UVGenerator!==void 0?t.UVGenerator:K0;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let y,_=!1,w,b,T,A;v&&(y=v.getSpacedPoints(l),_=!0,u=!1,w=v.computeFrenetFrames(l,!1),b=new x,T=new x,A=new x),u||(g=0,f=0,d=0,p=0);const N=s.extractPoints(c);let P=N.shape;const Y=N.holes;if(!ni.isClockWise(P)){P=P.reverse();for(let I=0,B=Y.length;I<B;I++){const D=Y[I];ni.isClockWise(D)&&(Y[I]=D.reverse())}}const U=ni.triangulateShape(P,Y),q=P;for(let I=0,B=Y.length;I<B;I++){const D=Y[I];P=P.concat(D)}function z(I,B,D){return B||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().multiplyScalar(D).add(I)}const G=P.length,K=U.length;function pe(I,B,D){let L,J,fe;const M=I.x-B.x,E=I.y-B.y,Z=D.x-I.x,j=D.y-I.y,me=M*M+E*E,we=M*j-E*Z;if(Math.abs(we)>Number.EPSILON){const C=Math.sqrt(me),ae=Math.sqrt(Z*Z+j*j),be=B.x-E/C,ge=B.y+M/C,He=D.x-j/ae,Xe=D.y+Z/ae,Me=((He-be)*j-(Xe-ge)*Z)/(M*j-E*Z);L=be+M*Me-I.x,J=ge+E*Me-I.y;const R=L*L+J*J;if(R<=2)return new V(L,J);fe=Math.sqrt(R/2)}else{let C=!1;M>Number.EPSILON?Z>Number.EPSILON&&(C=!0):M<-Number.EPSILON?Z<-Number.EPSILON&&(C=!0):Math.sign(E)===Math.sign(j)&&(C=!0),C?(L=-E,J=M,fe=Math.sqrt(me)):(L=M,J=E,fe=Math.sqrt(me/2))}return new V(L/fe,J/fe)}const ne=[];for(let I=0,B=q.length,D=B-1,L=I+1;I<B;I++,D++,L++)D===B&&(D=0),L===B&&(L=0),ne[I]=pe(q[I],q[D],q[L]);const oe=[];let se,de=ne.concat();for(let I=0,B=Y.length;I<B;I++){const D=Y[I];se=[];for(let L=0,J=D.length,fe=J-1,M=L+1;L<J;L++,fe++,M++)fe===J&&(fe=0),M===J&&(M=0),se[L]=pe(D[L],D[fe],D[M]);oe.push(se),de=de.concat(se)}for(let I=0;I<g;I++){const B=I/g,D=f*Math.cos(B*Math.PI/2),L=d*Math.sin(B*Math.PI/2)+p;for(let J=0,fe=q.length;J<fe;J++){const M=z(q[J],ne[J],L);W(M.x,M.y,-D)}for(let J=0,fe=Y.length;J<fe;J++){const M=Y[J];se=oe[J];for(let E=0,Z=M.length;E<Z;E++){const j=z(M[E],se[E],L);W(j.x,j.y,-D)}}}const Ge=d+p;for(let I=0;I<G;I++){const B=u?z(P[I],de[I],Ge):P[I];_?(T.copy(w.normals[0]).multiplyScalar(B.x),b.copy(w.binormals[0]).multiplyScalar(B.y),A.copy(y[0]).add(T).add(b),W(A.x,A.y,A.z)):W(B.x,B.y,0)}for(let I=1;I<=l;I++)for(let B=0;B<G;B++){const D=u?z(P[B],de[B],Ge):P[B];_?(T.copy(w.normals[I]).multiplyScalar(D.x),b.copy(w.binormals[I]).multiplyScalar(D.y),A.copy(y[I]).add(T).add(b),W(A.x,A.y,A.z)):W(D.x,D.y,h/l*I)}for(let I=g-1;I>=0;I--){const B=I/g,D=f*Math.cos(B*Math.PI/2),L=d*Math.sin(B*Math.PI/2)+p;for(let J=0,fe=q.length;J<fe;J++){const M=z(q[J],ne[J],L);W(M.x,M.y,h+D)}for(let J=0,fe=Y.length;J<fe;J++){const M=Y[J];se=oe[J];for(let E=0,Z=M.length;E<Z;E++){const j=z(M[E],se[E],L);_?W(j.x,j.y+y[l-1].y,y[l-1].x+D):W(j.x,j.y,h+D)}}}Be(),re();function Be(){const I=i.length/3;if(u){let B=0,D=G*B;for(let L=0;L<K;L++){const J=U[L];xe(J[2]+D,J[1]+D,J[0]+D)}B=l+g*2,D=G*B;for(let L=0;L<K;L++){const J=U[L];xe(J[0]+D,J[1]+D,J[2]+D)}}else{for(let B=0;B<K;B++){const D=U[B];xe(D[2],D[1],D[0])}for(let B=0;B<K;B++){const D=U[B];xe(D[0]+G*l,D[1]+G*l,D[2]+G*l)}}n.addGroup(I,i.length/3-I,0)}function re(){const I=i.length/3;let B=0;ve(q,B),B+=q.length;for(let D=0,L=Y.length;D<L;D++){const J=Y[D];ve(J,B),B+=J.length}n.addGroup(I,i.length/3-I,1)}function ve(I,B){let D=I.length;for(;--D>=0;){const L=D;let J=D-1;J<0&&(J=I.length-1);for(let fe=0,M=l+g*2;fe<M;fe++){const E=G*fe,Z=G*(fe+1),j=B+L+E,me=B+J+E,we=B+J+Z,C=B+L+Z;_e(j,me,we,C)}}}function W(I,B,D){a.push(I),a.push(B),a.push(D)}function xe(I,B,D){Q(I),Q(B),Q(D);const L=i.length/3,J=m.generateTopUV(n,i,L-3,L-2,L-1);k(J[0]),k(J[1]),k(J[2])}function _e(I,B,D,L){Q(I),Q(B),Q(L),Q(B),Q(D),Q(L);const J=i.length/3,fe=m.generateSideWallUV(n,i,J-6,J-3,J-2,J-1);k(fe[0]),k(fe[1]),k(fe[3]),k(fe[1]),k(fe[2]),k(fe[3])}function Q(I){i.push(a[I*3+0]),i.push(a[I*3+1]),i.push(a[I*3+2])}function k(I){r.push(I.x),r.push(I.y)}}}Nn.prototype=Object.create(he.prototype);Nn.prototype.constructor=Nn;Nn.prototype.toJSON=function(){const e=he.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return Eh(t,n,e)};const K0={generateTopUV:function(e,t,n,i,r){const o=t[n*3],s=t[n*3+1],a=t[i*3],c=t[i*3+1],l=t[r*3],h=t[r*3+1];return[new V(o,s),new V(a,c),new V(l,h)]},generateSideWallUV:function(e,t,n,i,r,o){const s=t[n*3],a=t[n*3+1],c=t[n*3+2],l=t[i*3],h=t[i*3+1],u=t[i*3+2],f=t[r*3],d=t[r*3+1],p=t[r*3+2],g=t[o*3],v=t[o*3+1],m=t[o*3+2];return Math.abs(a-h)<.01?[new V(s,1-c),new V(l,1-u),new V(f,1-p),new V(g,1-m)]:[new V(a,1-c),new V(h,1-u),new V(d,1-p),new V(v,1-m)]}};function Eh(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const o=e[i];n.shapes.push(o.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}function Gs(e,t){Ce.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new fo(e,t)),this.mergeVertices()}Gs.prototype=Object.create(Ce.prototype);Gs.prototype.constructor=Gs;function fo(e,t){t=t||{};const n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ce;const i=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),Nn.call(this,i,t),this.type="TextBufferGeometry"}fo.prototype=Object.create(Nn.prototype);fo.prototype.constructor=fo;function ks(e,t,n,i,r,o,s){Ce.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new Ai(e,t,n,i,r,o,s)),this.mergeVertices()}ks.prototype=Object.create(Ce.prototype);ks.prototype.constructor=ks;function Ai(e,t,n,i,r,o,s){he.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:s},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,o=o!==void 0?o:0,s=s!==void 0?s:Math.PI;const a=Math.min(o+s,Math.PI);let c=0;const l=[],h=new x,u=new x,f=[],d=[],p=[],g=[];for(let v=0;v<=n;v++){const m=[],y=v/n;let _=0;v==0&&o==0?_=.5/t:v==n&&a==Math.PI&&(_=-.5/t);for(let w=0;w<=t;w++){const b=w/t;h.x=-e*Math.cos(i+b*r)*Math.sin(o+y*s),h.y=e*Math.cos(o+y*s),h.z=e*Math.sin(i+b*r)*Math.sin(o+y*s),d.push(h.x,h.y,h.z),u.copy(h).normalize(),p.push(u.x,u.y,u.z),g.push(b+_,1-y),m.push(c++)}l.push(m)}for(let v=0;v<n;v++)for(let m=0;m<t;m++){const y=l[v][m+1],_=l[v][m],w=l[v+1][m],b=l[v+1][m+1];(v!==0||o>0)&&f.push(y,_,b),(v!==n-1||a<Math.PI)&&f.push(_,w,b)}this.setIndex(f),this.setAttribute("position",new ie(d,3)),this.setAttribute("normal",new ie(p,3)),this.setAttribute("uv",new ie(g,2))}Ai.prototype=Object.create(he.prototype);Ai.prototype.constructor=Ai;function Hs(e,t,n,i,r,o){Ce.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},this.fromBufferGeometry(new po(e,t,n,i,r,o)),this.mergeVertices()}Hs.prototype=Object.create(Ce.prototype);Hs.prototype.constructor=Hs;function po(e,t,n,i,r,o){he.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},e=e||.5,t=t||1,r=r!==void 0?r:0,o=o!==void 0?o:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;const s=[],a=[],c=[],l=[];let h=e;const u=(t-e)/i,f=new x,d=new V;for(let p=0;p<=i;p++){for(let g=0;g<=n;g++){const v=r+g/n*o;f.x=h*Math.cos(v),f.y=h*Math.sin(v),a.push(f.x,f.y,f.z),c.push(0,0,1),d.x=(f.x/t+1)/2,d.y=(f.y/t+1)/2,l.push(d.x,d.y)}h+=u}for(let p=0;p<i;p++){const g=p*(n+1);for(let v=0;v<n;v++){const m=v+g,y=m,_=m+n+1,w=m+n+2,b=m+1;s.push(y,_,b),s.push(_,w,b)}}this.setIndex(s),this.setAttribute("position",new ie(a,3)),this.setAttribute("normal",new ie(c,3)),this.setAttribute("uv",new ie(l,2))}po.prototype=Object.create(he.prototype);po.prototype.constructor=po;function Vs(e,t,n,i){Ce.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},this.fromBufferGeometry(new mo(e,t,n,i)),this.mergeVertices()}Vs.prototype=Object.create(Ce.prototype);Vs.prototype.constructor=Vs;function mo(e,t,n,i){he.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t)||12,n=n||0,i=i||Math.PI*2,i=Oe.clamp(i,0,Math.PI*2);const r=[],o=[],s=[],a=1/t,c=new x,l=new V;for(let h=0;h<=t;h++){const u=n+h*a*i,f=Math.sin(u),d=Math.cos(u);for(let p=0;p<=e.length-1;p++)c.x=e[p].x*f,c.y=e[p].y,c.z=e[p].x*d,o.push(c.x,c.y,c.z),l.x=h/t,l.y=p/(e.length-1),s.push(l.x,l.y)}for(let h=0;h<t;h++)for(let u=0;u<e.length-1;u++){const f=u+h*e.length,d=f,p=f+e.length,g=f+e.length+1,v=f+1;r.push(d,p,v),r.push(p,g,v)}if(this.setIndex(r),this.setAttribute("position",new ie(o,3)),this.setAttribute("uv",new ie(s,2)),this.computeVertexNormals(),i===Math.PI*2){const h=this.attributes.normal.array,u=new x,f=new x,d=new x,p=t*e.length*3;for(let g=0,v=0;g<e.length;g++,v+=3)u.x=h[v+0],u.y=h[v+1],u.z=h[v+2],f.x=h[p+v+0],f.y=h[p+v+1],f.z=h[p+v+2],d.addVectors(u,f).normalize(),h[v+0]=h[p+v+0]=d.x,h[v+1]=h[p+v+1]=d.y,h[v+2]=h[p+v+2]=d.z}}mo.prototype=Object.create(he.prototype);mo.prototype.constructor=mo;function fr(e,t){Ce.call(this),this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new dr(e,t)),this.mergeVertices()}fr.prototype=Object.create(Ce.prototype);fr.prototype.constructor=fr;fr.prototype.toJSON=function(){const e=Ce.prototype.toJSON.call(this),t=this.parameters.shapes;return Th(t,e)};function dr(e,t){he.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const n=[],i=[],r=[],o=[];let s=0,a=0;if(Array.isArray(e)===!1)c(e);else for(let l=0;l<e.length;l++)c(e[l]),this.addGroup(s,a,l),s+=a,a=0;this.setIndex(n),this.setAttribute("position",new ie(i,3)),this.setAttribute("normal",new ie(r,3)),this.setAttribute("uv",new ie(o,2));function c(l){const h=i.length/3,u=l.extractPoints(t);let f=u.shape;const d=u.holes;ni.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,v=d.length;g<v;g++){const m=d[g];ni.isClockWise(m)===!0&&(d[g]=m.reverse())}const p=ni.triangulateShape(f,d);for(let g=0,v=d.length;g<v;g++){const m=d[g];f=f.concat(m)}for(let g=0,v=f.length;g<v;g++){const m=f[g];i.push(m.x,m.y,0),r.push(0,0,1),o.push(m.x,m.y)}for(let g=0,v=p.length;g<v;g++){const m=p[g],y=m[0]+h,_=m[1]+h,w=m[2]+h;n.push(y,_,w),a+=3}}}dr.prototype=Object.create(he.prototype);dr.prototype.constructor=dr;dr.prototype.toJSON=function(){const e=he.prototype.toJSON.call(this),t=this.parameters.shapes;return Th(t,e)};function Th(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}function Ws(e,t){he.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;const n=[],i=Math.cos(Oe.DEG2RAD*t),r=[0,0],o={};let s,a,c;const l=["a","b","c"];let h;e.isBufferGeometry?(h=new Ce,h.fromBufferGeometry(e)):h=e.clone(),h.mergeVertices(),h.computeFaceNormals();const u=h.vertices,f=h.faces;for(let d=0,p=f.length;d<p;d++){const g=f[d];for(let v=0;v<3;v++)s=g[l[v]],a=g[l[(v+1)%3]],r[0]=Math.min(s,a),r[1]=Math.max(s,a),c=r[0]+","+r[1],o[c]===void 0?o[c]={index1:r[0],index2:r[1],face1:d,face2:void 0}:o[c].face2=d}for(c in o){const d=o[c];if(d.face2===void 0||f[d.face1].normal.dot(f[d.face2].normal)<=i){let p=u[d.index1];n.push(p.x,p.y,p.z),p=u[d.index2],n.push(p.x,p.y,p.z)}}this.setAttribute("position",new ie(n,3))}Ws.prototype=Object.create(he.prototype);Ws.prototype.constructor=Ws;function pr(e,t,n,i,r,o,s,a){Ce.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:s,thetaLength:a},this.fromBufferGeometry(new gt(e,t,n,i,r,o,s,a)),this.mergeVertices()}pr.prototype=Object.create(Ce.prototype);pr.prototype.constructor=pr;function gt(e,t,n,i,r,o,s,a){he.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:s,thetaLength:a};const c=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,o=o!==void 0?o:!1,s=s!==void 0?s:0,a=a!==void 0?a:Math.PI*2;const l=[],h=[],u=[],f=[];let d=0;const p=[],g=n/2;let v=0;m(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(l),this.setAttribute("position",new ie(h,3)),this.setAttribute("normal",new ie(u,3)),this.setAttribute("uv",new ie(f,2));function m(){const _=new x,w=new x;let b=0;const T=(t-e)/n;for(let A=0;A<=r;A++){const N=[],P=A/r,Y=P*(t-e)+e;for(let O=0;O<=i;O++){const U=O/i,q=U*a+s,z=Math.sin(q),G=Math.cos(q);w.x=Y*z,w.y=-P*n+g,w.z=Y*G,h.push(w.x,w.y,w.z),_.set(z,T,G).normalize(),u.push(_.x,_.y,_.z),f.push(U,1-P),N.push(d++)}p.push(N)}for(let A=0;A<i;A++)for(let N=0;N<r;N++){const P=p[N][A],Y=p[N+1][A],O=p[N+1][A+1],U=p[N][A+1];l.push(P,Y,U),l.push(Y,O,U),b+=6}c.addGroup(v,b,0),v+=b}function y(_){let w,b;const T=new V,A=new x;let N=0;const P=_===!0?e:t,Y=_===!0?1:-1;w=d;for(let O=1;O<=i;O++)h.push(0,g*Y,0),u.push(0,Y,0),f.push(.5,.5),d++;b=d;for(let O=0;O<=i;O++){const q=O/i*a+s,z=Math.cos(q),G=Math.sin(q);A.x=P*G,A.y=g*Y,A.z=P*z,h.push(A.x,A.y,A.z),u.push(0,Y,0),T.x=z*.5+.5,T.y=G*.5*Y+.5,f.push(T.x,T.y),d++}for(let O=0;O<i;O++){const U=w+O,q=b+O;_===!0?l.push(q,q+1,U):l.push(q+1,q,U),N+=3}c.addGroup(v,N,_===!0?1:2),v+=N}}gt.prototype=Object.create(he.prototype);gt.prototype.constructor=gt;function js(e,t,n,i,r,o,s){pr.call(this,0,e,t,n,i,r,o,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:s}}js.prototype=Object.create(pr.prototype);js.prototype.constructor=js;function qs(e,t,n,i,r,o,s){gt.call(this,0,e,t,n,i,r,o,s),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:s}}qs.prototype=Object.create(gt.prototype);qs.prototype.constructor=qs;function Xs(e,t,n,i){Ce.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new go(e,t,n,i)),this.mergeVertices()}Xs.prototype=Object.create(Ce.prototype);Xs.prototype.constructor=Xs;function go(e,t,n,i){he.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;const r=[],o=[],s=[],a=[],c=new x,l=new V;o.push(0,0,0),s.push(0,0,1),a.push(.5,.5);for(let h=0,u=3;h<=t;h++,u+=3){const f=n+h/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),o.push(c.x,c.y,c.z),s.push(0,0,1),l.x=(o[u]/e+1)/2,l.y=(o[u+1]/e+1)/2,a.push(l.x,l.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new ie(o,3)),this.setAttribute("normal",new ie(s,3)),this.setAttribute("uv",new ie(a,2))}go.prototype=Object.create(he.prototype);go.prototype.constructor=go;var Tt=Object.freeze({__proto__:null,WireframeGeometry:Cs,ParametricGeometry:Rs,ParametricBufferGeometry:ro,TetrahedronGeometry:Ds,TetrahedronBufferGeometry:oo,OctahedronGeometry:Os,OctahedronBufferGeometry:zt,IcosahedronGeometry:Ns,IcosahedronBufferGeometry:so,DodecahedronGeometry:Fs,DodecahedronBufferGeometry:ao,PolyhedronGeometry:Is,PolyhedronBufferGeometry:Gt,TubeGeometry:Bs,TubeBufferGeometry:ur,TorusKnotGeometry:zs,TorusKnotBufferGeometry:co,TorusGeometry:Us,TorusBufferGeometry:In,TextGeometry:Gs,TextBufferGeometry:fo,SphereGeometry:ks,SphereBufferGeometry:Ai,RingGeometry:Hs,RingBufferGeometry:po,PlaneGeometry:Es,PlaneBufferGeometry:Rt,LatheGeometry:Vs,LatheBufferGeometry:mo,ShapeGeometry:fr,ShapeBufferGeometry:dr,ExtrudeGeometry:hr,ExtrudeBufferGeometry:Nn,EdgesGeometry:Ws,ConeGeometry:js,ConeBufferGeometry:qs,CylinderGeometry:pr,CylinderBufferGeometry:gt,CircleGeometry:Xs,CircleBufferGeometry:go,BoxGeometry:Ud,BoxBufferGeometry:Ct});function mr(e){Te.call(this),this.type="ShadowMaterial",this.color=new ce(0),this.transparent=!0,this.setValues(e)}mr.prototype=Object.create(Te.prototype);mr.prototype.constructor=mr;mr.prototype.isShadowMaterial=!0;mr.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this};function ai(e){Nt.call(this,e),this.type="RawShaderMaterial"}ai.prototype=Object.create(Nt.prototype);ai.prototype.constructor=ai;ai.prototype.isRawShaderMaterial=!0;function Fn(e){Te.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ce(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}Fn.prototype=Object.create(Te.prototype);Fn.prototype.constructor=Fn;Fn.prototype.isMeshStandardMaterial=!0;Fn.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function gr(e){Fn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new V(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(e)}gr.prototype=Object.create(Fn.prototype);gr.prototype.constructor=gr;gr.prototype.isMeshPhysicalMaterial=!0;gr.prototype.copy=function(e){return Fn.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new ce).copy(e.sheen):this.sheen=null,this.transparency=e.transparency,this};function Bn(e){Te.call(this),this.type="MeshPhongMaterial",this.color=new ce(16777215),this.specular=new ce(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Bn.prototype=Object.create(Te.prototype);Bn.prototype.constructor=Bn;Bn.prototype.isMeshPhongMaterial=!0;Bn.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function yr(e){Te.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ce(16777215),this.specular=new ce(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}yr.prototype=Object.create(Te.prototype);yr.prototype.constructor=yr;yr.prototype.isMeshToonMaterial=!0;yr.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function vr(e){Te.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}vr.prototype=Object.create(Te.prototype);vr.prototype.constructor=vr;vr.prototype.isMeshNormalMaterial=!0;vr.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Dn(e){Te.call(this),this.type="MeshLambertMaterial",this.color=new ce(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ce(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ca,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Dn.prototype=Object.create(Te.prototype);Dn.prototype.constructor=Dn;Dn.prototype.isMeshLambertMaterial=!0;Dn.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function xr(e){Te.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ce(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new V(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}xr.prototype=Object.create(Te.prototype);xr.prototype.constructor=xr;xr.prototype.isMeshMatcapMaterial=!0;xr.prototype.copy=function(e){return Te.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function _r(e){nt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}_r.prototype=Object.create(nt.prototype);_r.prototype.constructor=_r;_r.prototype.isLineDashedMaterial=!0;_r.prototype.copy=function(e){return nt.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var ey=Object.freeze({__proto__:null,ShadowMaterial:mr,SpriteMaterial:Ti,RawShaderMaterial:ai,ShaderMaterial:Nt,PointsMaterial:vn,MeshPhysicalMaterial:gr,MeshStandardMaterial:Fn,MeshPhongMaterial:Bn,MeshToonMaterial:yr,MeshNormalMaterial:vr,MeshLambertMaterial:Dn,MeshDepthMaterial:Mi,MeshDistanceMaterial:Si,MeshBasicMaterial:Ot,MeshMatcapMaterial:xr,LineDashedMaterial:_r,LineBasicMaterial:nt,Material:Te});const rt={arraySlice:function(e,t,n){return rt.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(r,o){return e[r]-e[o]}const n=e.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){const i=e.length,r=new e.constructor(i);for(let o=0,s=0;s!==i;++o){const a=n[o]*t;for(let c=0;c!==t;++c)r[s++]=e[a+c]}return r},flattenJSON:function(e,t,n,i){let r=1,o=e[0];for(;o!==void 0&&o[i]===void 0;)o=e[r++];if(o===void 0)return;let s=o[i];if(s!==void 0)if(Array.isArray(s))do s=o[i],s!==void 0&&(t.push(o.time),n.push.apply(n,s)),o=e[r++];while(o!==void 0);else if(s.toArray!==void 0)do s=o[i],s!==void 0&&(t.push(o.time),s.toArray(n,n.length)),o=e[r++];while(o!==void 0);else do s=o[i],s!==void 0&&(t.push(o.time),n.push(s)),o=e[r++];while(o!==void 0)},subclip:function(e,t,n,i,r){r=r||30;const o=e.clone();o.name=t;const s=[];for(let c=0;c<o.tracks.length;++c){const l=o.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const p=l.times[d]*r;if(!(p<n||p>=i)){u.push(l.times[d]);for(let g=0;g<h;++g)f.push(l.values[d*h+g])}}u.length!==0&&(l.times=rt.convertArray(u,l.times.constructor),l.values=rt.convertArray(f,l.values.constructor),s.push(l))}o.tracks=s;let a=1/0;for(let c=0;c<o.tracks.length;++c)a>o.tracks[c].times[0]&&(a=o.tracks[c].times[0]);for(let c=0;c<o.tracks.length;++c)o.tracks[c].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(e,t,n,i){t===void 0&&(t=0),n===void 0&&(n=e),(i===void 0||i<=0)&&(i=30);const r=e.tracks.length,o=t/i;for(let s=0;s<r;++s){const a=n.tracks[s],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=e.tracks.find(function(p){return p.name===a.name&&p.ValueTypeName===c});if(l===void 0)continue;const h=a.getValueSize(),u=a.times.length-1;let f;if(o<=a.times[0])f=rt.arraySlice(a.values,0,a.valueSize);else if(o>=a.times[u]){const p=u*h;f=rt.arraySlice(a.values,p)}else{const p=a.createInterpolant();p.evaluate(o),f=p.resultBuffer}c==="quaternion"&&new Ye(f[0],f[1],f[2],f[3]).normalize().conjugate().toArray(f);const d=l.times.length;for(let p=0;p<d;++p){const g=p*h;if(c==="quaternion")Ye.multiplyQuaternionsFlat(l.values,g,f,0,l.values,g);else for(let v=0;v<h;++v)l.values[g+v]-=f[v]}}return e.blendMode=ih,e}};function Xt(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(Xt.prototype,{evaluate:function(e){let t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let s=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===s)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const s=t[1];e<s&&(n=2,r=s);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const s=n+o>>>1;e<t[s]?o=s:n=s+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(Xt.prototype,{beforeStart_:Xt.prototype.copySampleValue_,afterEnd_:Xt.prototype.copySampleValue_});function bc(e,t,n,i){Xt.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}bc.prototype=Object.assign(Object.create(Xt.prototype),{constructor:bc,DefaultSettings_:{endingStart:or,endingEnd:or},intervalChanged_:function(e,t,n){let i=this.parameterPositions,r=e-2,o=e+1,s=i[r],a=i[o];if(s===void 0)switch(this.getSettings_().endingStart){case $i:r=e,s=2*t-n;break;case Ms:r=i.length-2,s=t+i[r]-i[r+1];break;default:r=e,s=n}if(a===void 0)switch(this.getSettings_().endingEnd){case $i:o=e,a=2*n-t;break;case Ms:o=1,a=n+i[1]-i[0];break;default:o=e-1,a=t}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-s),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=o*l},interpolate_:function(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=e*s,c=a-s,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-t)/(i-t),p=d*d,g=p*d,v=-u*g+2*u*p-u*d,m=(1+u)*g+(-1.5-2*u)*p+(-.5+u)*d+1,y=(-1-f)*g+(1.5+f)*p+.5*d,_=f*g-f*p;for(let w=0;w!==s;++w)r[w]=v*o[l+w]+m*o[c+w]+y*o[a+w]+_*o[h+w];return r}});function Ys(e,t,n,i){Xt.call(this,e,t,n,i)}Ys.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Ys,interpolate_:function(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=e*s,c=a-s,l=(n-t)/(i-t),h=1-l;for(let u=0;u!==s;++u)r[u]=o[c+u]*h+o[a+u]*l;return r}});function wc(e,t,n,i){Xt.call(this,e,t,n,i)}wc.prototype=Object.assign(Object.create(Xt.prototype),{constructor:wc,interpolate_:function(e){return this.copySampleValue_(e-1)}});function St(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=rt.convertArray(t,this.TimeBufferType),this.values=rt.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(St,{toJSON:function(e){const t=e.constructor;let n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:rt.convertArray(e.times,Array),values:rt.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}});Object.assign(St.prototype,{constructor:St,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:ys,InterpolantFactoryMethodDiscrete:function(e){return new wc(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Ys(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new bc(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case ws:t=this.InterpolantFactoryMethodDiscrete;break;case ys:t=this.InterpolantFactoryMethodLinear;break;case ga:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ws;case this.InterpolantFactoryMethodLinear:return ys;case this.InterpolantFactoryMethodSmooth:return ga}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this},scale:function(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const s=this.getValueSize();this.times=rt.arraySlice(n,r,o),this.values=rt.arraySlice(this.values,r*s,o*s)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let s=0;s!==r;s++){const a=n[s];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,a),e=!1;break}if(o!==null&&o>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,a,o),e=!1;break}o=a}if(i!==void 0&&rt.isTypedArray(i))for(let s=0,a=i.length;s!==a;++s){const c=i[s];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,c),e=!1;break}}return e},optimize:function(){const e=rt.arraySlice(this.times),t=rt.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ga,r=e.length-1;let o=1;for(let s=1;s<r;++s){let a=!1;const c=e[s],l=e[s+1];if(c!==l&&(s!==1||c!==c[0]))if(i)a=!0;else{const h=s*n,u=h-n,f=h+n;for(let d=0;d!==n;++d){const p=t[h+d];if(p!==t[u+d]||p!==t[f+d]){a=!0;break}}}if(a){if(s!==o){e[o]=e[s];const h=s*n,u=o*n;for(let f=0;f!==n;++f)t[u+f]=t[h+f]}++o}}if(r>0){e[o]=e[r];for(let s=r*n,a=o*n,c=0;c!==n;++c)t[a+c]=t[s+c];++o}return o!==e.length?(this.times=rt.arraySlice(e,0,o),this.values=rt.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this},clone:function(){const e=rt.arraySlice(this.times,0),t=rt.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}});function Mc(e,t,n){St.call(this,e,t,n)}Mc.prototype=Object.assign(Object.create(St.prototype),{constructor:Mc,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:ws,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Sc(e,t,n,i){St.call(this,e,t,n,i)}Sc.prototype=Object.assign(Object.create(St.prototype),{constructor:Sc,ValueTypeName:"color"});function yo(e,t,n,i){St.call(this,e,t,n,i)}yo.prototype=Object.assign(Object.create(St.prototype),{constructor:yo,ValueTypeName:"number"});function Ec(e,t,n,i){Xt.call(this,e,t,n,i)}Ec.prototype=Object.assign(Object.create(Xt.prototype),{constructor:Ec,interpolate_:function(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=(n-t)/(i-t);let c=e*s;for(let l=c+s;c!==l;c+=4)Ye.slerpFlat(r,0,o,c-s,o,c,a);return r}});function Zs(e,t,n,i){St.call(this,e,t,n,i)}Zs.prototype=Object.assign(Object.create(St.prototype),{constructor:Zs,ValueTypeName:"quaternion",DefaultInterpolation:ys,InterpolantFactoryMethodLinear:function(e){return new Ec(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function Tc(e,t,n,i){St.call(this,e,t,n,i)}Tc.prototype=Object.assign(Object.create(St.prototype),{constructor:Tc,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:ws,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function vo(e,t,n,i){St.call(this,e,t,n,i)}vo.prototype=Object.assign(Object.create(St.prototype),{constructor:vo,ValueTypeName:"vector"});function nn(e,t,n,i){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.blendMode=i!==void 0?i:nl,this.uuid=Oe.generateUUID(),this.duration<0&&this.resetDuration()}function ty(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return yo;case"vector":case"vector2":case"vector3":case"vector4":return vo;case"color":return Sc;case"quaternion":return Zs;case"bool":case"boolean":return Mc;case"string":return Tc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function ny(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=ty(e.type);if(e.times===void 0){const n=[],i=[];rt.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(nn,{parse:function(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,o=n.length;r!==o;++r)t.push(ny(n[r]).scale(i));return new nn(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(St.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){const r=t.length,o=[];for(let s=0;s<r;s++){let a=[],c=[];a.push((s+r-1)%r,s,(s+1)%r),c.push(0,1,0);const l=rt.getKeyframeOrder(a);a=rt.sortedArray(a,1,l),c=rt.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),o.push(new yo(".morphTargetInfluences["+t[s].name+"]",a,c).scale(1/n))}return new nn(e,-1,o)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let s=0,a=e.length;s<a;s++){const c=e[s],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const o=[];for(const s in i)o.push(nn.CreateFromMorphTargetSequence(s,i[s],t,n));return o},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,d,p){if(f.length!==0){const g=[],v=[];rt.flattenJSON(f,g,v,d),g.length!==0&&p.push(new h(u,g,v))}},i=[],r=e.name||"default",o=e.fps||30,s=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const f={};let d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)f[u[d].morphTargets[p]]=-1;for(const p in f){const g=[],v=[];for(let m=0;m!==u[d].morphTargets.length;++m){const y=u[d];g.push(y.time),v.push(y.morphTarget===p?1:0)}i.push(new yo(".morphTargetInfluence["+p+"]",g,v))}a=f.length*(o||1)}else{const f=".bones["+t[h].name+"]";n(vo,f+".position",u,"pos",i),n(Zs,f+".quaternion",u,"rot",i),n(vo,f+".scale",u,"scl",i)}}return i.length===0?null:new nn(r,a,i,s)}});Object.assign(nn.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new nn(this.name,this.duration,e,this.blendMode)}});const br={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function al(e,t,n){const i=this;let r=!1,o=0,s=0,a;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){s++,r===!1&&i.onStart!==void 0&&i.onStart(l,o,s),r=!0},this.itemEnd=function(l){o++,i.onProgress!==void 0&&i.onProgress(l,o,s),o===s&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],d=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return d}return null}}const Ah=new al;function qe(e){this.manager=e!==void 0?e:Ah,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(qe.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const Kt={};function Zt(e){qe.call(this,e)}Zt.prototype=Object.assign(Object.create(qe.prototype),{constructor:Zt,load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=br.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;if(Kt[e]!==void 0){Kt[e].push({onLoad:t,onProgress:n,onError:i});return}const s=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(s);let c;if(a){const l=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const p=new Uint8Array(u.length);for(let v=0;v<u.length;v++)p[v]=u.charCodeAt(v);d==="blob"?f=new Blob([p.buffer],{type:l}):f=p.buffer;break;case"document":f=new DOMParser().parseFromString(u,l);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){t&&t(f),r.manager.itemEnd(e)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{Kt[e]=[],Kt[e].push({onLoad:t,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",e,!0),c.addEventListener("load",function(l){const h=this.response,u=Kt[e];if(delete Kt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),br.add(e,h);for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onLoad&&p.onLoad(h)}r.manager.itemEnd(e)}else{for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onError&&p.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),c.addEventListener("progress",function(l){const h=Kt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onProgress&&d.onProgress(l)}},!1),c.addEventListener("error",function(l){const h=Kt[e];delete Kt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),c.addEventListener("abort",function(l){const h=Kt[e];delete Kt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const l in this.requestHeader)c.setRequestHeader(l,this.requestHeader[l]);c.send(null)}return r.manager.itemStart(e),c},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}});function mu(e){qe.call(this,e)}mu.prototype=Object.assign(Object.create(qe.prototype),{constructor:mu,load:function(e,t,n,i){const r=this,o=new Zt(r.manager);o.setPath(r.path),o.load(e,function(s){try{t(r.parse(JSON.parse(s)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const i=nn.parse(e[n]);t.push(i)}return t}});function Js(e){qe.call(this,e)}Js.prototype=Object.assign(Object.create(qe.prototype),{constructor:Js,load:function(e,t,n,i){const r=this,o=[],s=new io;s.image=o;const a=new Zt(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer");let c=0;function l(h){a.load(e[h],function(u){const f=r.parse(u,!0);o[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(s.minFilter=Mt),s.format=f.format,s.needsUpdate=!0,t&&t(s))},n,i)}if(Array.isArray(e))for(let h=0,u=e.length;h<u;++h)l(h);else a.load(e,function(h){const u=r.parse(h,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let d=0;d<f;d++){o[d]={mipmaps:[]};for(let p=0;p<u.mipmapCount;p++)o[d].mipmaps.push(u.mipmaps[d*u.mipmapCount+p]),o[d].format=u.format,o[d].width=u.width,o[d].height=u.height}}else s.image.width=u.width,s.image.height=u.height,s.mipmaps=u.mipmaps;u.mipmapCount===1&&(s.minFilter=Mt),s.format=u.format,s.needsUpdate=!0,t&&t(s)},n,i);return s}});function gu(e){qe.call(this,e)}gu.prototype=Object.assign(Object.create(qe.prototype),{constructor:gu,load:function(e,t,n,i){const r=this,o=new cr,s=new Zt(this.manager);return s.setResponseType("arraybuffer"),s.setPath(this.path),s.load(e,function(a){const c=r.parse(a);c&&(c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:It,o.wrapT=c.wrapT!==void 0?c.wrapT:It,o.magFilter=c.magFilter!==void 0?c.magFilter:Mt,o.minFilter=c.minFilter!==void 0?c.minFilter:Mt,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=la),c.mipmapCount===1&&(o.minFilter=Mt),o.needsUpdate=!0,t&&t(o,c))},n,i),o}});function xo(e){qe.call(this,e)}xo.prototype=Object.assign(Object.create(qe.prototype),{constructor:xo,load:function(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=br.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),br.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(l){s.removeEventListener("load",a,!1),s.removeEventListener("error",c,!1),i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}return s.addEventListener("load",a,!1),s.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(e),s.src=e,s}});function $s(e){qe.call(this,e)}$s.prototype=Object.assign(Object.create(qe.prototype),{constructor:$s,load:function(e,t,n,i){const r=new oi,o=new xo(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let s=0;function a(c){o.load(e[c],function(l){r.images[c]=l,s++,s===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)a(c);return r}});function _o(e){qe.call(this,e)}_o.prototype=Object.assign(Object.create(qe.prototype),{constructor:_o,load:function(e,t,n,i){const r=new et,o=new xo(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(s){r.image=s;const a=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;r.format=a?xi:jt,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}});function Se(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(Se.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0,r=n.length,o;t?o=t:o=e*n[r-1];let s=0,a=r-1,c;for(;s<=a;)if(i=Math.floor(s+(a-s)/2),c=n[i]-o,c<0)s=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===o)return i/(r-1);const l=n[i],u=n[i+1]-l,f=(o-l)/u;return(i+f)/(r-1)},getTangent:function(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),s=this.getPoint(r),a=t||(o.isVector2?new V:new x);return a.copy(s).sub(o).normalize(),a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new x,i=[],r=[],o=[],s=new x,a=new Fe;for(let f=0;f<=e;f++){const d=f/e;i[f]=this.getTangentAt(d,new x),i[f].normalize()}r[0]=new x,o[0]=new x;let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),o[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),o[f]=o[f-1].clone(),s.crossVectors(i[f-1],i[f]),s.length()>Number.EPSILON){s.normalize();const d=Math.acos(Oe.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(s,d))}o[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Oe.clamp(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(s.crossVectors(r[0],r[e]))>0&&(f=-f);for(let d=1;d<=e;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),o[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:o}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function Jt(e,t,n,i,r,o,s,a){Se.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=s||!1,this.aRotation=a||0}Jt.prototype=Object.create(Se.prototype);Jt.prototype.constructor=Jt;Jt.prototype.isEllipseCurve=!0;Jt.prototype.getPoint=function(e,t){const n=t||new V,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const s=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)};Jt.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};Jt.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e};Jt.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function bo(e,t,n,i,r,o){Jt.call(this,e,t,n,n,i,r,o),this.type="ArcCurve"}bo.prototype=Object.create(Jt.prototype);bo.prototype.constructor=bo;bo.prototype.isArcCurve=!0;function cl(){let e=0,t=0,n=0,i=0;function r(o,s,a,c){e=o,t=a,n=-3*o+3*s-2*a-c,i=2*o-2*s+a+c}return{initCatmullRom:function(o,s,a,c,l){r(s,a,l*(a-o),l*(c-s))},initNonuniformCatmullRom:function(o,s,a,c,l,h,u){let f=(s-o)/l-(a-o)/(l+h)+(a-s)/h,d=(a-s)/h-(c-s)/(h+u)+(c-a)/u;f*=h,d*=h,r(s,a,f,d)},calc:function(o){const s=o*o,a=s*o;return e+t*o+n*s+i*a}}}const ss=new x,ka=new cl,Ha=new cl,Va=new cl;function kt(e,t,n,i){Se.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=i||.5}kt.prototype=Object.create(Se.prototype);kt.prototype.constructor=kt;kt.prototype.isCatmullRomCurve3=!0;kt.prototype.getPoint=function(e,t){const n=t||new x,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let s=Math.floor(o),a=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r)+1)*r:a===0&&s===r-1&&(s=r-2,a=1);let c,l,h,u;if(this.closed||s>0?c=i[(s-1)%r]:(ss.subVectors(i[0],i[1]).add(i[0]),c=ss),l=i[s%r],h=i[(s+1)%r],this.closed||s+2<r?u=i[(s+2)%r]:(ss.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=ss),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(c.distanceToSquared(l),f),p=Math.pow(l.distanceToSquared(h),f),g=Math.pow(h.distanceToSquared(u),f);p<1e-4&&(p=1),d<1e-4&&(d=p),g<1e-4&&(g=p),ka.initNonuniformCatmullRom(c.x,l.x,h.x,u.x,d,p,g),Ha.initNonuniformCatmullRom(c.y,l.y,h.y,u.y,d,p,g),Va.initNonuniformCatmullRom(c.z,l.z,h.z,u.z,d,p,g)}else this.curveType==="catmullrom"&&(ka.initCatmullRom(c.x,l.x,h.x,u.x,this.tension),Ha.initCatmullRom(c.y,l.y,h.y,u.y,this.tension),Va.initCatmullRom(c.z,l.z,h.z,u.z,this.tension));return n.set(ka.calc(a),Ha.calc(a),Va.calc(a)),n};kt.prototype.copy=function(e){Se.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};kt.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e};kt.prototype.fromJSON=function(e){Se.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new x().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function yu(e,t,n,i,r){const o=(i-t)*.5,s=(r-n)*.5,a=e*e,c=e*a;return(2*n-2*i+o+s)*c+(-3*n+3*i-2*o-s)*a+o*e+n}function iy(e,t){const n=1-e;return n*n*t}function ry(e,t){return 2*(1-e)*e*t}function oy(e,t){return e*e*t}function jr(e,t,n,i){return iy(e,t)+ry(e,n)+oy(e,i)}function sy(e,t){const n=1-e;return n*n*n*t}function ay(e,t){const n=1-e;return 3*n*n*e*t}function cy(e,t){return 3*(1-e)*e*e*t}function ly(e,t){return e*e*e*t}function qr(e,t,n,i,r){return sy(e,t)+ay(e,n)+cy(e,i)+ly(e,r)}function xn(e,t,n,i){Se.call(this),this.type="CubicBezierCurve",this.v0=e||new V,this.v1=t||new V,this.v2=n||new V,this.v3=i||new V}xn.prototype=Object.create(Se.prototype);xn.prototype.constructor=xn;xn.prototype.isCubicBezierCurve=!0;xn.prototype.getPoint=function(e,t){const n=t||new V,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(qr(e,i.x,r.x,o.x,s.x),qr(e,i.y,r.y,o.y,s.y)),n};xn.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};xn.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};xn.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function zn(e,t,n,i){Se.call(this),this.type="CubicBezierCurve3",this.v0=e||new x,this.v1=t||new x,this.v2=n||new x,this.v3=i||new x}zn.prototype=Object.create(Se.prototype);zn.prototype.constructor=zn;zn.prototype.isCubicBezierCurve3=!0;zn.prototype.getPoint=function(e,t){const n=t||new x,i=this.v0,r=this.v1,o=this.v2,s=this.v3;return n.set(qr(e,i.x,r.x,o.x,s.x),qr(e,i.y,r.y,o.y,s.y),qr(e,i.z,r.z,o.z,s.z)),n};zn.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};zn.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};zn.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function Ht(e,t){Se.call(this),this.type="LineCurve",this.v1=e||new V,this.v2=t||new V}Ht.prototype=Object.create(Se.prototype);Ht.prototype.constructor=Ht;Ht.prototype.isLineCurve=!0;Ht.prototype.getPoint=function(e,t){const n=t||new V;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Ht.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Ht.prototype.getTangent=function(e,t){const n=t||new V;return n.copy(this.v2).sub(this.v1).normalize(),n};Ht.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Ht.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Ht.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function _n(e,t){Se.call(this),this.type="LineCurve3",this.v1=e||new x,this.v2=t||new x}_n.prototype=Object.create(Se.prototype);_n.prototype.constructor=_n;_n.prototype.isLineCurve3=!0;_n.prototype.getPoint=function(e,t){const n=t||new x;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};_n.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};_n.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};_n.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};_n.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function bn(e,t,n){Se.call(this),this.type="QuadraticBezierCurve",this.v0=e||new V,this.v1=t||new V,this.v2=n||new V}bn.prototype=Object.create(Se.prototype);bn.prototype.constructor=bn;bn.prototype.isQuadraticBezierCurve=!0;bn.prototype.getPoint=function(e,t){const n=t||new V,i=this.v0,r=this.v1,o=this.v2;return n.set(jr(e,i.x,r.x,o.x),jr(e,i.y,r.y,o.y)),n};bn.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};bn.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};bn.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Un(e,t,n){Se.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new x,this.v1=t||new x,this.v2=n||new x}Un.prototype=Object.create(Se.prototype);Un.prototype.constructor=Un;Un.prototype.isQuadraticBezierCurve3=!0;Un.prototype.getPoint=function(e,t){const n=t||new x,i=this.v0,r=this.v1,o=this.v2;return n.set(jr(e,i.x,r.x,o.x),jr(e,i.y,r.y,o.y),jr(e,i.z,r.z,o.z)),n};Un.prototype.copy=function(e){return Se.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Un.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Un.prototype.fromJSON=function(e){return Se.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function wn(e){Se.call(this),this.type="SplineCurve",this.points=e||[]}wn.prototype=Object.create(Se.prototype);wn.prototype.constructor=wn;wn.prototype.isSplineCurve=!0;wn.prototype.getPoint=function(e,t){const n=t||new V,i=this.points,r=(i.length-1)*e,o=Math.floor(r),s=r-o,a=i[o===0?o:o-1],c=i[o],l=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(yu(s,a.x,c.x,l.x,h.x),yu(s,a.y,c.y,l.y,h.y)),n};wn.prototype.copy=function(e){Se.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this};wn.prototype.toJSON=function(){const e=Se.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e};wn.prototype.fromJSON=function(e){Se.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new V().fromArray(i))}return this};var Ac=Object.freeze({__proto__:null,ArcCurve:bo,CatmullRomCurve3:kt,CubicBezierCurve:xn,CubicBezierCurve3:zn,EllipseCurve:Jt,LineCurve:Ht,LineCurve3:_n,QuadraticBezierCurve:bn,QuadraticBezierCurve3:Un,SplineCurve:wn});function Kn(){Se.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}Kn.prototype=Object.assign(Object.create(Se.prototype),{constructor:Kn,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ht(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const r=n[i]-t,o=this.curves[i],s=o.getLength(),a=s===0?0:1-r/s;return o.getPointAt(a)}i++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],s=o&&o.isEllipseCurve?e*2:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,a=o.getPoints(s);for(let c=0;c<a.length;c++){const l=a[c];n&&n.equals(l)||(t.push(l),n=l)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){Se.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=Se.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){Se.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Ac[i.type]().fromJSON(i))}return this}});function mn(e){Kn.call(this),this.type="Path",this.currentPoint=new V,e&&this.setFromPoints(e)}mn.prototype=Object.assign(Object.create(Kn.prototype),{constructor:mn,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new Ht(this.currentPoint.clone(),new V(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,i){const r=new bn(this.currentPoint.clone(),new V(e,t),new V(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(e,t,n,i,r,o){const s=new xn(this.currentPoint.clone(),new V(e,t),new V(n,i),new V(r,o));return this.curves.push(s),this.currentPoint.set(r,o),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),n=new wn(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,i,r,o){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+s,t+a,n,i,r,o),this},absarc:function(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this},ellipse:function(e,t,n,i,r,o,s,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,i,r,o,s,a),this},absellipse:function(e,t,n,i,r,o,s,a){const c=new Jt(e,t,n,i,r,o,s,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return Kn.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=Kn.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return Kn.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function _i(e){mn.call(this,e),this.uuid=Oe.generateUUID(),this.type="Shape",this.holes=[]}_i.prototype=Object.assign(Object.create(mn.prototype),{constructor:_i,getPointsHoles:function(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){mn.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=mn.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){mn.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new mn().fromJSON(i))}return this}});function it(e,t){te.call(this),this.type="Light",this.color=new ce(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}it.prototype=Object.assign(Object.create(te.prototype),{constructor:it,isLight:!0,copy:function(e){return te.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=te.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function Qs(e,t,n){it.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(te.DefaultUp),this.updateMatrix(),this.groundColor=new ce(t)}Qs.prototype=Object.assign(Object.create(it.prototype),{constructor:Qs,isHemisphereLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function Gn(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new V(512,512),this.map=null,this.mapPass=null,this.matrix=new Fe,this._frustum=new Ro,this._frameExtents=new V(1,1),this._viewportCount=1,this._viewports=[new Qe(0,0,1,1)]}Object.assign(Gn.prototype,{_projScreenMatrix:new Fe,_lightPositionWorld:new x,_lookTarget:new x,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(e.matrixWorld),t.position.copy(o),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return this.bias!==0&&(e.bias=this.bias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function Lc(){Gn.call(this,new dt(50,1,.5,500))}Lc.prototype=Object.assign(Object.create(Gn.prototype),{constructor:Lc,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=Oe.RAD2DEG*2*e.angle,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),Gn.prototype.updateMatrices.call(this,e)}});function Pc(e,t,n,i,r,o){it.call(this,e,t),this.type="SpotLight",this.position.copy(te.DefaultUp),this.updateMatrix(),this.target=new te,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(s){this.intensity=s/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=o!==void 0?o:1,this.shadow=new Lc}Pc.prototype=Object.assign(Object.create(it.prototype),{constructor:Pc,isSpotLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Cc(){Gn.call(this,new dt(90,1,.5,500)),this._frameExtents=new V(4,2),this._viewportCount=6,this._viewports=[new Qe(2,1,1,1),new Qe(0,1,1,1),new Qe(3,1,1,1),new Qe(1,1,1,1),new Qe(3,0,1,1),new Qe(1,0,1,1)],this._cubeDirections=[new x(1,0,0),new x(-1,0,0),new x(0,0,1),new x(0,0,-1),new x(0,1,0),new x(0,-1,0)],this._cubeUps=[new x(0,1,0),new x(0,1,0),new x(0,1,0),new x(0,1,0),new x(0,0,1),new x(0,0,-1)]}Cc.prototype=Object.assign(Object.create(Gn.prototype),{constructor:Cc,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,o=this._lookTarget,s=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),n.position.copy(r),o.copy(n.position),o.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(o),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}});function Rc(e,t,n,i){it.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Cc}Rc.prototype=Object.assign(Object.create(it.prototype),{constructor:Rc,isPointLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function wo(e,t,n,i,r,o){On.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=o!==void 0?o:2e3,this.updateProjectionMatrix()}wo.prototype=Object.assign(Object.create(On.prototype),{constructor:wo,isOrthographicCamera:!0,copy:function(e,t){return On.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,s=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,o=r+c*this.view.width,s-=l*this.view.offsetY,a=s-l*this.view.height}this.projectionMatrix.makeOrthographic(r,o,s,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=te.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function Ic(){Gn.call(this,new wo(-5,5,5,-5,.5,500))}Ic.prototype=Object.assign(Object.create(Gn.prototype),{constructor:Ic,isDirectionalLightShadow:!0,updateMatrices:function(e){Gn.prototype.updateMatrices.call(this,e)}});function Ks(e,t){it.call(this,e,t),this.type="DirectionalLight",this.position.copy(te.DefaultUp),this.updateMatrix(),this.target=new te,this.shadow=new Ic}Ks.prototype=Object.assign(Object.create(it.prototype),{constructor:Ks,isDirectionalLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function ea(e,t){it.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}ea.prototype=Object.assign(Object.create(it.prototype),{constructor:ea,isAmbientLight:!0});function Dc(e,t,n,i){it.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}Dc.prototype=Object.assign(Object.create(it.prototype),{constructor:Dc,isRectAreaLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=it.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});function ll(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new x)}Object.assign(ll.prototype,{isSphericalHarmonics3:!0,set:function(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t},getIrradianceAt:function(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t},add:function(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},addScaledSH:function(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this},scale:function(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this},equals:function(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return new this.constructor().copy(this)},fromArray:function(e,t){t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}});Object.assign(ll,{getBasisAt:function(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}});function on(e,t){it.call(this,void 0,t),this.type="LightProbe",this.sh=e!==void 0?e:new ll}on.prototype=Object.assign(Object.create(it.prototype),{constructor:on,isLightProbe:!0,copy:function(e){return it.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=it.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}});function Oc(e){qe.call(this,e),this.textures={}}Oc.prototype=Object.assign(Object.create(qe.prototype),{constructor:Oc,load:function(e,t,n,i){const r=this,o=new Zt(r.manager);o.setPath(r.path),o.load(e,function(s){try{t(r.parse(JSON.parse(s)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=new ey[e.type];if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=new ce().setHex(e.sheen)),e.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(i.morphNormals=e.morphNormals),e.dithering!==void 0&&(i.dithering=e.dithering),e.vertexTangents!==void 0&&(i.vertexTangents=e.vertexTangents),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new ce().setHex(o.value);break;case"v2":i.uniforms[r].value=new V().fromArray(o.value);break;case"v3":i.uniforms[r].value=new x().fromArray(o.value);break;case"v4":i.uniforms[r].value=new Qe().fromArray(o.value);break;case"m3":i.uniforms[r].value=new At().fromArray(o.value);case"m4":i.uniforms[r].value=new Fe().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new V().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new V().fromArray(e.clearcoatNormalScale)),i},setTextures:function(e){return this.textures=e,this}});const ul={decodeText:function(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function ta(){he.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}ta.prototype=Object.assign(Object.create(he.prototype),{constructor:ta,isInstancedBufferGeometry:!0,copy:function(e){return he.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=he.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}});function Nc(e,t,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ae.call(this,e,t,n),this.meshPerAttribute=i||1}Nc.prototype=Object.assign(Object.create(Ae.prototype),{constructor:Nc,isInstancedBufferAttribute:!0,copy:function(e){return Ae.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Ae.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function Fc(e){qe.call(this,e)}Fc.prototype=Object.assign(Object.create(qe.prototype),{constructor:Fc,load:function(e,t,n,i){const r=this,o=new Zt(r.manager);o.setPath(r.path),o.load(e,function(s){try{t(r.parse(JSON.parse(s)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t={},n={};function i(f,d){if(t[d]!==void 0)return t[d];const g=f.interleavedBuffers[d],v=r(f,g.buffer),m=new as[g.type](v),y=new Wt(m,g.stride);return y.uuid=g.uuid,t[d]=y,y}function r(f,d){if(n[d]!==void 0)return n[d];const g=f.arrayBuffers[d],v=new Uint32Array(g).buffer;return n[d]=v,v}const o=e.isInstancedBufferGeometry?new ta:new he,s=e.data.index;if(s!==void 0){const f=new as[s.type](s.array);o.setIndex(new Ae(f,1))}const a=e.data.attributes;for(const f in a){const d=a[f];let p;if(d.isInterleavedBufferAttribute){const g=i(e.data,d.data);p=new Ei(g,d.itemSize,d.offset,d.normalized)}else{const g=new as[d.type](d.array),v=d.isInstancedBufferAttribute?Nc:Ae;p=new v(g,d.itemSize,d.normalized)}d.name!==void 0&&(p.name=d.name),o.setAttribute(f,p)}const c=e.data.morphAttributes;if(c)for(const f in c){const d=c[f],p=[];for(let g=0,v=d.length;g<v;g++){const m=d[g];let y;if(m.isInterleavedBufferAttribute){const _=i(e.data,m.data);y=new Ei(_,m.itemSize,m.offset,m.normalized)}else{const _=new as[m.type](m.array);y=new Ae(_,m.itemSize,m.normalized)}m.name!==void 0&&(y.name=m.name),p.push(y)}o.morphAttributes[f]=p}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,d=h.length;f!==d;++f){const p=h[f];o.addGroup(p.start,p.count,p.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const f=new x;u.center!==void 0&&f.fromArray(u.center),o.boundingSphere=new kn(f,u.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}});const as={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Bc(e){qe.call(this,e)}Bc.prototype=Object.assign(Object.create(qe.prototype),{constructor:Bc,load:function(e,t,n,i){const r=this,o=this.path===""?ul.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const s=new Zt(r.manager);s.setPath(this.path),s.load(e,function(a){let c=null;try{c=JSON.parse(a)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const l=c.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)},parse:function(e,t){const n=this.parseShape(e.shapes),i=this.parseGeometries(e.geometries,n),r=this.parseImages(e.images,function(){t!==void 0&&t(a)}),o=this.parseTextures(e.textures,r),s=this.parseMaterials(e.materials,o),a=this.parseObject(e.object,i,s);return e.animations&&(a.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&t!==void 0&&t(a),a},parseShape:function(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new _i().fromJSON(e[n]);t[r.uuid]=r}return t},parseGeometries:function(e,t){const n={};let i;if(e!==void 0){const r=new Fc;for(let o=0,s=e.length;o<s;o++){let a;const c=e[o];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new Tt[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new Tt[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new Tt[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new Tt[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new Tt[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new Tt[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new Tt[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new Tt[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new Tt[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new Tt[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new Tt[c.type](new Ac[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new Tt[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new Tt[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}a=new Tt[c.type](i,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}const l=c.options.extrudePath;l!==void 0&&(c.options.extrudePath=new Ac[l.type]().fromJSON(l)),a=new Tt[c.type](i,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n},parseMaterials:function(e,t){const n={},i={};if(e!==void 0){const r=new Oc;r.setTextures(t);for(let o=0,s=e.length;o<s;o++){const a=e[o];if(a.type==="MultiMaterial"){const c=[];for(let l=0;l<a.materials.length;l++){const h=a.materials[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),c.push(n[h.uuid])}i[a.uuid]=c}else n[a.uuid]===void 0&&(n[a.uuid]=r.parse(a)),i[a.uuid]=n[a.uuid]}}return i},parseAnimations:function(e){const t=[];for(let n=0;n<e.length;n++){const i=e[n],r=nn.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),t.push(r)}return t},parseImages:function(e,t){const n=this,i={};let r;function o(s){return n.manager.itemStart(s),r.load(s,function(){n.manager.itemEnd(s)},void 0,function(){n.manager.itemError(s),n.manager.itemEnd(s)})}if(e!==void 0&&e.length>0){const s=new al(t);r=new xo(s),r.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const l=e[a],h=l.url;if(Array.isArray(h)){i[l.uuid]=[];for(let u=0,f=h.length;u<f;u++){const d=h[u],p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[l.uuid].push(o(p))}}else{const u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.resourcePath+l.url;i[l.uuid]=o(u)}}}return i},parseTextures:function(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const s=e[r];s.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),t[s.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let a;Array.isArray(t[s.image])?a=new oi(t[s.image]):a=new et(t[s.image]),a.needsUpdate=!0,a.uuid=s.uuid,s.name!==void 0&&(a.name=s.name),s.mapping!==void 0&&(a.mapping=n(s.mapping,uy)),s.offset!==void 0&&a.offset.fromArray(s.offset),s.repeat!==void 0&&a.repeat.fromArray(s.repeat),s.center!==void 0&&a.center.fromArray(s.center),s.rotation!==void 0&&(a.rotation=s.rotation),s.wrap!==void 0&&(a.wrapS=n(s.wrap[0],vu),a.wrapT=n(s.wrap[1],vu)),s.format!==void 0&&(a.format=s.format),s.type!==void 0&&(a.type=s.type),s.encoding!==void 0&&(a.encoding=s.encoding),s.minFilter!==void 0&&(a.minFilter=n(s.minFilter,xu)),s.magFilter!==void 0&&(a.magFilter=n(s.magFilter,xu)),s.anisotropy!==void 0&&(a.anisotropy=s.anisotropy),s.flipY!==void 0&&(a.flipY=s.flipY),s.premultiplyAlpha!==void 0&&(a.premultiplyAlpha=s.premultiplyAlpha),s.unpackAlignment!==void 0&&(a.unpackAlignment=s.unpackAlignment),i[s.uuid]=a}return i},parseObject:function(e,t,n){let i;function r(c){return t[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",c),t[c]}function o(c){if(c!==void 0){if(Array.isArray(c)){const l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h];n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),l.push(n[f])}return l}return n[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",c),n[c]}}let s,a;switch(e.type){case"Scene":i=new sr,e.background!==void 0&&Number.isInteger(e.background)&&(i.background=new ce(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?i.fog=new fc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(i.fog=new hc(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new dt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(i.focus=e.focus),e.zoom!==void 0&&(i.zoom=e.zoom),e.filmGauge!==void 0&&(i.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(i.filmOffset=e.filmOffset),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new wo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(i.zoom=e.zoom),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new ea(e.color,e.intensity);break;case"DirectionalLight":i=new Ks(e.color,e.intensity);break;case"PointLight":i=new Rc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new Dc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new Pc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new Qs(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=new on().fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":s=r(e.geometry),a=o(e.material),i=new ee(s,a);break;case"InstancedMesh":s=r(e.geometry),a=o(e.material);const c=e.count,l=e.instanceMatrix;i=new gc(s,a,c),i.instanceMatrix=new Ae(new Float32Array(l.array),16);break;case"LOD":i=new As;break;case"Line":i=new De(r(e.geometry),o(e.material),e.mode);break;case"LineLoop":i=new yc(r(e.geometry),o(e.material));break;case"LineSegments":i=new lt(r(e.geometry),o(e.material));break;case"PointCloud":case"Points":i=new no(r(e.geometry),o(e.material));break;case"Sprite":i=new dc(o(e.material));break;case"Group":i=new lr;break;default:i=new te}if(i.uuid=e.uuid,e.name!==void 0&&(i.name=e.name),e.matrix!==void 0?(i.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(e.position!==void 0&&i.position.fromArray(e.position),e.rotation!==void 0&&i.rotation.fromArray(e.rotation),e.quaternion!==void 0&&i.quaternion.fromArray(e.quaternion),e.scale!==void 0&&i.scale.fromArray(e.scale)),e.castShadow!==void 0&&(i.castShadow=e.castShadow),e.receiveShadow!==void 0&&(i.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(i.shadow.bias=e.shadow.bias),e.shadow.radius!==void 0&&(i.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(i.visible=e.visible),e.frustumCulled!==void 0&&(i.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(i.renderOrder=e.renderOrder),e.userData!==void 0&&(i.userData=e.userData),e.layers!==void 0&&(i.layers.mask=e.layers),e.children!==void 0){const c=e.children;for(let l=0;l<c.length;l++)i.add(this.parseObject(c[l],t,n))}if(e.type==="LOD"){e.autoUpdate!==void 0&&(i.autoUpdate=e.autoUpdate);const c=e.levels;for(let l=0;l<c.length;l++){const h=c[l],u=i.getObjectByProperty("uuid",h.object);u!==void 0&&i.addLevel(u,h.distance)}}return i}});const uy={UVMapping:$c,CubeReflectionMapping:Qc,CubeRefractionMapping:Kc,EquirectangularReflectionMapping:eh,EquirectangularRefractionMapping:el,CubeUVReflectionMapping:Po,CubeUVRefractionMapping:tl},vu={RepeatWrapping:rr,ClampToEdgeWrapping:It,MirroredRepeatWrapping:xs},xu={NearestFilter:pt,NearestMipmapNearestFilter:Qa,NearestMipmapLinearFilter:Ka,LinearFilter:Mt,LinearMipmapNearestFilter:th,LinearMipmapLinearFilter:la};function _u(e){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),qe.call(this,e),this.options=void 0}_u.prototype=Object.assign(Object.create(qe.prototype),{constructor:_u,setOptions:function(t){return this.options=t,this},load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=br.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;fetch(e).then(function(s){return s.blob()}).then(function(s){return r.options===void 0?createImageBitmap(s):createImageBitmap(s,r.options)}).then(function(s){br.add(e,s),t&&t(s),r.manager.itemEnd(e)}).catch(function(s){i&&i(s),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});function Lh(){this.type="ShapePath",this.color=new ce,this.subPaths=[],this.currentPath=null}Object.assign(Lh.prototype,{moveTo:function(e,t){return this.currentPath=new mn,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this},bezierCurveTo:function(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(m){const y=[];for(let _=0,w=m.length;_<w;_++){const b=m[_],T=new _i;T.curves=b.curves,y.push(T)}return y}function i(m,y){const _=y.length;let w=!1;for(let b=_-1,T=0;T<_;b=T++){let A=y[b],N=y[T],P=N.x-A.x,Y=N.y-A.y;if(Math.abs(Y)>Number.EPSILON){if(Y<0&&(A=y[T],P=-P,N=y[b],Y=-Y),m.y<A.y||m.y>N.y)continue;if(m.y===A.y){if(m.x===A.x)return!0}else{const O=Y*(m.x-A.x)-P*(m.y-A.y);if(O===0)return!0;if(O<0)continue;w=!w}}else{if(m.y!==A.y)continue;if(N.x<=m.x&&m.x<=A.x||A.x<=m.x&&m.x<=N.x)return!0}}return w}const r=ni.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let s,a,c,l=[];if(o.length===1)return a=o[0],c=new _i,c.curves=a.curves,l.push(c),l;let h=!r(o[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],p=0,g;f[p]=void 0,d[p]=[];for(let m=0,y=o.length;m<y;m++)a=o[m],g=a.getPoints(),s=r(g),s=e?!s:s,s?(!h&&f[p]&&p++,f[p]={s:new _i,p:g},f[p].s.curves=a.curves,h&&p++,d[p]=[]):d[p].push({h:a,p:g[0]});if(!f[0])return n(o);if(f.length>1){let m=!1;const y=[];for(let _=0,w=f.length;_<w;_++)u[_]=[];for(let _=0,w=f.length;_<w;_++){const b=d[_];for(let T=0;T<b.length;T++){const A=b[T];let N=!0;for(let P=0;P<f.length;P++)i(A.p,f[P].p)&&(_!==P&&y.push({froms:_,tos:P,hole:T}),N?(N=!1,u[P].push(A)):m=!0);N&&u[_].push(A)}}y.length>0&&(m||(d=u))}let v;for(let m=0,y=f.length;m<y;m++){c=f[m].s,l.push(c),v=d[m];for(let _=0,w=v.length;_<w;_++)c.holes.push(v[_].h)}return l}});function Ph(e){this.type="Font",this.data=e}Object.assign(Ph.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);const n=[],i=hy(e,t,this.data);for(let r=0,o=i.length;r<o;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function hy(e,t,n){const i=Array.from?Array.from(e):String(e).split(""),r=t/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[];let a=0,c=0;for(let l=0;l<i.length;l++){const h=i[l];if(h===`
`)a=0,c-=o;else{const u=fy(h,r,a,c,n);a+=u.offsetX,s.push(u.path)}}return s}function fy(e,t,n,i,r){const o=r.glyphs[e]||r.glyphs["?"];if(!o){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}const s=new Lh;let a,c,l,h,u,f,d,p;if(o.o){const g=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let v=0,m=g.length;v<m;)switch(g[v++]){case"m":a=g[v++]*t+n,c=g[v++]*t+i,s.moveTo(a,c);break;case"l":a=g[v++]*t+n,c=g[v++]*t+i,s.lineTo(a,c);break;case"q":l=g[v++]*t+n,h=g[v++]*t+i,u=g[v++]*t+n,f=g[v++]*t+i,s.quadraticCurveTo(u,f,l,h);break;case"b":l=g[v++]*t+n,h=g[v++]*t+i,u=g[v++]*t+n,f=g[v++]*t+i,d=g[v++]*t+n,p=g[v++]*t+i,s.bezierCurveTo(u,f,d,p,l,h);break}}return{offsetX:o.ha*t,path:s}}function bu(e){qe.call(this,e)}bu.prototype=Object.assign(Object.create(qe.prototype),{constructor:bu,load:function(e,t,n,i){const r=this,o=new Zt(this.manager);o.setPath(this.path),o.load(e,function(s){let a;try{a=JSON.parse(s)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(s.substring(65,s.length-2))}const c=r.parse(a);t&&t(c)},n,i)},parse:function(e){return new Ph(e)}});let cs;const Ch={getContext:function(){return cs===void 0&&(cs=new(window.AudioContext||window.webkitAudioContext)),cs},setContext:function(e){cs=e}};function zc(e){qe.call(this,e)}zc.prototype=Object.assign(Object.create(qe.prototype),{constructor:zc,load:function(e,t,n,i){const r=this,o=new Zt(r.manager);o.setResponseType("arraybuffer"),o.setPath(r.path),o.load(e,function(s){try{const a=s.slice(0);Ch.getContext().decodeAudioData(a,function(l){t(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}});function wu(e,t,n){on.call(this,void 0,n);const i=new ce().set(e),r=new ce().set(t),o=new x(i.r,i.g,i.b),s=new x(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(c)}wu.prototype=Object.assign(Object.create(on.prototype),{constructor:wu,isHemisphereLightProbe:!0,copy:function(e){return on.prototype.copy.call(this,e),this},toJSON:function(e){return on.prototype.toJSON.call(this,e)}});function Mu(e,t){on.call(this,void 0,t);const n=new ce().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Mu.prototype=Object.assign(Object.create(on.prototype),{constructor:Mu,isAmbientLightProbe:!0,copy:function(e){return on.prototype.copy.call(this,e),this},toJSON:function(e){return on.prototype.toJSON.call(this,e)}});const Su=new Fe,Eu=new Fe;function dy(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new dt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new dt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(dy.prototype,{update:function(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),r=t.eyeSep/2,o=r*t.near/t.focus,s=t.near*Math.tan(Oe.DEG2RAD*t.fov*.5)/t.zoom;let a,c;Eu.elements[12]=-r,Su.elements[12]=r,a=-s*t.aspect+o,c=s*t.aspect+o,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(i),a=-s*t.aspect-o,c=s*t.aspect-o,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Eu),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Su)}});function Rh(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(Rh.prototype,{start:function(){this.startTime=(typeof performance>"u"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=(typeof performance>"u"?Date:performance).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}});const pi=new x,Tu=new Ye,py=new x,mi=new x;function Au(){te.call(this),this.type="AudioListener",this.context=Ch.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Rh}Au.prototype=Object.assign(Object.create(te.prototype),{constructor:Au,getInput:function(){return this.gain},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){te.prototype.updateMatrixWorld.call(this,e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(pi,Tu,py),mi.set(0,0,-1).applyQuaternion(Tu),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(pi.x,i),t.positionY.linearRampToValueAtTime(pi.y,i),t.positionZ.linearRampToValueAtTime(pi.z,i),t.forwardX.linearRampToValueAtTime(mi.x,i),t.forwardY.linearRampToValueAtTime(mi.y,i),t.forwardZ.linearRampToValueAtTime(mi.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(pi.x,pi.y,pi.z),t.setOrientation(mi.x,mi.y,mi.z,n.x,n.y,n.z)}});function Mo(e){te.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._progress=0,this.filters=[]}Mo.prototype=Object.assign(Object.create(te.prototype),{constructor:Mo,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}});const gi=new x,Lu=new Ye,my=new x,yi=new x;function Pu(e){Mo.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}Pu.prototype=Object.assign(Object.create(Mo.prototype),{constructor:Pu,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(e){if(te.prototype.updateMatrixWorld.call(this,e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(gi,Lu,my),yi.set(0,0,1).applyQuaternion(Lu);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(gi.x,n),t.positionY.linearRampToValueAtTime(gi.y,n),t.positionZ.linearRampToValueAtTime(gi.z,n),t.orientationX.linearRampToValueAtTime(yi.x,n),t.orientationY.linearRampToValueAtTime(yi.y,n),t.orientationZ.linearRampToValueAtTime(yi.z,n)}else t.setPosition(gi.x,gi.y,gi.z),t.setOrientation(yi.x,yi.y,yi.z)}});function Ih(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}Object.assign(Ih.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}});function Dh(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Dh.prototype,{accumulate:function(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let s=0;s!==i;++s)n[r+s]=n[s];o=t}else{o+=t;const s=t/o;this._mixBufferRegion(n,r,0,s,i)}this.cumulativeWeight=o},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,c=t+t;a!==c;++a)if(n[a]!==n[a+t]){s.setValue(n,i);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*4+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]},_slerp:function(e,t,n,i){Ye.slerpFlat(e,t,e,t,e,n,i)},_slerpAdditive:function(e,t,n,i,r){const o=this._workIndex*r;Ye.multiplyQuaternionsFlat(e,o,e,t,e,n),Ye.slerpFlat(e,t,e,t,e,o,i)},_lerp:function(e,t,n,i,r){const o=1-i;for(let s=0;s!==r;++s){const a=t+s;e[a]=e[a]*o+e[n+s]*i}},_lerpAdditive:function(e,t,n,i,r){for(let o=0;o!==r;++o){const s=t+o;e[s]=e[s]+e[n+o]*i}}});const hl="\\[\\]\\.:\\/",gy=new RegExp("["+hl+"]","g"),fl="[^"+hl+"]",yy="[^"+hl.replace("\\.","")+"]",vy=/((?:WC+[\/:])*)/.source.replace("WC",fl),xy=/(WCOD+)?/.source.replace("WCOD",yy),_y=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",fl),by=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",fl),wy=new RegExp("^"+vy+xy+_y+by+"$"),My=["material","materials","bones"];function Oh(e,t,n){const i=n||Lt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}Object.assign(Oh.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function Lt(e,t,n){this.path=t,this.parsedPath=n||Lt.parseTrackName(t),this.node=Lt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(Lt,{Composite:Oh,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new Lt.Composite(e,t,n):new Lt(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(gy,"")},parseTrackName:function(e){const t=wy.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);My.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const s=r[o];if(s.name===t||s.uuid===t)return s;const a=n(s.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}});Object.assign(Lt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){const i=this.resolvedProperty;for(let r=0,o=i.length;r!==o;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){const i=this.resolvedProperty;for(let r=0,o=i.length;r!==o;++r)i[r]=t[n++]},function(t,n){const i=this.resolvedProperty;for(let r=0,o=i.length;r!==o;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){const i=this.resolvedProperty;for(let r=0,o=i.length;r!==o;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){let e=this.node,t=this.parsedPath,n=t.objectName,i=t.propertyName,r=t.propertyIndex;if(e||(e=Lt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let l=0;l<e.length;l++)if(e[l].name===c){c=l;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[i];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let s=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?s=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(Lt.prototype,{_getValue_unbound:Lt.prototype.getValue,_setValue_unbound:Lt.prototype.setValue});function Sy(){this.uuid=Oe.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Sy.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let s,a=e.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const u=arguments[l],f=u.uuid;let d=t[f];if(d===void 0){d=a++,t[f]=d,e.push(u);for(let p=0,g=o;p!==g;++p)r[p].push(new Lt(u,n[p],i[p]))}else if(d<c){s=e[d];const p=--c,g=e[p];t[g.uuid]=d,e[d]=g,t[f]=p,e[p]=u;for(let v=0,m=o;v!==m;++v){const y=r[v],_=y[p];let w=y[d];y[d]=_,w===void 0&&(w=new Lt(u,n[v],i[v])),y[p]=w}}else e[d]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,s=arguments.length;o!==s;++o){const a=arguments[o],c=a.uuid,l=t[c];if(l!==void 0&&l>=r){const h=r++,u=e[h];t[u.uuid]=l,e[l]=u,t[c]=h,e[h]=a;for(let f=0,d=i;f!==d;++f){const p=n[f],g=p[h],v=p[l];p[l]=g,p[h]=v}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let s=0,a=arguments.length;s!==a;++s){const c=arguments[s],l=c.uuid,h=t[l];if(h!==void 0)if(delete t[l],h<r){const u=--r,f=e[u],d=--o,p=e[d];t[f.uuid]=h,e[h]=f,t[p.uuid]=u,e[u]=p,e.pop();for(let g=0,v=i;g!==v;++g){const m=n[g],y=m[u],_=m[d];m[h]=y,m[u]=_,m.pop()}}else{const u=--o,f=e[u];t[f.uuid]=h,e[h]=f,e.pop();for(let d=0,p=i;d!==p;++d){const g=n[d];g[h]=g[u],g.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){let n=this._bindingsIndicesByPath,i=n[e],r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,s=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,o.push(e),s.push(t),r.push(h);for(let u=l,f=a.length;u!==f;++u){const d=a[u];h[u]=new Lt(d,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,s=o.length-1,a=o[s],c=e[s];t[c]=n,o[n]=a,o.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}});function Nh(e,t,n,i){this._mixer=e,this._clip=t,this._localRoot=n||null,this.blendMode=i||t.blendMode;const r=t.tracks,o=r.length,s=new Array(o),a={endingStart:or,endingEnd:or};for(let c=0;c!==o;++c){const l=r[c].createInterpolant(null);s[c]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=yd,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(Nh.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,s=i/r;e.warp(1,o,t),this.warp(s,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){let e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let s=this._timeScaleInterpolant;s===null&&(s=i._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,c=s.sampleValues;return a[0]=r,a[1]=r+n,c[0]=e/o,c[1]=t/o,this},stopWarping:function(){let e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const a=(e-r)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);const o=this._updateTime(t),s=this._updateWeight(e);if(s>0){const a=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case ih:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(o),c[l].accumulateAdditive(s);break;case nl:default:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(o),c[l].accumulate(i,s)}}},_updateWeight:function(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===vd;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===gd){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const s=Math.floor(i/t);i-=t*s,r+=Math.abs(s);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(a===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i},_setEndings:function(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=$i,i.endingEnd=$i):(e?i.endingStart=this.zeroSlopeAtStart?$i:or:i.endingStart=Ms,t?i.endingEnd=this.zeroSlopeAtEnd?$i:or:i.endingEnd=Ms)},_scheduleFading:function(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const s=o.parameterPositions,a=o.sampleValues;return s[0]=r,a[0]=t,s[1]=r+e,a[1]=n,this}});function Cu(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Cu.prototype=Object.assign(Object.create(sn.prototype),{constructor:Cu,_bindAction:function(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,s=e._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let d=l[f];if(d!==void 0)o[h]=d;else{if(d=o[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const p=t&&t._propertyBindings[h].binding.parsedPath;d=new Dh(Lt.create(n,f,p),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),o[h]=d}s[h].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const s=o.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,s=o[r],a=s.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),e._byClipCacheIndex=null;const h=s.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,s=o[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c,t[c]=a,t.pop(),delete s[r],Object.keys(s).length===0&&delete o[i]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Ys(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?nn.findByName(i,e):e;const s=o!==null?o.uuid:e;let a=this._actionsByClip[s],c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=nl),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const l=new Nh(this,o,t,n);return this._bindAction(l,c),this._addInactiveAction(l,s,r),l},existingAction:function(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?nn.findByName(n,e):e,o=r?r.uuid:e,s=this._actionsByClip[o];return s!==void 0&&s.actionByRoot[i]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,o);const s=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)s[c].apply(o);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let s=0,a=o.length;s!==a;++s){const c=o[s];this._deactivateAction(c);const l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const s=n[o].actionByRoot,a=s[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const s=r[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Uc(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}Uc.prototype.clone=function(){return new Uc(this.value.clone===void 0?this.value:this.value.clone())};function Ru(e,t,n){Wt.call(this,e,t),this.meshPerAttribute=n||1}Ru.prototype=Object.assign(Object.create(Wt.prototype),{constructor:Ru,isInstancedInterleavedBuffer:!0,copy:function(e){return Wt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=Wt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=Wt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}});function da(e,t,n,i){this.ray=new Tr(e,t),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new ol,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Iu(e,t){return e.distance-t.distance}function Gc(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),i===!0){const r=e.children;for(let o=0,s=r.length;o<s;o++)Gc(r[o],t,n,!0)}}Object.assign(da.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){const i=n||[];return Gc(e,this,i,t),i.sort(Iu),i},intersectObjects:function(e,t,n){const i=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,o=e.length;r<o;r++)Gc(e[r],this,i,t);return i.sort(Iu),i}});function kc(e,t,n){return this.radius=e!==void 0?e:1,this.phi=t!==void 0?t:0,this.theta=n!==void 0?n:0,this}Object.assign(kc.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Oe.clamp(t/this.radius,-1,1))),this}});function Ey(e,t,n){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=n!==void 0?n:0,this}Object.assign(Ey.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}});const Du=new V;function Fh(e,t){this.min=e!==void 0?e:new V(1/0,1/0),this.max=t!==void 0?t:new V(-1/0,-1/0)}Object.assign(Fh.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){const n=Du.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new V),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new V),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new V),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new V),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){return Du.copy(e).clamp(this.min,this.max).sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});const Ou=new x,ls=new x;function Bh(e,t){this.start=e!==void 0?e:new x,this.end=t!==void 0?t:new x}Object.assign(Bh.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new x),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new x),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new x),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){Ou.subVectors(e,this.start),ls.subVectors(this.end,this.start);const n=ls.dot(ls);let r=ls.dot(Ou)/n;return t&&(r=Oe.clamp(r,0,1)),r},closestPointToPoint:function(e,t,n){const i=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new x),this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}});function na(e){te.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}na.prototype=Object.create(te.prototype);na.prototype.constructor=na;na.prototype.isImmediateRenderObject=!0;const Nu=new x;function So(e,t){te.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new he,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,s=1,a=32;o<a;o++,s++){const c=o/a*Math.PI*2,l=s/a*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(l),Math.sin(l),1)}n.setAttribute("position",new ie(i,3));const r=new nt({fog:!1,toneMapped:!1});this.cone=new lt(n,r),this.add(this.cone),this.update()}So.prototype=Object.create(te.prototype);So.prototype.constructor=So;So.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};So.prototype.update=function(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Nu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Nu),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};const Zn=new x,us=new Fe,Wa=new Fe;function zh(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,zh(e.children[n]));return t}function wr(e){const t=zh(e),n=new he,i=[],r=[],o=new ce(0,0,1),s=new ce(0,1,0);for(let c=0;c<t.length;c++){const l=t[c];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new ie(i,3)),n.setAttribute("color",new ie(r,3));const a=new nt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});lt.call(this,n,a),this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}wr.prototype=Object.create(lt.prototype);wr.prototype.constructor=wr;wr.prototype.isSkeletonHelper=!0;wr.prototype.updateMatrixWorld=function(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Wa.getInverse(this.root.matrixWorld);for(let r=0,o=0;r<t.length;r++){const s=t[r];s.parent&&s.parent.isBone&&(us.multiplyMatrices(Wa,s.matrixWorld),Zn.setFromMatrixPosition(us),i.setXYZ(o,Zn.x,Zn.y,Zn.z),us.multiplyMatrices(Wa,s.parent.matrixWorld),Zn.setFromMatrixPosition(us),i.setXYZ(o+1,Zn.x,Zn.y,Zn.z),o+=2)}n.getAttribute("position").needsUpdate=!0,te.prototype.updateMatrixWorld.call(this,e)};function Eo(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;const i=new Ai(t,4,2),r=new Ot({wireframe:!0,fog:!1,toneMapped:!1});ee.call(this,i,r),this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}Eo.prototype=Object.create(ee.prototype);Eo.prototype.constructor=Eo;Eo.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};Eo.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)};const Ty=new x,Fu=new ce,Bu=new ce;function To(e,t,n){te.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new zt(t);i.rotateY(Math.PI*.5),this.material=new Ot({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new Ae(o,3)),this.add(new ee(i,this.material)),this.update()}To.prototype=Object.create(te.prototype);To.prototype.constructor=To;To.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};To.prototype.update=function(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Fu.copy(this.light.color),Bu.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Fu:Bu;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(Ty.setFromMatrixPosition(this.light.matrixWorld).negate())};function ia(e,t,n,i){e=e||10,t=t||10,n=new ce(n!==void 0?n:4473924),i=new ce(i!==void 0?i:8947848);const r=t/2,o=e/t,s=e/2,a=[],c=[];for(let u=0,f=0,d=-s;u<=t;u++,d+=o){a.push(-s,0,d,s,0,d),a.push(d,0,-s,d,0,s);const p=u===r?n:i;p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3,p.toArray(c,f),f+=3}const l=new he;l.setAttribute("position",new ie(a,3)),l.setAttribute("color",new ie(c,3));const h=new nt({vertexColors:!0,toneMapped:!1});lt.call(this,l,h),this.type="GridHelper"}ia.prototype=Object.assign(Object.create(lt.prototype),{constructor:ia,copy:function(e){return lt.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return new this.constructor().copy(this)}});function Hc(e,t,n,i,r,o){e=e||10,t=t||16,n=n||8,i=i||64,r=new ce(r!==void 0?r:4473924),o=new ce(o!==void 0?o:8947848);const s=[],a=[];for(let h=0;h<=t;h++){const u=h/t*(Math.PI*2),f=Math.sin(u)*e,d=Math.cos(u)*e;s.push(0,0,0),s.push(f,0,d);const p=h&1?r:o;a.push(p.r,p.g,p.b),a.push(p.r,p.g,p.b)}for(let h=0;h<=n;h++){const u=h&1?r:o,f=e-e/n*h;for(let d=0;d<i;d++){let p=d/i*(Math.PI*2),g=Math.sin(p)*f,v=Math.cos(p)*f;s.push(g,0,v),a.push(u.r,u.g,u.b),p=(d+1)/i*(Math.PI*2),g=Math.sin(p)*f,v=Math.cos(p)*f,s.push(g,0,v),a.push(u.r,u.g,u.b)}}const c=new he;c.setAttribute("position",new ie(s,3)),c.setAttribute("color",new ie(a,3));const l=new nt({vertexColors:!0,toneMapped:!1});lt.call(this,c,l),this.type="PolarGridHelper"}Hc.prototype=Object.create(lt.prototype);Hc.prototype.constructor=Hc;const zu=new x,hs=new x,Uu=new x;function Mr(e,t,n){te.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new he;i.setAttribute("position",new ie([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new nt({fog:!1,toneMapped:!1});this.lightPlane=new De(i,r),this.add(this.lightPlane),i=new he,i.setAttribute("position",new ie([0,0,0,0,0,1],3)),this.targetLine=new De(i,r),this.add(this.targetLine),this.update()}Mr.prototype=Object.create(te.prototype);Mr.prototype.constructor=Mr;Mr.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()};Mr.prototype.update=function(){zu.setFromMatrixPosition(this.light.matrixWorld),hs.setFromMatrixPosition(this.light.target.matrixWorld),Uu.subVectors(hs,zu),this.lightPlane.lookAt(hs),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(hs),this.targetLine.scale.z=Uu.length()};const fs=new x,ct=new On;function ra(e){const t=new he,n=new nt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={},s=new ce(16755200),a=new ce(16711680),c=new ce(43775),l=new ce(16777215),h=new ce(3355443);u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",a),u("p","n2",a),u("p","n3",a),u("p","n4",a),u("u1","u2",c),u("u2","u3",c),u("u3","u1",c),u("c","t",l),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h);function u(d,p,g){f(d,g),f(p,g)}function f(d,p){i.push(0,0,0),r.push(p.r,p.g,p.b),o[d]===void 0&&(o[d]=[]),o[d].push(i.length/3-1)}t.setAttribute("position",new ie(i,3)),t.setAttribute("color",new ie(r,3)),lt.call(this,t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}ra.prototype=Object.create(lt.prototype);ra.prototype.constructor=ra;ra.prototype.update=function(){const e=this.geometry,t=this.pointMap,n=1,i=1;ct.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),ht("c",t,e,ct,0,0,-1),ht("t",t,e,ct,0,0,1),ht("n1",t,e,ct,-n,-i,-1),ht("n2",t,e,ct,n,-i,-1),ht("n3",t,e,ct,-n,i,-1),ht("n4",t,e,ct,n,i,-1),ht("f1",t,e,ct,-n,-i,1),ht("f2",t,e,ct,n,-i,1),ht("f3",t,e,ct,-n,i,1),ht("f4",t,e,ct,n,i,1),ht("u1",t,e,ct,n*.7,i*1.1,-1),ht("u2",t,e,ct,-n*.7,i*1.1,-1),ht("u3",t,e,ct,0,i*2,-1),ht("cf1",t,e,ct,-n,0,1),ht("cf2",t,e,ct,n,0,1),ht("cf3",t,e,ct,0,-i,1),ht("cf4",t,e,ct,0,i,1),ht("cn1",t,e,ct,-n,0,-1),ht("cn2",t,e,ct,n,0,-1),ht("cn3",t,e,ct,0,-i,-1),ht("cn4",t,e,ct,0,i,-1),e.getAttribute("position").needsUpdate=!0};function ht(e,t,n,i,r,o,s){fs.set(r,o,s).unproject(i);const a=t[e];if(a!==void 0){const c=n.getAttribute("position");for(let l=0,h=a.length;l<h;l++)c.setXYZ(a[l],fs.x,fs.y,fs.z)}}const ds=new an;function Li(e,t){this.object=e,t===void 0&&(t=16776960);const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new he;r.setIndex(new Ae(n,1)),r.setAttribute("position",new Ae(i,3)),lt.call(this,r,new nt({color:t,toneMapped:!1})),this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}Li.prototype=Object.create(lt.prototype);Li.prototype.constructor=Li;Li.prototype.update=function(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&ds.setFromObject(this.object),ds.isEmpty())return;const t=ds.min,n=ds.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()};Li.prototype.setFromObject=function(e){return this.object=e,this.update(),this};Li.prototype.copy=function(e){return lt.prototype.copy.call(this,e),this.object=e.object,this};Li.prototype.clone=function(){return new this.constructor().copy(this)};function oa(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new he;r.setIndex(new Ae(n,1)),r.setAttribute("position",new ie(i,3)),lt.call(this,r,new nt({color:t,toneMapped:!1})),this.type="Box3Helper",this.geometry.computeBoundingSphere()}oa.prototype=Object.create(lt.prototype);oa.prototype.constructor=oa;oa.prototype.updateMatrixWorld=function(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),te.prototype.updateMatrixWorld.call(this,e))};function sa(e,t,n){this.plane=e,this.size=t===void 0?1:t;const i=n!==void 0?n:16776960,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new he;o.setAttribute("position",new ie(r,3)),o.computeBoundingSphere(),De.call(this,o,new nt({color:i,toneMapped:!1})),this.type="PlaneHelper";const s=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],a=new he;a.setAttribute("position",new ie(s,3)),a.computeBoundingSphere(),this.add(new ee(a,new Ot({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}sa.prototype=Object.create(De.prototype);sa.prototype.constructor=sa;sa.prototype.updateMatrixWorld=function(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?vt:Sr,this.lookAt(this.plane.normal),te.prototype.updateMatrixWorld.call(this,e)};const Gu=new x;let ps,ja;function ci(e,t,n,i,r,o){te.call(this),this.type="ArrowHelper",e===void 0&&(e=new x(0,0,1)),t===void 0&&(t=new x(0,0,0)),n===void 0&&(n=1),i===void 0&&(i=16776960),r===void 0&&(r=.2*n),o===void 0&&(o=.2*r),ps===void 0&&(ps=new he,ps.setAttribute("position",new ie([0,0,0,0,1,0],3)),ja=new gt(0,.5,1,5,1),ja.translate(0,-.5,0)),this.position.copy(t),this.line=new De(ps,new nt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ee(ja,new Ot({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}ci.prototype=Object.create(te.prototype);ci.prototype.constructor=ci;ci.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Gu.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Gu,t)}};ci.prototype.setLength=function(e,t,n){t===void 0&&(t=.2*e),n===void 0&&(n=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()};ci.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)};ci.prototype.copy=function(e){return te.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this};ci.prototype.clone=function(){return new this.constructor().copy(this)};function aa(e){e=e||1;const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new he;i.setAttribute("position",new ie(t,3)),i.setAttribute("color",new ie(n,3));const r=new nt({vertexColors:!0,toneMapped:!1});lt.call(this,i,r),this.type="AxesHelper"}aa.prototype=Object.create(lt.prototype);aa.prototype.constructor=aa;const ir=4,ii=8,dn=Math.pow(2,ii),Uh=[.125,.215,.35,.446,.526,.582],Gh=ii-ir+1+Uh.length,Ji=20,gn={[Dt]:0,[ua]:1,[rl]:2,[rh]:3,[oh]:4,[sh]:5,[il]:6},qa=new wo,{_lodPlanes:zr,_sizeLods:ku,_sigmas:ms}=Ly();let Xa=null;const vi=(1+Math.sqrt(5))/2,Xi=1/vi,Hu=[new x(1,1,1),new x(-1,1,1),new x(1,1,-1),new x(-1,1,-1),new x(0,vi,Xi),new x(0,vi,-Xi),new x(Xi,0,vi),new x(-Xi,0,vi),new x(vi,Xi,0),new x(-vi,Xi,0)];function Vu(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=Py(Ji),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}Vu.prototype={constructor:Vu,fromScene:function(e,t=0,n=.1,i=100){Xa=this._renderer.getRenderTarget();const r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r},fromEquirectangular:function(e){return e.magFilter=pt,e.minFilter=pt,e.generateMipmaps=!1,this.fromCubemap(e)},fromCubemap:function(e){Xa=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t},compileCubemapShader:function(){this._cubemapShader===null&&(this._cubemapShader=qu(),this._compileMaterial(this._cubemapShader))},compileEquirectangularShader:function(){this._equirectShader===null&&(this._equirectShader=ju(),this._compileMaterial(this._equirectShader))},dispose:function(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<zr.length;e++)zr[e].dispose()},_cleanup:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Xa),e.scissorTest=!1,e.setSize(e.width,e.height)},_allocateTargets:function(e){const t={magFilter:pt,minFilter:pt,generateMipmaps:!1,type:Co,format:Of,encoding:Ay(e)?e.encoding:rl,depthBuffer:!1,stencilBuffer:!1},n=Wu(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Wu(t),n},_compileMaterial:function(e){const t=new ee(zr[0],e);this._renderer.compile(t,qa)},_sceneToCubeUV:function(e,t,n,i){const s=new dt(90,1,t,n),a=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],l=this._renderer,h=l.outputEncoding,u=l.toneMapping,f=l.toneMappingExposure,d=l.getClearColor(),p=l.getClearAlpha();l.toneMapping=Ku,l.toneMappingExposure=1,l.outputEncoding=Dt;let g=e.background;if(g&&g.isColor){g.convertSRGBToLinear();const v=Math.max(g.r,g.g,g.b),m=Math.min(Math.max(Math.ceil(Math.log2(v)),-128),127);g=g.multiplyScalar(Math.pow(2,-m));const y=(m+128)/255;l.setClearColor(g,y),e.background=null}for(let v=0;v<6;v++){const m=v%3;m==0?(s.up.set(0,a[v],0),s.lookAt(c[v],0,0)):m==1?(s.up.set(0,0,a[v]),s.lookAt(0,c[v],0)):(s.up.set(0,a[v],0),s.lookAt(0,0,c[v])),Ya(i,m*dn,v>2?dn:0,dn,dn),l.setRenderTarget(i),l.render(e,s)}l.toneMapping=u,l.toneMappingExposure=f,l.outputEncoding=h,l.setClearColor(d,p)},_textureToCubeUV:function(e,t){const n=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=qu()):this._equirectShader==null&&(this._equirectShader=ju());const i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new ee(zr[0],i),o=i.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=gn[e.encoding],o.outputEncoding.value=gn[t.texture.encoding],Ya(t,0,0,3*dn,2*dn),n.setRenderTarget(t),n.render(r,qa)},_applyPMREM:function(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<Gh;i++){const r=Math.sqrt(ms[i]*ms[i]-ms[i-1]*ms[i-1]),o=Hu[(i-1)%Hu.length];this._blur(e,i-1,i,r,o)}t.autoClear=n},_blur:function(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)},_halfBlur:function(e,t,n,i,r,o,s){const a=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,h=new ee(zr[i],c),u=c.uniforms,f=ku[n]-1,d=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*Ji-1),p=r/d,g=isFinite(r)?1+Math.floor(l*p):Ji;g>Ji&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Ji}`);const v=[];let m=0;for(let b=0;b<Ji;++b){const T=b/p,A=Math.exp(-T*T/2);v.push(A),b==0?m+=A:b<g&&(m+=2*A)}for(let b=0;b<v.length;b++)v[b]=v[b]/m;u.envMap.value=e.texture,u.samples.value=g,u.weights.value=v,u.latitudinal.value=o==="latitudinal",s&&(u.poleAxis.value=s),u.dTheta.value=d,u.mipInt.value=ii-n,u.inputEncoding.value=gn[e.texture.encoding],u.outputEncoding.value=gn[e.texture.encoding];const y=ku[i],_=3*Math.max(0,dn-2*y),w=(i===0?0:2*dn)+2*y*(i>ii-ir?i-ii+ir:0);Ya(t,_,w,3*y,2*y),a.setRenderTarget(t),a.render(h,qa)}};function Ay(e){return e===void 0||e.type!==Co?!1:e.encoding===Dt||e.encoding===ua||e.encoding===il}function Ly(){const e=[],t=[],n=[];let i=ii;for(let r=0;r<Gh;r++){const o=Math.pow(2,i);t.push(o);let s=1/o;r>ii-ir?s=Uh[r-ii+ir-1]:r==0&&(s=0),n.push(s);const a=1/(o-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,f=6,d=3,p=2,g=1,v=new Float32Array(d*f*u),m=new Float32Array(p*f*u),y=new Float32Array(g*f*u);for(let w=0;w<u;w++){const b=w%3*2/3-1,T=w>2?0:-1,A=[b,T,0,b+2/3,T,0,b+2/3,T+1,0,b,T,0,b+2/3,T+1,0,b,T+1,0];v.set(A,d*f*w),m.set(h,p*f*w);const N=[w,w,w,w,w,w];y.set(N,g*f*w)}const _=new he;_.setAttribute("position",new Ae(v,d)),_.setAttribute("uv",new Ae(m,p)),_.setAttribute("faceIndex",new Ae(y,g)),e.push(_),i>ir&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function Wu(e){const t=new qt(3*dn,3*dn,e);return t.texture.mapping=Po,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Ya(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Py(e){const t=new Float32Array(e),n=new x(0,1,0),i=new ai({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:t},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:gn[Dt]},outputEncoding:{value:gn[Dt]}},vertexShader:dl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${pl()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

vec3 getSample(float theta, vec3 axis) {
	float cosTheta = cos(theta);
	// Rodrigues' axis-angle rotation
	vec3 sampleDirection = vOutputDirection * cosTheta
		+ cross(axis, vOutputDirection) * sin(theta)
		+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
	return bilinearCubeUV(envMap, sampleDirection, mipInt);
}

void main() {
	vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
	if (all(equal(axis, vec3(0.0))))
		axis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);
	axis = normalize(axis);
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb += weights[0] * getSample(0.0, axis);
	for (int i = 1; i < n; i++) {
		if (i >= samples)
			break;
		float theta = dTheta * float(i);
		gl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);
		gl_FragColor.rgb += weights[i] * getSample(theta, axis);
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:ei,depthTest:!1,depthWrite:!1});return i.type="SphericalGaussianBlur",i}function ju(){const e=new V(1,1),t=new ai({uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:gn[Dt]},outputEncoding:{value:gn[Dt]}},vertexShader:dl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${pl()}

#include <common>

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv = equirectUv( outputDirection );
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:ei,depthTest:!1,depthWrite:!1});return t.type="EquirectangularToCubeUV",t}function qu(){const e=new ai({uniforms:{envMap:{value:null},inputEncoding:{value:gn[Dt]},outputEncoding:{value:gn[Dt]}},vertexShader:dl(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${pl()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:ei,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e}function dl(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;

// RH coordinate system; PMREM face-indexing convention
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx; // ( 1, v, u ) pos x
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.xz *= -1.0; // ( -u, 1, -v ) pos y
	} else if (face == 2.0) {
		direction.x *= -1.0; // ( -u, v, 1 ) pos z
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.xz *= -1.0; // ( -1, v, -u ) neg x
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.xy *= -1.0; // ( -u, -1, v ) neg y
	} else if (face == 5.0) {
		direction.z *= -1.0; // ( u, v, -1 ) neg z
	}
	return direction;
}

void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function pl(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}Se.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Se.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};Object.assign(Kn.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Ce;for(let n=0,i=e.length;n<i;n++){const r=e[n];t.vertices.push(new x(r.x,r.y,r.z||0))}return t}});Object.assign(mn.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});Object.create(kt.prototype);Object.create(kt.prototype);function kh(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),kt.call(this,e),this.type="catmullrom"}kh.prototype=Object.create(kt.prototype);Object.assign(kh.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function Cy(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new aa(e)}ia.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};wr.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(qe.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ul.extractUrlBase(e)}});qe.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(Bc.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}});Object.assign(Fh.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(an.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(kn.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ro.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)};Bh.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)};Object.assign(Oe,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Oe.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Oe.ceilPowerOfTwo(e)}});Object.assign(At.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Fe.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new x().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,i,r,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,o)}});pn.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};Ye.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)};Object.assign(Tr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(bt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}});Object.assign(bt,{barycoordFromPoint:function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),bt.getBarycoord(e,t,n,i,r)},normal:function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),bt.getNormal(e,t,n,i)}});Object.assign(_i.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new hr(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new fr(this,e)}});Object.assign(V.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(x.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Qe.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ce.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.assign(te.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(te.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(ee.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(ee.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),xd},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(As.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(mc.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});pc.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Se.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}});dt.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(it.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(Ae.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Zr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Zr)}}});Object.assign(Ae.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Zr:ha),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(he.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Ae(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(he.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(ta.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}});Object.defineProperties(da.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}});Object.defineProperties(Wt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Zr},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}});Object.assign(Wt.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?Zr:ha),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Nn.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.defineProperties(Uc.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Te.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ce}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Zu}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}});Object.defineProperties(Bn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Nt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Object.assign(sl.prototype,{clearTarget:function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(sl.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?ua:Dt}}});Object.defineProperties(xh.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(qt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});Object.defineProperties(Mo.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this;return new zc().load(e,function(i){t.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});Ih.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Qr.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};wi.crossOrigin=void 0;wi.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new _o;r.setCrossOrigin(this.crossOrigin);const o=r.load(e,n,void 0,i);return t&&(o.mapping=t),o};wi.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new $s;r.setCrossOrigin(this.crossOrigin);const o=r.load(e,n,void 0,i);return t&&(o.mapping=t),o};wi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};wi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Jh}}));var Xr=function(){var e=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(h){h.preventDefault(),i(++e%t.children.length)},!1);function n(h){return t.appendChild(h.dom),h}function i(h){for(var u=0;u<t.children.length;u++)t.children[u].style.display=u===h?"block":"none";e=h}var r=(performance||Date).now(),o=r,s=0,a=n(new Xr.Panel("FPS","#0ff","#002")),c=n(new Xr.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=n(new Xr.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:t,addPanel:n,showPanel:i,begin:function(){r=(performance||Date).now()},end:function(){s++;var h=(performance||Date).now();if(c.update(h-r,200),h>=o+1e3&&(a.update(s*1e3/(h-o),100),o=h,s=0,l)){var u=performance.memory;l.update(u.usedJSHeapSize/1048576,u.jsHeapSizeLimit/1048576)}return h},update:function(){r=this.end()},domElement:t,setMode:i}};Xr.Panel=function(e,t,n){var i=1/0,r=0,o=Math.round,s=o(window.devicePixelRatio||1),a=80*s,c=48*s,l=3*s,h=2*s,u=3*s,f=15*s,d=74*s,p=30*s,g=document.createElement("canvas");g.width=a,g.height=c,g.style.cssText="width:80px;height:48px";var v=g.getContext("2d");return v.font="bold "+9*s+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=n,v.fillRect(0,0,a,c),v.fillStyle=t,v.fillText(e,l,h),v.fillRect(u,f,d,p),v.fillStyle=n,v.globalAlpha=.9,v.fillRect(u,f,d,p),{dom:g,update:function(m,y){i=Math.min(i,m),r=Math.max(r,m),v.fillStyle=n,v.globalAlpha=1,v.fillRect(0,0,a,f),v.fillStyle=t,v.fillText(o(m)+" "+e+" ("+o(i)+"-"+o(r)+")",l,h),v.drawImage(g,u+s,f,d-s,p,u,f,d-s,p),v.fillRect(u+d-s,f,s,p),v.fillStyle=n,v.globalAlpha=.9,v.fillRect(u+d-s,f,s,o((1-m/y)*p))}}};var Ao=function(e,t){t===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new x,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:Jn.ROTATE,MIDDLE:Jn.DOLLY,RIGHT:Jn.PAN},this.touches={ONE:$n.ROTATE,TWO:$n.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return l.phi},this.getAzimuthalAngle=function(){return l.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),a=s.NONE},this.update=function(){var C=new x,ae=new Ye().setFromUnitVectors(e.up,new x(0,1,0)),be=ae.clone().inverse(),ge=new x,He=new Ye;return function(){var Me=n.object.position;return C.copy(Me).sub(n.target),C.applyQuaternion(ae),l.setFromVector3(C),n.autoRotate&&a===s.NONE&&P(A()),n.enableDamping?(l.theta+=h.theta*n.dampingFactor,l.phi+=h.phi*n.dampingFactor):(l.theta+=h.theta,l.phi+=h.phi),l.theta=Math.max(n.minAzimuthAngle,Math.min(n.maxAzimuthAngle,l.theta)),l.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,l.phi)),l.makeSafe(),l.radius*=u,l.radius=Math.max(n.minDistance,Math.min(n.maxDistance,l.radius)),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),C.setFromSpherical(l),C.applyQuaternion(be),Me.copy(n.target).add(C),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),f.set(0,0,0)),u=1,d||ge.distanceToSquared(n.object.position)>c||8*(1-He.dot(n.object.quaternion))>c?(n.dispatchEvent(i),ge.copy(n.object.position),He.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",we,!1),n.domElement.removeEventListener("mousedown",L,!1),n.domElement.removeEventListener("wheel",M,!1),n.domElement.removeEventListener("touchstart",Z,!1),n.domElement.removeEventListener("touchend",me,!1),n.domElement.removeEventListener("touchmove",j,!1),document.removeEventListener("mousemove",J,!1),document.removeEventListener("mouseup",fe,!1),n.domElement.removeEventListener("keydown",E,!1)};var n=this,i={type:"change"},r={type:"start"},o={type:"end"},s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},a=s.NONE,c=1e-6,l=new kc,h=new kc,u=1,f=new x,d=!1,p=new V,g=new V,v=new V,m=new V,y=new V,_=new V,w=new V,b=new V,T=new V;function A(){return 2*Math.PI/60/60*n.autoRotateSpeed}function N(){return Math.pow(.95,n.zoomSpeed)}function P(C){h.theta-=C}function Y(C){h.phi-=C}var O=function(){var C=new x;return function(be,ge){C.setFromMatrixColumn(ge,0),C.multiplyScalar(-be),f.add(C)}}(),U=function(){var C=new x;return function(be,ge){n.screenSpacePanning===!0?C.setFromMatrixColumn(ge,1):(C.setFromMatrixColumn(ge,0),C.crossVectors(n.object.up,C)),C.multiplyScalar(be),f.add(C)}}(),q=function(){var C=new x;return function(be,ge){var He=n.domElement;if(n.object.isPerspectiveCamera){var Xe=n.object.position;C.copy(Xe).sub(n.target);var Me=C.length();Me*=Math.tan(n.object.fov/2*Math.PI/180),O(2*be*Me/He.clientHeight,n.object.matrix),U(2*ge*Me/He.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(O(be*(n.object.right-n.object.left)/n.object.zoom/He.clientWidth,n.object.matrix),U(ge*(n.object.top-n.object.bottom)/n.object.zoom/He.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function z(C){n.object.isPerspectiveCamera?u/=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function G(C){n.object.isPerspectiveCamera?u*=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function K(C){p.set(C.clientX,C.clientY)}function pe(C){w.set(C.clientX,C.clientY)}function ne(C){m.set(C.clientX,C.clientY)}function oe(C){g.set(C.clientX,C.clientY),v.subVectors(g,p).multiplyScalar(n.rotateSpeed);var ae=n.domElement;P(2*Math.PI*v.x/ae.clientHeight),Y(2*Math.PI*v.y/ae.clientHeight),p.copy(g),n.update()}function se(C){b.set(C.clientX,C.clientY),T.subVectors(b,w),T.y>0?z(N()):T.y<0&&G(N()),w.copy(b),n.update()}function de(C){y.set(C.clientX,C.clientY),_.subVectors(y,m).multiplyScalar(n.panSpeed),q(_.x,_.y),m.copy(y),n.update()}function Ge(C){C.deltaY<0?G(N()):C.deltaY>0&&z(N()),n.update()}function Be(C){var ae=!1;switch(C.keyCode){case n.keys.UP:q(0,n.keyPanSpeed),ae=!0;break;case n.keys.BOTTOM:q(0,-n.keyPanSpeed),ae=!0;break;case n.keys.LEFT:q(n.keyPanSpeed,0),ae=!0;break;case n.keys.RIGHT:q(-n.keyPanSpeed,0),ae=!0;break}ae&&(C.preventDefault(),n.update())}function re(C){if(C.touches.length==1)p.set(C.touches[0].pageX,C.touches[0].pageY);else{var ae=.5*(C.touches[0].pageX+C.touches[1].pageX),be=.5*(C.touches[0].pageY+C.touches[1].pageY);p.set(ae,be)}}function ve(C){if(C.touches.length==1)m.set(C.touches[0].pageX,C.touches[0].pageY);else{var ae=.5*(C.touches[0].pageX+C.touches[1].pageX),be=.5*(C.touches[0].pageY+C.touches[1].pageY);m.set(ae,be)}}function W(C){var ae=C.touches[0].pageX-C.touches[1].pageX,be=C.touches[0].pageY-C.touches[1].pageY,ge=Math.sqrt(ae*ae+be*be);w.set(0,ge)}function xe(C){n.enableZoom&&W(C),n.enablePan&&ve(C)}function _e(C){n.enableZoom&&W(C),n.enableRotate&&re(C)}function Q(C){if(C.touches.length==1)g.set(C.touches[0].pageX,C.touches[0].pageY);else{var ae=.5*(C.touches[0].pageX+C.touches[1].pageX),be=.5*(C.touches[0].pageY+C.touches[1].pageY);g.set(ae,be)}v.subVectors(g,p).multiplyScalar(n.rotateSpeed);var ge=n.domElement;P(2*Math.PI*v.x/ge.clientHeight),Y(2*Math.PI*v.y/ge.clientHeight),p.copy(g)}function k(C){if(C.touches.length==1)y.set(C.touches[0].pageX,C.touches[0].pageY);else{var ae=.5*(C.touches[0].pageX+C.touches[1].pageX),be=.5*(C.touches[0].pageY+C.touches[1].pageY);y.set(ae,be)}_.subVectors(y,m).multiplyScalar(n.panSpeed),q(_.x,_.y),m.copy(y)}function I(C){var ae=C.touches[0].pageX-C.touches[1].pageX,be=C.touches[0].pageY-C.touches[1].pageY,ge=Math.sqrt(ae*ae+be*be);b.set(0,ge),T.set(0,Math.pow(b.y/w.y,n.zoomSpeed)),z(T.y),w.copy(b)}function B(C){n.enableZoom&&I(C),n.enablePan&&k(C)}function D(C){n.enableZoom&&I(C),n.enableRotate&&Q(C)}function L(C){if(n.enabled!==!1){C.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus();var ae;switch(C.button){case 0:ae=n.mouseButtons.LEFT;break;case 1:ae=n.mouseButtons.MIDDLE;break;case 2:ae=n.mouseButtons.RIGHT;break;default:ae=-1}switch(ae){case Jn.DOLLY:if(n.enableZoom===!1)return;pe(C),a=s.DOLLY;break;case Jn.ROTATE:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enablePan===!1)return;ne(C),a=s.PAN}else{if(n.enableRotate===!1)return;K(C),a=s.ROTATE}break;case Jn.PAN:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enableRotate===!1)return;K(C),a=s.ROTATE}else{if(n.enablePan===!1)return;ne(C),a=s.PAN}break;default:a=s.NONE}a!==s.NONE&&(document.addEventListener("mousemove",J,!1),document.addEventListener("mouseup",fe,!1),n.dispatchEvent(r))}}function J(C){if(n.enabled!==!1)switch(C.preventDefault(),a){case s.ROTATE:if(n.enableRotate===!1)return;oe(C);break;case s.DOLLY:if(n.enableZoom===!1)return;se(C);break;case s.PAN:if(n.enablePan===!1)return;de(C);break}}function fe(C){n.enabled!==!1&&(document.removeEventListener("mousemove",J,!1),document.removeEventListener("mouseup",fe,!1),n.dispatchEvent(o),a=s.NONE)}function M(C){n.enabled===!1||n.enableZoom===!1||a!==s.NONE&&a!==s.ROTATE||(C.preventDefault(),C.stopPropagation(),n.dispatchEvent(r),Ge(C),n.dispatchEvent(o))}function E(C){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||Be(C)}function Z(C){if(n.enabled!==!1){switch(C.preventDefault(),C.touches.length){case 1:switch(n.touches.ONE){case $n.ROTATE:if(n.enableRotate===!1)return;re(C),a=s.TOUCH_ROTATE;break;case $n.PAN:if(n.enablePan===!1)return;ve(C),a=s.TOUCH_PAN;break;default:a=s.NONE}break;case 2:switch(n.touches.TWO){case $n.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;xe(C),a=s.TOUCH_DOLLY_PAN;break;case $n.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;_e(C),a=s.TOUCH_DOLLY_ROTATE;break;default:a=s.NONE}break;default:a=s.NONE}a!==s.NONE&&n.dispatchEvent(r)}}function j(C){if(n.enabled!==!1)switch(C.preventDefault(),C.stopPropagation(),a){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;Q(C),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;k(C),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;B(C),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;D(C),n.update();break;default:a=s.NONE}}function me(C){n.enabled!==!1&&(n.dispatchEvent(o),a=s.NONE)}function we(C){n.enabled!==!1&&C.preventDefault()}n.domElement.addEventListener("contextmenu",we,!1),n.domElement.addEventListener("mousedown",L,!1),n.domElement.addEventListener("wheel",M,!1),n.domElement.addEventListener("touchstart",Z,!1),n.domElement.addEventListener("touchend",me,!1),n.domElement.addEventListener("touchmove",j,!1),n.domElement.addEventListener("keydown",E,!1),n.domElement.tabIndex===-1&&(n.domElement.tabIndex=0),this.update()};Ao.prototype=Object.create(sn.prototype);Ao.prototype.constructor=Ao;var Vc=function(e,t){Ao.call(this,e,t),this.mouseButtons.LEFT=Jn.PAN,this.mouseButtons.RIGHT=Jn.ROTATE,this.touches.ONE=$n.PAN,this.touches.TWO=$n.DOLLY_ROTATE};Vc.prototype=Object.create(sn.prototype);Vc.prototype.constructor=Vc;var Wc=function(e,t){t===void 0&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),te.call(this),this.visible=!1,this.domElement=t;var n=new jc;this.add(n);var i=new qc;this.add(i);var r=this;re("camera",e),re("object",void 0),re("enabled",!0),re("axis",null),re("mode","translate"),re("translationSnap",null),re("rotationSnap",null),re("scaleSnap",null),re("space","world"),re("size",1),re("dragging",!1),re("showX",!0),re("showY",!0),re("showZ",!0);var o={type:"change"},s={type:"mouseDown"},a={type:"mouseUp",mode:r.mode},c={type:"objectChange"},l=new da;function h(k,I,B){for(var D=I.intersectObject(k,!0),L=0;L<D.length;L++)if(D[L].object.visible||B)return D[L];return!1}var u=new x,f=new x,d=new Ye,p={X:new x(1,0,0),Y:new x(0,1,0),Z:new x(0,0,1)},g=new x,v=new x,m=new x,y=new x,_=new x,w=new x,b=0,T=new x,A=new Ye,N=new x,P=new x,Y=new Ye,O=new Ye,U=new x,q=new x,z=new Ye,G=new x,K=new x,pe=new Ye,ne=new Ye,oe=new x,se=new x,de=new x,Ge=new Ye,Be=new x;re("worldPosition",K),re("worldPositionStart",q),re("worldQuaternion",pe),re("worldQuaternionStart",z),re("cameraPosition",T),re("cameraQuaternion",A),re("pointStart",g),re("pointEnd",v),re("rotationAxis",y),re("rotationAngle",b),re("eye",se),t.addEventListener("mousedown",xe,!1),t.addEventListener("touchstart",xe,!1),t.addEventListener("mousemove",W,!1),t.addEventListener("touchmove",W,!1),t.addEventListener("touchmove",_e,!1),document.addEventListener("mouseup",Q,!1),t.addEventListener("touchend",Q,!1),t.addEventListener("touchcancel",Q,!1),t.addEventListener("touchleave",Q,!1),this.dispose=function(){t.removeEventListener("mousedown",xe),t.removeEventListener("touchstart",xe),t.removeEventListener("mousemove",W),document.removeEventListener("mousemove",_e),t.removeEventListener("touchmove",W),t.removeEventListener("touchmove",_e),document.removeEventListener("mouseup",Q),t.removeEventListener("touchend",Q),t.removeEventListener("touchcancel",Q),t.removeEventListener("touchleave",Q),this.traverse(function(k){k.geometry&&k.geometry.dispose(),k.material&&k.material.dispose()})},this.attach=function(k){return this.object=k,this.visible=!0,this},this.detach=function(){return this.object=void 0,this.visible=!1,this.axis=null,this};function re(k,I){var B=I;Object.defineProperty(r,k,{get:function(){return B!==void 0?B:I},set:function(D){B!==D&&(B=D,i[k]=D,n[k]=D,r.dispatchEvent({type:k+"-changed",value:D}),r.dispatchEvent(o))}}),r[k]=I,i[k]=I,n[k]=I}this.updateMatrixWorld=function(){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(P,Y,U),this.object.matrixWorld.decompose(K,pe,oe),O.copy(Y).inverse(),ne.copy(pe).inverse()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(T,A,N),se.copy(T).sub(K).normalize(),te.prototype.updateMatrixWorld.call(this)},this.pointerHover=function(k){if(!(this.object===void 0||this.dragging===!0||k.button!==void 0&&k.button!==0)){l.setFromCamera(k,this.camera);var I=h(n.picker[this.mode],l);I?this.axis=I.object.name:this.axis=null}},this.pointerDown=function(k){if(!(this.object===void 0||this.dragging===!0||k.button!==void 0&&k.button!==0)&&(k.button===0||k.button===void 0)&&this.axis!==null){l.setFromCamera(k,this.camera);var I=h(i,l,!0);if(I){var B=this.space;if(this.mode==="scale"?B="local":(this.axis==="E"||this.axis==="XYZE"||this.axis==="XYZ")&&(B="world"),B==="local"&&this.mode==="rotate"){var D=this.rotationSnap;this.axis==="X"&&D&&(this.object.rotation.x=Math.round(this.object.rotation.x/D)*D),this.axis==="Y"&&D&&(this.object.rotation.y=Math.round(this.object.rotation.y/D)*D),this.axis==="Z"&&D&&(this.object.rotation.z=Math.round(this.object.rotation.z/D)*D)}this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),de.copy(this.object.position),Ge.copy(this.object.quaternion),Be.copy(this.object.scale),this.object.matrixWorld.decompose(q,z,G),g.copy(I.point).sub(q)}this.dragging=!0,s.mode=this.mode,this.dispatchEvent(s)}},this.pointerMove=function(k){var I=this.axis,B=this.mode,D=this.object,L=this.space;if(B==="scale"?L="local":(I==="E"||I==="XYZE"||I==="XYZ")&&(L="world"),!(D===void 0||I===null||this.dragging===!1||k.button!==void 0&&k.button!==0)){l.setFromCamera(k,this.camera);var J=h(i,l,!0);if(J){if(v.copy(J.point).sub(q),B==="translate")m.copy(v).sub(g),L==="local"&&I!=="XYZ"&&m.applyQuaternion(ne),I.indexOf("X")===-1&&(m.x=0),I.indexOf("Y")===-1&&(m.y=0),I.indexOf("Z")===-1&&(m.z=0),L==="local"&&I!=="XYZ"?m.applyQuaternion(Ge).divide(U):m.applyQuaternion(O).divide(U),D.position.copy(m).add(de),this.translationSnap&&(L==="local"&&(D.position.applyQuaternion(d.copy(Ge).inverse()),I.search("X")!==-1&&(D.position.x=Math.round(D.position.x/this.translationSnap)*this.translationSnap),I.search("Y")!==-1&&(D.position.y=Math.round(D.position.y/this.translationSnap)*this.translationSnap),I.search("Z")!==-1&&(D.position.z=Math.round(D.position.z/this.translationSnap)*this.translationSnap),D.position.applyQuaternion(Ge)),L==="world"&&(D.parent&&D.position.add(u.setFromMatrixPosition(D.parent.matrixWorld)),I.search("X")!==-1&&(D.position.x=Math.round(D.position.x/this.translationSnap)*this.translationSnap),I.search("Y")!==-1&&(D.position.y=Math.round(D.position.y/this.translationSnap)*this.translationSnap),I.search("Z")!==-1&&(D.position.z=Math.round(D.position.z/this.translationSnap)*this.translationSnap),D.parent&&D.position.sub(u.setFromMatrixPosition(D.parent.matrixWorld))));else if(B==="scale"){if(I.search("XYZ")!==-1){var fe=v.length()/g.length();v.dot(g)<0&&(fe*=-1),f.set(fe,fe,fe)}else u.copy(g),f.copy(v),u.applyQuaternion(ne),f.applyQuaternion(ne),f.divide(u),I.search("X")===-1&&(f.x=1),I.search("Y")===-1&&(f.y=1),I.search("Z")===-1&&(f.z=1);D.scale.copy(Be).multiply(f),this.scaleSnap&&(I.search("X")!==-1&&(D.scale.x=Math.round(D.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),I.search("Y")!==-1&&(D.scale.y=Math.round(D.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),I.search("Z")!==-1&&(D.scale.z=Math.round(D.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(B==="rotate"){m.copy(v).sub(g);var M=20/K.distanceTo(u.setFromMatrixPosition(this.camera.matrixWorld));I==="E"?(y.copy(se),b=v.angleTo(g),_.copy(g).normalize(),w.copy(v).normalize(),b*=w.cross(_).dot(se)<0?1:-1):I==="XYZE"?(y.copy(m).cross(se).normalize(),b=m.dot(u.copy(y).cross(this.eye))*M):(I==="X"||I==="Y"||I==="Z")&&(y.copy(p[I]),u.copy(p[I]),L==="local"&&u.applyQuaternion(pe),b=m.dot(u.cross(se).normalize())*M),this.rotationSnap&&(b=Math.round(b/this.rotationSnap)*this.rotationSnap),this.rotationAngle=b,L==="local"&&I!=="E"&&I!=="XYZE"?(D.quaternion.copy(Ge),D.quaternion.multiply(d.setFromAxisAngle(y,b)).normalize()):(y.applyQuaternion(O),D.quaternion.copy(d.setFromAxisAngle(y,b)),D.quaternion.multiply(Ge).normalize())}this.dispatchEvent(o),this.dispatchEvent(c)}}},this.pointerUp=function(k){k.button!==void 0&&k.button!==0||(this.dragging&&this.axis!==null&&(a.mode=this.mode,this.dispatchEvent(a)),this.dragging=!1,k.button===void 0&&(this.axis=null))};function ve(k){if(document.pointerLockElement)return{x:0,y:0,button:k.button};var I=k.changedTouches?k.changedTouches[0]:k,B=t.getBoundingClientRect();return{x:(I.clientX-B.left)/B.width*2-1,y:-(I.clientY-B.top)/B.height*2+1,button:k.button}}function W(k){r.enabled&&r.pointerHover(ve(k))}function xe(k){r.enabled&&(document.addEventListener("mousemove",_e,!1),r.pointerHover(ve(k)),r.pointerDown(ve(k)))}function _e(k){r.enabled&&r.pointerMove(ve(k))}function Q(k){r.enabled&&(document.removeEventListener("mousemove",_e,!1),r.pointerUp(ve(k)))}this.getMode=function(){return r.mode},this.setMode=function(k){r.mode=k},this.setTranslationSnap=function(k){r.translationSnap=k},this.setRotationSnap=function(k){r.rotationSnap=k},this.setScaleSnap=function(k){r.scaleSnap=k},this.setSize=function(k){r.size=k},this.setSpace=function(k){r.space=k},this.update=function(){console.warn("THREE.TransformControls: update function has no more functionality and therefore has been deprecated.")}};Wc.prototype=Object.assign(Object.create(te.prototype),{constructor:Wc,isTransformControls:!0});var jc=function(){te.call(this),this.type="TransformControlsGizmo";var e=new Ot({depthTest:!1,depthWrite:!1,transparent:!0,side:ri,fog:!1}),t=new nt({depthTest:!1,depthWrite:!1,transparent:!0,linewidth:1,fog:!1}),n=e.clone();n.opacity=.15;var i=e.clone();i.opacity=.33;var r=e.clone();r.color.set(16711680);var o=e.clone();o.color.set(65280);var s=e.clone();s.color.set(255);var a=e.clone();a.opacity=.25;var c=a.clone();c.color.set(16776960);var l=a.clone();l.color.set(65535);var h=a.clone();h.color.set(16711935);var u=e.clone();u.color.set(16776960);var f=t.clone();f.color.set(16711680);var d=t.clone();d.color.set(65280);var p=t.clone();p.color.set(255);var g=t.clone();g.color.set(65535);var v=t.clone();v.color.set(16711935);var m=t.clone();m.color.set(16776960);var y=t.clone();y.color.set(7895160);var _=m.clone();_.opacity=.25;var w=new gt(0,.05,.2,12,1,!1),b=new Ct(.125,.125,.125),T=new he;T.setAttribute("position",new ie([0,0,0,1,0,0],3));var A=function(k,I){for(var B=new he,D=[],L=0;L<=64*I;++L)D.push(0,Math.cos(L/32*Math.PI)*k,Math.sin(L/32*Math.PI)*k);return B.setAttribute("position",new ie(D,3)),B},N=function(){var k=new he;return k.setAttribute("position",new ie([0,0,0,1,1,1],3)),k},P={X:[[new ee(w,r),[1,0,0],[0,0,-Math.PI/2],null,"fwd"],[new ee(w,r),[1,0,0],[0,0,Math.PI/2],null,"bwd"],[new De(T,f)]],Y:[[new ee(w,o),[0,1,0],null,null,"fwd"],[new ee(w,o),[0,1,0],[Math.PI,0,0],null,"bwd"],[new De(T,d),null,[0,0,Math.PI/2]]],Z:[[new ee(w,s),[0,0,1],[Math.PI/2,0,0],null,"fwd"],[new ee(w,s),[0,0,1],[-Math.PI/2,0,0],null,"bwd"],[new De(T,p),null,[0,-Math.PI/2,0]]],XYZ:[[new ee(new zt(.1,0),a.clone()),[0,0,0],[0,0,0]]],XY:[[new ee(new Rt(.295,.295),c.clone()),[.15,.15,0]],[new De(T,m),[.18,.3,0],null,[.125,1,1]],[new De(T,m),[.3,.18,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new ee(new Rt(.295,.295),l.clone()),[0,.15,.15],[0,Math.PI/2,0]],[new De(T,g),[0,.18,.3],[0,0,Math.PI/2],[.125,1,1]],[new De(T,g),[0,.3,.18],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new ee(new Rt(.295,.295),h.clone()),[.15,0,.15],[-Math.PI/2,0,0]],[new De(T,v),[.18,0,.3],null,[.125,1,1]],[new De(T,v),[.3,0,.18],[0,-Math.PI/2,0],[.125,1,1]]]},Y={X:[[new ee(new gt(.2,0,1,4,1,!1),n),[.6,0,0],[0,0,-Math.PI/2]]],Y:[[new ee(new gt(.2,0,1,4,1,!1),n),[0,.6,0]]],Z:[[new ee(new gt(.2,0,1,4,1,!1),n),[0,0,.6],[Math.PI/2,0,0]]],XYZ:[[new ee(new zt(.2,0),n)]],XY:[[new ee(new Rt(.4,.4),n),[.2,.2,0]]],YZ:[[new ee(new Rt(.4,.4),n),[0,.2,.2],[0,Math.PI/2,0]]],XZ:[[new ee(new Rt(.4,.4),n),[.2,0,.2],[-Math.PI/2,0,0]]]},O={START:[[new ee(new zt(.01,2),i),null,null,null,"helper"]],END:[[new ee(new zt(.01,2),i),null,null,null,"helper"]],DELTA:[[new De(N(),i),null,null,null,"helper"]],X:[[new De(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new De(T,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new De(T,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},U={X:[[new De(A(1,.5),f)],[new ee(new zt(.04,0),r),[0,0,.99],null,[1,3,1]]],Y:[[new De(A(1,.5),d),null,[0,0,-Math.PI/2]],[new ee(new zt(.04,0),o),[0,0,.99],null,[3,1,1]]],Z:[[new De(A(1,.5),p),null,[0,Math.PI/2,0]],[new ee(new zt(.04,0),s),[.99,0,0],null,[1,3,1]]],E:[[new De(A(1.25,1),_),null,[0,Math.PI/2,0]],[new ee(new gt(.03,0,.15,4,1,!1),_),[1.17,0,0],[0,0,-Math.PI/2],[1,1,.001]],[new ee(new gt(.03,0,.15,4,1,!1),_),[-1.17,0,0],[0,0,Math.PI/2],[1,1,.001]],[new ee(new gt(.03,0,.15,4,1,!1),_),[0,-1.17,0],[Math.PI,0,0],[1,1,.001]],[new ee(new gt(.03,0,.15,4,1,!1),_),[0,1.17,0],[0,0,0],[1,1,.001]]],XYZE:[[new De(A(1,1),y),null,[0,Math.PI/2,0]]]},q={AXIS:[[new De(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},z={X:[[new ee(new In(1,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new ee(new In(1,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new ee(new In(1,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new ee(new In(1.25,.1,2,24),n)]],XYZE:[[new ee(new Ai(.7,10,8),n)]]},G={X:[[new ee(b,r),[.8,0,0],[0,0,-Math.PI/2]],[new De(T,f),null,null,[.8,1,1]]],Y:[[new ee(b,o),[0,.8,0]],[new De(T,d),null,[0,0,Math.PI/2],[.8,1,1]]],Z:[[new ee(b,s),[0,0,.8],[Math.PI/2,0,0]],[new De(T,p),null,[0,-Math.PI/2,0],[.8,1,1]]],XY:[[new ee(b,c),[.85,.85,0],null,[2,2,.2]],[new De(T,m),[.855,.98,0],null,[.125,1,1]],[new De(T,m),[.98,.855,0],[0,0,Math.PI/2],[.125,1,1]]],YZ:[[new ee(b,l),[0,.85,.85],null,[.2,2,2]],[new De(T,g),[0,.855,.98],[0,0,Math.PI/2],[.125,1,1]],[new De(T,g),[0,.98,.855],[0,-Math.PI/2,0],[.125,1,1]]],XZ:[[new ee(b,h),[.85,0,.85],null,[2,.2,2]],[new De(T,v),[.855,0,.98],null,[.125,1,1]],[new De(T,v),[.98,0,.855],[0,-Math.PI/2,0],[.125,1,1]]],XYZX:[[new ee(new Ct(.125,.125,.125),a.clone()),[1.1,0,0]]],XYZY:[[new ee(new Ct(.125,.125,.125),a.clone()),[0,1.1,0]]],XYZZ:[[new ee(new Ct(.125,.125,.125),a.clone()),[0,0,1.1]]]},K={X:[[new ee(new gt(.2,0,.8,4,1,!1),n),[.5,0,0],[0,0,-Math.PI/2]]],Y:[[new ee(new gt(.2,0,.8,4,1,!1),n),[0,.5,0]]],Z:[[new ee(new gt(.2,0,.8,4,1,!1),n),[0,0,.5],[Math.PI/2,0,0]]],XY:[[new ee(b,n),[.85,.85,0],null,[3,3,.2]]],YZ:[[new ee(b,n),[0,.85,.85],null,[.2,3,3]]],XZ:[[new ee(b,n),[.85,0,.85],null,[3,.2,3]]],XYZX:[[new ee(new Ct(.2,.2,.2),n),[1.1,0,0]]],XYZY:[[new ee(new Ct(.2,.2,.2),n),[0,1.1,0]]],XYZZ:[[new ee(new Ct(.2,.2,.2),n),[0,0,1.1]]]},pe={X:[[new De(T,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new De(T,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new De(T,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},ne=function(k){var I=new te;for(var B in k)for(var D=k[B].length;D--;){var L=k[B][D][0].clone(),J=k[B][D][1],fe=k[B][D][2],M=k[B][D][3],E=k[B][D][4];L.name=B,L.tag=E,J&&L.position.set(J[0],J[1],J[2]),fe&&L.rotation.set(fe[0],fe[1],fe[2]),M&&L.scale.set(M[0],M[1],M[2]),L.updateMatrix();var Z=L.geometry.clone();Z.applyMatrix4(L.matrix),L.geometry=Z,L.renderOrder=1/0,L.position.set(0,0,0),L.rotation.set(0,0,0),L.scale.set(1,1,1),I.add(L)}return I},oe=new x(0,0,0),se=new Pi,de=new x(0,1,0),Ge=new x(0,0,0),Be=new Fe,re=new Ye,ve=new Ye,W=new Ye,xe=new x(1,0,0),_e=new x(0,1,0),Q=new x(0,0,1);this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=ne(P)),this.add(this.gizmo.rotate=ne(U)),this.add(this.gizmo.scale=ne(G)),this.add(this.picker.translate=ne(Y)),this.add(this.picker.rotate=ne(z)),this.add(this.picker.scale=ne(K)),this.add(this.helper.translate=ne(O)),this.add(this.helper.rotate=ne(q)),this.add(this.helper.scale=ne(pe)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1,this.updateMatrixWorld=function(){var k=this.space;this.mode==="scale"&&(k="local");var I=k==="local"?this.worldQuaternion:W;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";var B=[];B=B.concat(this.picker[this.mode].children),B=B.concat(this.gizmo[this.mode].children),B=B.concat(this.helper[this.mode].children);for(var D=0;D<B.length;D++){var L=B[D];L.visible=!0,L.rotation.set(0,0,0),L.position.copy(this.worldPosition);var J;if(this.camera.isOrthographicCamera?J=(this.camera.top-this.camera.bottom)/this.camera.zoom:J=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),L.scale.set(1,1,1).multiplyScalar(J*this.size/7),L.tag==="helper"){L.visible=!1,L.name==="AXIS"?(L.position.copy(this.worldPositionStart),L.visible=!!this.axis,this.axis==="X"&&(re.setFromEuler(se.set(0,0,0)),L.quaternion.copy(I).multiply(re),Math.abs(de.copy(xe).applyQuaternion(I).dot(this.eye))>.9&&(L.visible=!1)),this.axis==="Y"&&(re.setFromEuler(se.set(0,0,Math.PI/2)),L.quaternion.copy(I).multiply(re),Math.abs(de.copy(_e).applyQuaternion(I).dot(this.eye))>.9&&(L.visible=!1)),this.axis==="Z"&&(re.setFromEuler(se.set(0,Math.PI/2,0)),L.quaternion.copy(I).multiply(re),Math.abs(de.copy(Q).applyQuaternion(I).dot(this.eye))>.9&&(L.visible=!1)),this.axis==="XYZE"&&(re.setFromEuler(se.set(0,Math.PI/2,0)),de.copy(this.rotationAxis),L.quaternion.setFromRotationMatrix(Be.lookAt(Ge,de,_e)),L.quaternion.multiply(re),L.visible=this.dragging),this.axis==="E"&&(L.visible=!1)):L.name==="START"?(L.position.copy(this.worldPositionStart),L.visible=this.dragging):L.name==="END"?(L.position.copy(this.worldPosition),L.visible=this.dragging):L.name==="DELTA"?(L.position.copy(this.worldPositionStart),L.quaternion.copy(this.worldQuaternionStart),oe.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),oe.applyQuaternion(this.worldQuaternionStart.clone().inverse()),L.scale.copy(oe),L.visible=this.dragging):(L.quaternion.copy(I),this.dragging?L.position.copy(this.worldPositionStart):L.position.copy(this.worldPosition),this.axis&&(L.visible=this.axis.search(L.name)!==-1));continue}if(L.quaternion.copy(I),this.mode==="translate"||this.mode==="scale"){var fe=.99,M=.2,E=0;(L.name==="X"||L.name==="XYZX")&&Math.abs(de.copy(xe).applyQuaternion(I).dot(this.eye))>fe&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),(L.name==="Y"||L.name==="XYZY")&&Math.abs(de.copy(_e).applyQuaternion(I).dot(this.eye))>fe&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),(L.name==="Z"||L.name==="XYZZ")&&Math.abs(de.copy(Q).applyQuaternion(I).dot(this.eye))>fe&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),L.name==="XY"&&Math.abs(de.copy(Q).applyQuaternion(I).dot(this.eye))<M&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),L.name==="YZ"&&Math.abs(de.copy(xe).applyQuaternion(I).dot(this.eye))<M&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),L.name==="XZ"&&Math.abs(de.copy(_e).applyQuaternion(I).dot(this.eye))<M&&(L.scale.set(1e-10,1e-10,1e-10),L.visible=!1),L.name.search("X")!==-1&&(de.copy(xe).applyQuaternion(I).dot(this.eye)<E?L.tag==="fwd"?L.visible=!1:L.scale.x*=-1:L.tag==="bwd"&&(L.visible=!1)),L.name.search("Y")!==-1&&(de.copy(_e).applyQuaternion(I).dot(this.eye)<E?L.tag==="fwd"?L.visible=!1:L.scale.y*=-1:L.tag==="bwd"&&(L.visible=!1)),L.name.search("Z")!==-1&&(de.copy(Q).applyQuaternion(I).dot(this.eye)<E?L.tag==="fwd"?L.visible=!1:L.scale.z*=-1:L.tag==="bwd"&&(L.visible=!1))}else this.mode==="rotate"&&(ve.copy(I),de.copy(this.eye).applyQuaternion(re.copy(I).inverse()),L.name.search("E")!==-1&&L.quaternion.setFromRotationMatrix(Be.lookAt(this.eye,Ge,_e)),L.name==="X"&&(re.setFromAxisAngle(xe,Math.atan2(-de.y,de.z)),re.multiplyQuaternions(ve,re),L.quaternion.copy(re)),L.name==="Y"&&(re.setFromAxisAngle(_e,Math.atan2(de.x,de.z)),re.multiplyQuaternions(ve,re),L.quaternion.copy(re)),L.name==="Z"&&(re.setFromAxisAngle(Q,Math.atan2(de.y,de.x)),re.multiplyQuaternions(ve,re),L.quaternion.copy(re)));L.visible=L.visible&&(L.name.indexOf("X")===-1||this.showX),L.visible=L.visible&&(L.name.indexOf("Y")===-1||this.showY),L.visible=L.visible&&(L.name.indexOf("Z")===-1||this.showZ),L.visible=L.visible&&(L.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),L.material._opacity=L.material._opacity||L.material.opacity,L.material._color=L.material._color||L.material.color.clone(),L.material.color.copy(L.material._color),L.material.opacity=L.material._opacity,this.enabled?this.axis&&(L.name===this.axis?(L.material.opacity=1,L.material.color.lerp(new ce(1,1,1),.5)):this.axis.split("").some(function(Z){return L.name===Z})?(L.material.opacity=1,L.material.color.lerp(new ce(1,1,1),.5)):(L.material.opacity*=.25,L.material.color.lerp(new ce(1,1,1),.5))):(L.material.opacity*=.5,L.material.color.lerp(new ce(1,1,1),.5))}te.prototype.updateMatrixWorld.call(this)}};jc.prototype=Object.assign(Object.create(te.prototype),{constructor:jc,isTransformControlsGizmo:!0});var qc=function(){ee.call(this,new Rt(1e5,1e5,2,2),new Ot({visible:!1,wireframe:!0,side:ri,transparent:!0,opacity:.1})),this.type="TransformControlsPlane";var e=new x(1,0,0),t=new x(0,1,0),n=new x(0,0,1),i=new x,r=new x,o=new x,s=new Fe,a=new Ye;this.updateMatrixWorld=function(){var c=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(c="local"),e.set(1,0,0).applyQuaternion(c==="local"?this.worldQuaternion:a),t.set(0,1,0).applyQuaternion(c==="local"?this.worldQuaternion:a),n.set(0,0,1).applyQuaternion(c==="local"?this.worldQuaternion:a),o.copy(t),this.mode){case"translate":case"scale":switch(this.axis){case"X":o.copy(this.eye).cross(e),r.copy(e).cross(o);break;case"Y":o.copy(this.eye).cross(t),r.copy(t).cross(o);break;case"Z":o.copy(this.eye).cross(n),r.copy(n).cross(o);break;case"XY":r.copy(n);break;case"YZ":r.copy(e);break;case"XZ":o.copy(n),r.copy(t);break;case"XYZ":case"E":r.set(0,0,0);break}break;case"rotate":default:r.set(0,0,0)}r.length()===0?this.quaternion.copy(this.cameraQuaternion):(s.lookAt(i.set(0,0,0),r,o),this.quaternion.setFromRotationMatrix(s)),te.prototype.updateMatrixWorld.call(this)}};qc.prototype=Object.assign(Object.create(ee.prototype),{constructor:qc,isTransformControlsPlane:!0});var Ry=function(){var e=/^[og]\s*(.+)?/,t=/^mtllib /,n=/^usemtl /,i=/^usemap /,r=new x,o=new x,s=new x,a=new x,c=new x;function l(){var u={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(f,d){if(this.object&&this.object.fromDeclaration===!1){this.object.name=f,this.object.fromDeclaration=d!==!1;return}var p=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:f||"",fromDeclaration:d!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasNormalIndices:!1,hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(v,m){var y=this._finalize(!1);y&&(y.inherited||y.groupCount<=0)&&this.materials.splice(y.index,1);var _={index:this.materials.length,name:v||"",mtllib:Array.isArray(m)&&m.length>0?m[m.length-1]:"",smooth:y!==void 0?y.smooth:this.smooth,groupStart:y!==void 0?y.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(w){var b={index:typeof w=="number"?w:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return b.clone=this.clone.bind(b),b}};return this.materials.push(_),_},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(v){var m=this.currentMaterial();if(m&&m.groupEnd===-1&&(m.groupEnd=this.geometry.vertices.length/3,m.groupCount=m.groupEnd-m.groupStart,m.inherited=!1),v&&this.materials.length>1)for(var y=this.materials.length-1;y>=0;y--)this.materials[y].groupCount<=0&&this.materials.splice(y,1);return v&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),m}},p&&p.name&&typeof p.clone=="function"){var g=p.clone(0);g.inherited=!0,this.object.materials.push(g)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(f,d){var p=parseInt(f,10);return(p>=0?p-1:p+d/3)*3},parseNormalIndex:function(f,d){var p=parseInt(f,10);return(p>=0?p-1:p+d/3)*3},parseUVIndex:function(f,d){var p=parseInt(f,10);return(p>=0?p-1:p+d/2)*2},addVertex:function(f,d,p){var g=this.vertices,v=this.object.geometry.vertices;v.push(g[f+0],g[f+1],g[f+2]),v.push(g[d+0],g[d+1],g[d+2]),v.push(g[p+0],g[p+1],g[p+2])},addVertexPoint:function(f){var d=this.vertices,p=this.object.geometry.vertices;p.push(d[f+0],d[f+1],d[f+2])},addVertexLine:function(f){var d=this.vertices,p=this.object.geometry.vertices;p.push(d[f+0],d[f+1],d[f+2])},addNormal:function(f,d,p){var g=this.normals,v=this.object.geometry.normals;v.push(g[f+0],g[f+1],g[f+2]),v.push(g[d+0],g[d+1],g[d+2]),v.push(g[p+0],g[p+1],g[p+2])},addFaceNormal:function(f,d,p){var g=this.vertices,v=this.object.geometry.normals;r.fromArray(g,f),o.fromArray(g,d),s.fromArray(g,p),c.subVectors(s,o),a.subVectors(r,o),c.cross(a),c.normalize(),v.push(c.x,c.y,c.z),v.push(c.x,c.y,c.z),v.push(c.x,c.y,c.z)},addColor:function(f,d,p){var g=this.colors,v=this.object.geometry.colors;g[f]!==void 0&&v.push(g[f+0],g[f+1],g[f+2]),g[d]!==void 0&&v.push(g[d+0],g[d+1],g[d+2]),g[p]!==void 0&&v.push(g[p+0],g[p+1],g[p+2])},addUV:function(f,d,p){var g=this.uvs,v=this.object.geometry.uvs;v.push(g[f+0],g[f+1]),v.push(g[d+0],g[d+1]),v.push(g[p+0],g[p+1])},addDefaultUV:function(){var f=this.object.geometry.uvs;f.push(0,0),f.push(0,0),f.push(0,0)},addUVLine:function(f){var d=this.uvs,p=this.object.geometry.uvs;p.push(d[f+0],d[f+1])},addFace:function(f,d,p,g,v,m,y,_,w){var b=this.vertices.length,T=this.parseVertexIndex(f,b),A=this.parseVertexIndex(d,b),N=this.parseVertexIndex(p,b);if(this.addVertex(T,A,N),this.addColor(T,A,N),y!==void 0&&y!==""){var P=this.normals.length;T=this.parseNormalIndex(y,P),A=this.parseNormalIndex(_,P),N=this.parseNormalIndex(w,P),this.addNormal(T,A,N),this.object.geometry.hasNormalIndices=!0}else this.addFaceNormal(T,A,N);if(g!==void 0&&g!==""){var Y=this.uvs.length;T=this.parseUVIndex(g,Y),A=this.parseUVIndex(v,Y),N=this.parseUVIndex(m,Y),this.addUV(T,A,N),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(f){this.object.geometry.type="Points";for(var d=this.vertices.length,p=0,g=f.length;p<g;p++)this.addVertexPoint(this.parseVertexIndex(f[p],d))},addLineGeometry:function(f,d){this.object.geometry.type="Line";for(var p=this.vertices.length,g=this.uvs.length,v=0,m=f.length;v<m;v++)this.addVertexLine(this.parseVertexIndex(f[v],p));for(var y=0,m=d.length;y<m;y++)this.addUVLine(this.parseUVIndex(d[y],g))}};return u.startObject("",!1),u}function h(u){qe.call(this,u),this.materials=null}return h.prototype=Object.assign(Object.create(qe.prototype),{constructor:h,load:function(u,f,d,p){var g=this,v=new Zt(g.manager);v.setPath(this.path),v.load(u,function(m){try{f(g.parse(m))}catch(y){p?p(y):console.error(y),g.manager.itemError(u)}},d,p)},setMaterials:function(u){return this.materials=u,this},parse:function(u){var f=new l;u.indexOf(`\r
`)!==-1&&(u=u.replace(/\r\n/g,`
`)),u.indexOf(`\\
`)!==-1&&(u=u.replace(/\\\n/g,""));for(var d=u.split(`
`),p="",g="",v=0,m=[],y=typeof"".trimLeft=="function",_=0,w=d.length;_<w;_++)if(p=d[_],p=y?p.trimLeft():p.trim(),v=p.length,v!==0&&(g=p.charAt(0),g!=="#"))if(g==="v"){var b=p.split(/\s+/);switch(b[0]){case"v":f.vertices.push(parseFloat(b[1]),parseFloat(b[2]),parseFloat(b[3])),b.length>=7?f.colors.push(parseFloat(b[4]),parseFloat(b[5]),parseFloat(b[6])):f.colors.push(void 0,void 0,void 0);break;case"vn":f.normals.push(parseFloat(b[1]),parseFloat(b[2]),parseFloat(b[3]));break;case"vt":f.uvs.push(parseFloat(b[1]),parseFloat(b[2]));break}}else if(g==="f"){for(var T=p.substr(1).trim(),A=T.split(/\s+/),N=[],P=0,Y=A.length;P<Y;P++){var O=A[P];if(O.length>0){var U=O.split("/");N.push(U)}}for(var q=N[0],P=1,Y=N.length-1;P<Y;P++){var z=N[P],G=N[P+1];f.addFace(q[0],z[0],G[0],q[1],z[1],G[1],q[2],z[2],G[2])}}else if(g==="l"){var K=p.substring(1).trim().split(" "),pe=[],ne=[];if(p.indexOf("/")===-1)pe=K;else for(var oe=0,se=K.length;oe<se;oe++){var de=K[oe].split("/");de[0]!==""&&pe.push(de[0]),de[1]!==""&&ne.push(de[1])}f.addLineGeometry(pe,ne)}else if(g==="p"){var T=p.substr(1).trim(),Ge=T.split(" ");f.addPointGeometry(Ge)}else if((m=e.exec(p))!==null){var Be=(" "+m[0].substr(1).trim()).substr(1);f.startObject(Be)}else if(n.test(p))f.object.startMaterial(p.substring(7).trim(),f.materialLibraries);else if(t.test(p))f.materialLibraries.push(p.substring(7).trim());else if(i.test(p))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(g==="s"){if(m=p.split(" "),m.length>1){var re=m[1].trim().toLowerCase();f.object.smooth=re!=="0"&&re!=="off"}else f.object.smooth=!0;var ve=f.object.currentMaterial();ve&&(ve.smooth=f.object.smooth)}else{if(p==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+p+'"')}f.finalize();var W=new lr;W.materialLibraries=[].concat(f.materialLibraries);for(var _=0,w=f.objects.length;_<w;_++){var xe=f.objects[_],_e=xe.geometry,Q=xe.materials,k=_e.type==="Line",I=_e.type==="Points",B=!1;if(_e.vertices.length!==0){var D=new he;D.setAttribute("position",new ie(_e.vertices,3)),_e.hasNormalIndices===!0&&D.setAttribute("normal",new ie(_e.normals,3)),_e.colors.length>0&&(B=!0,D.setAttribute("color",new ie(_e.colors,3))),_e.hasUVIndices===!0&&D.setAttribute("uv",new ie(_e.uvs,2));for(var L=[],J=0,fe=Q.length;J<fe;J++){var M=Q[J],E=M.name+"_"+M.smooth+"_"+B,ve=f.materials[E];if(this.materials!==null){if(ve=this.materials.create(M.name),k&&ve&&!(ve instanceof nt)){var Z=new nt;Te.prototype.copy.call(Z,ve),Z.color.copy(ve.color),ve=Z}else if(I&&ve&&!(ve instanceof vn)){var j=new vn({size:10,sizeAttenuation:!1});Te.prototype.copy.call(j,ve),j.color.copy(ve.color),j.map=ve.map,ve=j}}ve===void 0&&(k?ve=new nt:I?ve=new vn({size:1,sizeAttenuation:!1}):ve=new Bn,ve.name=M.name,ve.flatShading=!M.smooth,ve.vertexColors=B,f.materials[E]=ve),L.push(ve)}var me;if(L.length>1){for(var J=0,fe=Q.length;J<fe;J++){var M=Q[J];D.addGroup(M.groupStart,M.groupCount,J)}k?me=new lt(D,L):I?me=new no(D,L):me=new ee(D,L)}else k?me=new lt(D,L[0]):I?me=new no(D,L[0]):me=new ee(D,L[0]);me.name=xe.name,W.add(me)}}return W}}),h}(),Xc=function(e){Js.call(this,e)};Xc.prototype=Object.assign(Object.create(Js.prototype),{constructor:Xc,parse:function(e,t){var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},i=542327876,r=131072,o=512,s=1024,a=2048,c=4096,l=8192,h=16384,u=32768,f=4;function d(D){return D.charCodeAt(0)+(D.charCodeAt(1)<<8)+(D.charCodeAt(2)<<16)+(D.charCodeAt(3)<<24)}function p(D){return String.fromCharCode(D&255,D>>8&255,D>>16&255,D>>24&255)}function g(D,L,J,fe){for(var M=J*fe*4,E=new Uint8Array(D,L,M),Z=new Uint8Array(M),j=0,me=0,we=0;we<fe;we++)for(var C=0;C<J;C++){var ae=E[me];me++;var be=E[me];me++;var ge=E[me];me++;var He=E[me];me++,Z[j]=ge,j++,Z[j]=be,j++,Z[j]=ae,j++,Z[j]=He,j++}return Z}var v=d("DXT1"),m=d("DXT3"),y=d("DXT5"),_=d("ETC1"),w=31,b=0,T=1,A=2,N=3,P=4,Y=7,O=20,U=21,q=22,z=23,G=24,K=25,pe=26,ne=28,oe=new Int32Array(e,0,w);if(oe[b]!==i)return console.error("THREE.DDSLoader.parse: Invalid magic number in DDS header."),n;if(!oe[O]&f)return console.error("THREE.DDSLoader.parse: Unsupported format, must contain a FourCC code."),n;var se,de=oe[U],Ge=!1;switch(de){case v:se=8,n.format=ec;break;case m:se=16,n.format=tc;break;case y:se=16,n.format=nc;break;case _:se=8,n.format=nh;break;default:if(oe[q]===32&&oe[z]&16711680&&oe[G]&65280&&oe[K]&255&&oe[pe]&4278190080)Ge=!0,se=64,n.format=jt;else return console.error("THREE.DDSLoader.parse: Unsupported FourCC code ",p(de)),n}n.mipmapCount=1,oe[A]&r&&t!==!1&&(n.mipmapCount=Math.max(1,oe[Y]));var Be=oe[ne];if(n.isCubemap=!!(Be&o),n.isCubemap&&(!(Be&s)||!(Be&a)||!(Be&c)||!(Be&l)||!(Be&h)||!(Be&u)))return console.error("THREE.DDSLoader.parse: Incomplete cubemap faces"),n;n.width=oe[P],n.height=oe[N];for(var re=oe[T]+4,ve=n.isCubemap?6:1,W=0;W<ve;W++)for(var xe=n.width,_e=n.height,Q=0;Q<n.mipmapCount;Q++){if(Ge)var k=g(e,re,xe,_e),I=k.length;else var I=Math.max(4,xe)/4*Math.max(4,_e)/4*se,k=new Uint8Array(e,re,I);var B={data:k,width:xe,height:_e};n.mipmaps.push(B),re+=I,xe=Math.max(xe>>1,1),_e=Math.max(_e>>1,1)}return n}});var bi=function(e){qe.call(this,e)};bi.prototype=Object.assign(Object.create(qe.prototype),{constructor:bi,load:function(e,t,n,i){var r=this,o=this.path===""?ul.extractUrlBase(e):this.path,s=new Zt(this.manager);s.setPath(this.path),s.load(e,function(a){try{t(r.parse(a,o))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)},setMaterialOptions:function(e){return this.materialOptions=e,this},parse:function(e,t){for(var n=e.split(`
`),i={},r=/\s+/,o={},s=0;s<n.length;s++){var a=n[s];if(a=a.trim(),!(a.length===0||a.charAt(0)==="#")){var c=a.indexOf(" "),l=c>=0?a.substring(0,c):a;l=l.toLowerCase();var h=c>=0?a.substring(c+1):"";if(h=h.trim(),l==="newmtl")i={name:h},o[h]=i;else if(l==="ka"||l==="kd"||l==="ks"||l==="ke"){var u=h.split(r,3);i[l]=[parseFloat(u[0]),parseFloat(u[1]),parseFloat(u[2])]}else i[l]=h}}var f=new bi.MaterialCreator(this.resourcePath||t,this.materialOptions);return f.setCrossOrigin(this.crossOrigin),f.setManager(this.manager),f.setMaterials(o),f}});bi.MaterialCreator=function(e,t){this.baseUrl=e||"",this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:Sr,this.wrap=this.options&&this.options.wrap?this.options.wrap:rr};bi.MaterialCreator.prototype={constructor:bi.MaterialCreator,crossOrigin:"anonymous",setCrossOrigin:function(e){return this.crossOrigin=e,this},setManager:function(e){this.manager=e},setMaterials:function(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var n in e){var i=e[n],r={};t[n]=r;for(var o in i){var s=!0,a=i[o],c=o.toLowerCase();switch(c){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(a=[a[0]/255,a[1]/255,a[2]/255]),this.options&&this.options.ignoreZeroRGBs&&a[0]===0&&a[1]===0&&a[2]===0&&(s=!1);break}s&&(r[c]=a)}}return t},preload:function(){for(var e in this.materialsInfo)this.create(e)},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray},create:function(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]},createMaterial_:function(e){var t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function r(l,h){return typeof h!="string"||h===""?"":/^https?:\/\//i.test(h)?h:l+h}function o(l,h){if(!i[l]){var u=t.getTextureParams(h,i),f=t.loadTexture(r(t.baseUrl,u.url));f.repeat.copy(u.scale),f.offset.copy(u.offset),f.wrapS=t.wrap,f.wrapT=t.wrap,i[l]=f}}for(var s in n){var a=n[s],c;if(a!=="")switch(s.toLowerCase()){case"kd":i.color=new ce().fromArray(a);break;case"ks":i.specular=new ce().fromArray(a);break;case"ke":i.emissive=new ce().fromArray(a);break;case"map_kd":o("map",a);break;case"map_ks":o("specularMap",a);break;case"map_ke":o("emissiveMap",a);break;case"norm":o("normalMap",a);break;case"map_bump":case"bump":o("bumpMap",a);break;case"map_d":o("alphaMap",a),i.transparent=!0;break;case"ns":i.shininess=parseFloat(a);break;case"d":c=parseFloat(a),c<1&&(i.opacity=c,i.transparent=!0);break;case"tr":c=parseFloat(a),this.options&&this.options.invertTrProperty&&(c=1-c),c>0&&(i.opacity=1-c,i.transparent=!0);break}}return this.materials[e]=new Bn(i),this.materials[e]},getTextureParams:function(e,t){var n={scale:new V(1,1),offset:new V(0,0)},i=e.split(/\s+/),r;return r=i.indexOf("-bm"),r>=0&&(t.bumpScale=parseFloat(i[r+1]),i.splice(r,2)),r=i.indexOf("-s"),r>=0&&(n.scale.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),r=i.indexOf("-o"),r>=0&&(n.offset.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),n.url=i.join(" ").trim(),n},loadTexture:function(e,t,n,i,r){var o,s=this.manager!==void 0?this.manager:Ah,a=s.getHandler(e);return a===null&&(a=new _o(s)),a.setCrossOrigin&&a.setCrossOrigin(this.crossOrigin),o=a.load(e,n,i,r),t!==void 0&&(o.mapping=t),o}};var ml=function(){this._tweens={},this._tweensAddedDuringUpdate={}};ml.prototype={getAll:function(){return Object.keys(this._tweens).map((function(e){return this._tweens[e]}).bind(this))},removeAll:function(){this._tweens={}},add:function(e){this._tweens[e.getId()]=e,this._tweensAddedDuringUpdate[e.getId()]=e},remove:function(e){delete this._tweens[e.getId()],delete this._tweensAddedDuringUpdate[e.getId()]},update:function(e,t){var n=Object.keys(this._tweens);if(n.length===0)return!1;for(e=e!==void 0?e:Ue.now();0<n.length;){this._tweensAddedDuringUpdate={};for(var i=0;i<n.length;i++){var r=this._tweens[n[i]];r&&r.update(e)===!1&&(r._isPlaying=!1,t||delete this._tweens[n[i]])}n=Object.keys(this._tweensAddedDuringUpdate)}return!0}};var Ue=new ml;Ue.Group=ml,Ue._nextId=0,Ue.nextId=function(){return Ue._nextId++},typeof self>"u"&&typeof process<"u"&&process.hrtime?Ue.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:typeof self<"u"&&self.performance!==void 0&&self.performance.now!==void 0?Ue.now=self.performance.now.bind(self.performance):Date.now!==void 0?Ue.now=Date.now:Ue.now=function(){return new Date().getTime()},Ue.Tween=function(e,t){this._object=e,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._repeat=0,this._repeatDelayTime=void 0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=null,this._easingFunction=Ue.Easing.Linear.None,this._interpolationFunction=Ue.Interpolation.Linear,this._chainedTweens=[],this._onStartCallback=null,this._onStartCallbackFired=!1,this._onUpdateCallback=null,this._onCompleteCallback=null,this._onStopCallback=null,this._group=t||Ue,this._id=Ue.nextId()},Ue.Tween.prototype={getId:function(){return this._id},isPlaying:function(){return this._isPlaying},to:function(e,t){return this._valuesEnd=Object.create(e),t!==void 0&&(this._duration=t),this},duration:function(e){return this._duration=e,this},start:function(e){for(var t in this._group.add(this),this._isPlaying=!0,this._onStartCallbackFired=!1,this._startTime=e!==void 0?typeof e=="string"?Ue.now()+parseFloat(e):e:Ue.now(),this._startTime+=this._delayTime,this._valuesEnd){if(this._valuesEnd[t]instanceof Array){if(this._valuesEnd[t].length===0)continue;this._valuesEnd[t]=[this._object[t]].concat(this._valuesEnd[t])}this._object[t]!==void 0&&(this._valuesStart[t]=this._object[t],!(this._valuesStart[t]instanceof Array)&&(this._valuesStart[t]*=1),this._valuesStartRepeat[t]=this._valuesStart[t]||0)}return this},stop:function(){return this._isPlaying&&(this._group.remove(this),this._isPlaying=!1,this._onStopCallback!==null&&this._onStopCallback(this._object),this.stopChainedTweens()),this},end:function(){return this.update(1/0),this},stopChainedTweens:function(){for(var e=0,t=this._chainedTweens.length;e<t;e++)this._chainedTweens[e].stop()},group:function(e){return this._group=e,this},delay:function(e){return this._delayTime=e,this},repeat:function(e){return this._repeat=e,this},repeatDelay:function(e){return this._repeatDelayTime=e,this},yoyo:function(e){return this._yoyo=e,this},easing:function(e){return this._easingFunction=e,this},interpolation:function(e){return this._interpolationFunction=e,this},chain:function(){return this._chainedTweens=arguments,this},onStart:function(e){return this._onStartCallback=e,this},onUpdate:function(e){return this._onUpdateCallback=e,this},onComplete:function(e){return this._onCompleteCallback=e,this},onStop:function(e){return this._onStopCallback=e,this},update:function(e){var t,n,i;if(e<this._startTime)return!0;for(t in this._onStartCallbackFired===!1&&(this._onStartCallback!==null&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),n=(e-this._startTime)/this._duration,n=this._duration===0||1<n?1:n,i=this._easingFunction(n),this._valuesEnd)if(this._valuesStart[t]!==void 0){var r=this._valuesStart[t]||0,o=this._valuesEnd[t];o instanceof Array?this._object[t]=this._interpolationFunction(o,i):(typeof o=="string"&&(o=o.charAt(0)==="+"||o.charAt(0)==="-"?r+parseFloat(o):parseFloat(o)),typeof o=="number"&&(this._object[t]=r+(o-r)*i))}if(this._onUpdateCallback!==null&&this._onUpdateCallback(this._object),n!==1)return!0;if(0<this._repeat){for(t in isFinite(this._repeat)&&this._repeat--,this._valuesStartRepeat){if(typeof this._valuesEnd[t]=="string"&&(this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(this._valuesEnd[t])),this._yoyo){var s=this._valuesStartRepeat[t];this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=s}this._valuesStart[t]=this._valuesStartRepeat[t]}return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=e+this._repeatDelayTime:this._startTime=e+this._delayTime,!0}this._onCompleteCallback!==null&&this._onCompleteCallback(this._object);for(var a=0,c=this._chainedTweens.length;a<c;a++)this._chainedTweens[a].start(this._startTime+this._duration);return!1}},Ue.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return .5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return e===0?0:Math.pow(1024,e-1)},Out:function(e){return e===1?1:1-Math.pow(2,-10*e)},InOut:function(e){return e===0?0:e===1?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(2-Math.pow(2,-10*(e-1)))}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){return e===0?0:e===1?1:-Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)},Out:function(e){return e===0?0:e===1?1:Math.pow(2,-10*e)*Math.sin(5*(e-.1)*Math.PI)+1},InOut:function(e){return e===0?0:e===1?1:(e*=2)<1?-.5*Math.pow(2,10*(e-1))*Math.sin(5*(e-1.1)*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin(5*(e-1.1)*Math.PI)+1}},Back:{In:function(e){return e*e*(2.70158*e-1.70158)},Out:function(e){return--e*e*(2.70158*e+1.70158)+1},InOut:function(e){var t=2.5949095;return(e*=2)<1?e*e*((1+t)*e-t)*.5:.5*((e-=2)*e*((1+t)*e+t)+2)}},Bounce:{In:function(e){return 1-Ue.Easing.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?.5*Ue.Easing.Bounce.In(2*e):.5*Ue.Easing.Bounce.Out(2*e-1)+.5}}},Ue.Interpolation={Linear:function(e,t){var n=e.length-1,i=n*t,r=Math.floor(i),o=Ue.Interpolation.Utils.Linear;return t<0?o(e[0],e[1],i):1<t?o(e[n],e[n-1],n-i):o(e[r],e[n<r+1?n:r+1],i-r)},Bezier:function(e,t){for(var n=0,i=e.length-1,r=Math.pow,o=Ue.Interpolation.Utils.Bernstein,s=0;s<=i;s++)n+=r(1-t,i-s)*r(t,s)*e[s]*o(i,s);return n},CatmullRom:function(e,t){var n=e.length-1,i=n*t,r=Math.floor(i),o=Ue.Interpolation.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(r=Math.floor(i=n*(1+t))),o(e[(r-1+n)%n],e[r],e[(r+1)%n],e[(r+2)%n],i-r)):t<0?e[0]-(o(e[0],e[0],e[1],e[1],-i)-e[0]):1<t?e[n]-(o(e[n],e[n],e[n-1],e[n-1],i-n)-e[n]):o(e[r?r-1:0],e[r],e[n<r+1?n:r+1],e[n<r+2?n:r+2],i-r)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=Ue.Interpolation.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:function(){var e=[1];return function(t){var n=1;if(e[t])return e[t];for(var i=t;1<i;i--)n*=i;return e[t]=n}}(),CatmullRom:function(e,t,n,i,r){var o=.5*(n-e),s=.5*(i-t),a=r*r;return(2*t-2*n+o+s)*(r*a)+(-3*t+3*n-2*o-s)*a+o*r+t}}},function(e){typeof define=="function"&&define.amd?define([],function(){return Ue}):typeof Jc<"u"&&typeof jh=="object"?Jc.exports=Ue:e!==void 0&&(e.TWEEN=Ue)}(void 0);var Za,yn,en,Yc,Pn,$e,Yi,Lo=new V,Ja,vs=[],Hh=[],pa,ma,Rn,rn;Rn=rn=0;Iy();Vh();function Iy(){Za=document.createElement("div"),document.body.appendChild(Za),yn=new dt(50,window.innerWidth/window.innerHeight,1,3e4),yn.position.set(300,300,300),en=new sr,en.add(new ea(0)),en.add(new Qs(16777215,0,.8));var e=[];for(let v=0;v<e.length;v++){var t=e[v],n=new Ks(16777215,.5);n.position.set(t[0],t[1],t[2]),en.add(n);var i=new Mr(n);Hh.push(i),en.add(i);var r=new ee(new Ct(2,2,2),new Dn({color:Math.random()*16777215,transparent:!0,opacity:0}));r.target=n,r.position.set(t[0],t[1],t[2]),en.add(r),vs.push(r)}var o=new ia(1500,1500,16777215,5592405);o.rotateOnAxis(new x(1,0,0),90*(Math.PI/180)),o.position.set(0,0,-2),new Cy(2);for(var s=new Ct(2,2,2),a=0;a<1;a++){var c=new ee(s,new Dn({color:Math.random()*16777215}));c.position.x=Math.random()*80-40,c.position.y=Math.random()*80-40,c.position.z=Math.random()*80-40,c.rotation.x=Math.random()*2*Math.PI,c.rotation.y=Math.random()*2*Math.PI,c.rotation.z=Math.random()*2*Math.PI,c.scale.x=Math.random()+.5,c.scale.y=Math.random()+.5,c.scale.z=Math.random()+.5,vs.push(c)}Yc=new da,Pn=new sl({antialias:!0,alpha:!0}),Pn.setPixelRatio(window.devicePixelRatio),Pn.setSize(window.innerWidth,window.innerHeight),Za.appendChild(Pn.domElement),$e=new Ao(yn,Pn.domElement),$e.addEventListener("change",Zc),$e.minPolarAngle=0,$e.maxPolarAngle=Math.PI/180*90,$e.minAzimuthAngle=-1/0,$e.maxAzimuthAngle=1/0,Yi=new Wc(yn,Pn.domElement),Yi.addEventListener("change",Zc),Yi.addEventListener("mouseDown",(v,m)=>{console.log(v.target.object.position)}),Yi.addEventListener("mouseUp",v=>{var m=v.target.object;m.target&&(console.log(v.target.object.position),m.target.position.x=v.target.object.position.x,m.target.position.y=v.target.object.position.y,m.target.position.z=v.target.object.position.z)}),Yi.addEventListener("dragging-changed",function(v){$e.enabled=!v.value}),en.add(Yi),new Xr,document.addEventListener("mousemove",Oy,!1),document.addEventListener("click",Ny,!1),window.addEventListener("resize",Dy,!1);function l(){console.log("once",f),window.parent.postMessage({msg:"modelLoaded"},"*"),f.ziti.position.set(-window.x1*.5,-window.y1*.5,-window.z1*.5),f.xian.position.set(-window.x1,-window.y1,-window.z1);function v(w,b){var T=new Rt(120,120);new _o().load(w,function(A){A.wrapS=A.wrapT=rr,A.anisotropy=Pn.capabilities.getMaxAnisotropy();var N=new Ot({map:A});N.side=ri,N.transparent=!0;var P=new ee(T,N);P.rotateX(Math.PI*.5),en.add(P),vs.push(P),P.position.set(b.x,b.y,b.z);function Y(){P.scale.set(.1,.1,.1),P.material.opacity=1;var O=new Ue.Tween(P.scale).to({x:1,y:1,z:1},1e3).onUpdate(()=>{}).onComplete(()=>{Y()});O.start();var O=new Ue.Tween(P.material).to({opacity:0},1e3).onUpdate(()=>{}).onComplete(()=>{});O.start()}Y()})}v("r.png",{x:-203.22488056213007,y:0,z:25.516908140108313}),v("r.png",{x:-27.93511378840053,y:0,z:-32.33934644101421}),v("r.png",{x:-124.88282297674829,y:0,z:107.41317014085024});var m=new ee(new Ct(2,2,2),new Dn({transparent:!0,opacity:0}));m.position.set(-257.45856336203474,.4209837355077415,108.43740372719924),en.add(m);var y=new Ue.Tween(m.position).to({z:208.43740372719924},4e4).onUpdate(()=>{Xu(m)}).easing(Ue.Easing.Sinusoidal.In).start(),_=new Ue.Tween(m.position).to({z:108.43740372719924},4e4).onUpdate(()=>{Xu(m)}).easing(Ue.Easing.Sinusoidal.In);y.chain(_),_.chain(y)}var h=new al(l);h.addHandler(/\.dds$/i,new Xc);var u=["hangdao2(2)","ziti","xian"],f={};for(let v=0;v<u.length;v++){let m=u[v];new bi(h).setPath("./model/").load(m+".mtl",function(y){y.preload(),new Ry(h).setMaterials(y).setPath("./model/").load(m+".obj",function(_){if(f[m]=_,m==="hangdao2(2)"){var w=new an().setFromObject(_),b=w.max.x-w.min.x,T=w.max.z-w.min.z,A=w.max.y-w.min.y,N=w.min.x+b/2,P=w.min.y+A/2,Y=w.min.z+T/2;_.position.set(-N,-P,-Y),window.x1=N,window.y1=P,window.z1=Y,new nt({color:"red",transparent:!0,opacity:.8,depthFunc:Qu})}if(m==="fenqu"&&_.traverse(function(O){O.isMesh&&(O.material.side=ri,O.material.transparent=!0,O.material.opacity=1)}),m==="ziti"){let O=.5;_.scale.set(O,O,O)}en.add(_)},d,p)})}function d(v){v.lengthComputable&&v.loaded/v.total*100}function p(){}var g=["./model/990745_cuber.jpg","./model/990745_cubel.jpg","./model/990745_cubeu.jpg","./model/990745_cubed.jpg","./model/990745_cubef.jpg","./model/990745_cubeb.jpg"];new $s().load(g),document.querySelector("#tip .tagname").onclick=function(){mt("3-1煤回风大巷",$e,241.71244973306005,22.525286757260858,281.929469901417,217.97467988077736,1.1999999999999982,181.29048574564047)},document.querySelector("#tip2 .tagname").onclick=function(){mt("44203综采工作面",$e,118.03498025851344,43.01646724357177,221.75461537314982,74.33329853472146,1.200000000000001,91.48806696325894),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter").removeClass("hide")},2e3)},$(".enter").on({click:function(v){v.preventDefault(),window.parent.postMessage("1-4","*")}}),document.querySelector("#tip3 .tagname").onclick=function(){mt("15214综采工作面",$e,-2.226338442065753,27.82640850650363,48.38064522674011,-13.603402080023589,1.1999999999999982,-32.59084716773952),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter1").removeClass("hide")},2e3)},$(".enter1").on({click:function(v){v.preventDefault(),window.parent.postMessage("1-4","*")}}),document.querySelector("#tip4 .tagname").onclick=function(){mt("25210综采工作面",$e,-100.419919791178,33.89024455798055,189.61440103207065,-114.38796931560812,1.1999999999999982,90.20265017751333),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter2").removeClass("hide")},2e3)},$(".enter2").on({click:function(v){v.preventDefault(),window.parent.postMessage("1-4","*")}}),document.querySelector("#tip5 .tagname").onclick=function(){mt("水泵房",$e,159.28438236982913,14.755628674975476,41.85239930987662,153.18965740450747,1.1999999999999982,14.844638800711298)},document.querySelector("#tip6 .tagname").onclick=function(){mt("南二变电所",$e,150.07022919429403,13.795797407078341,38.085772933195045,146.97594624265255,1.1999999999999982,13.47250875692338)},document.querySelector("#tip7 .tagname").onclick=function(){mt("中央变电所",$e,-189.28397680414625,10.246945407745732,35.4189374575741,-203.10879433749398,1.1999999999999982,25.19602896731579),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter3").removeClass("hide")},2e3)},$(".enter3").on({click:function(v){v.preventDefault(),window.parent.postMessage("3-1","*")}}),document.querySelector("#tip8 .tagname").onclick=function(){mt("3-2",$e,-199.58498218012843,7.672797233033551,36.66711335901415,-207.26855038350618,1.1999999999999982,24.440337117153682),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter4").removeClass("hide")},2e3)},$(".enter4").on({click:function(v){v.preventDefault(),window.parent.postMessage("3-2","*")}}),document.querySelector("#tip9 .tagname").onclick=function(){mt("北二盘区4-2煤变电所",$e,237.9901385100328,36.88259512714769,114.91957489564153,169.01443924067848,1.200000000000001,27.432275434738518)},document.querySelector("#tip10 .tagname").onclick=function(){mt("变电所",$e,-93.60957827328293,18.35313485692219,49.9420548204244,-113.97129776331704,1.1999999999999982,17.54067807534231)},document.querySelector("#tip11 .tagname").onclick=function(){mt("通风",$e,-219.35070662343168,15.906668997953664,57.504865403443844,-236.80833587119963,1.1999999999999982,29.724735016629044),$(".enterBox").addClass("hide"),setTimeout(()=>{$(".enter5").removeClass("hide")},2e3)},$(".enter5").on({click:function(v){v.preventDefault(),window.parent.postMessage("3-7","*")}}),document.querySelector("#tip12 .tagname").onclick=function(){mt("回风联巷",$e,441.7141427072158,40.10528679963632,76.93719651414646,363.44309638714293,1.1999999999999982,-.8120428304612632)},document.querySelector("#tip13 .tagname").onclick=function(){mt("一号胶带搭接硐室",$e,-314.441812666023,14.185253942849018,57.53175009838901,-319.5756851190954,1.1999999999999982,28.23989904739739)},document.querySelector("#tip14 .tagname").onclick=function(){mt("车辆9719",$e,203.77673727142474,6.364689813236424,181.50545977133527,208.23832924001445,1.1999999999999993,167.22790543372844)},document.querySelector("#tip15 .tagname").onclick=function(){mt("车辆9689",$e,265.57469469442384,19.952959784388103,28.868448917289946,374.7107304414967,1.2000000000000004,19.471931856848606)},document.querySelector("#tip16 .tagname").onclick=function(){mt("车辆9916",$e,-117.04936103219748,35.20874359185699,15.97950706160329,15.005048809958764,1.1999999999999993,20.632738947828443)},document.querySelector("#tip17 .tagname").onclick=function(){mt("车辆9383",$e,-317.0752813185135,66.87765758383006,271.90760544516104,-170.92883490176027,1.200000000000001,126.32053440135066)},$e.object.position.set(-331.87068874978775,95.24861798332618,227.55232797258958),$e.target=new x(-122.59295543346045,1.200000000000001,19.07560496470656),$e.update()}function mt(e,t,n,i,r,o,s,a){new Ue.Tween(t.object.position).to({x:n,y:i,z:r},2e3).easing(Ue.Easing.Sinusoidal.In).onUpdate(()=>{t.update()}).start().onComplete(()=>{setTimeout(()=>{e==="44203综采工作面"?$("#myModal").modal("show"):e==="南二变电所"?$("#myModal1").modal("show"):e==="一号胶带搭接硐室"?($(".phone_dialog").removeClass("hide"),pa=setTimeout(()=>{$(".phone_dialog").addClass("hide"),$(".phone_dialog2").removeClass("hide"),ma=setInterval(()=>{rn=rn+1,Wh()},1e3)},3e3)):e==="车辆9719"?($(".carMsgBox").removeClass("hide"),$(".carName").html(e),$(".carType").html("外委车辆"),$(".carMen").html(Math.floor(Math.random()*4+5)+"人"),$(".carSpeed").html("0 公里/小时"),$(".num5").html(0)):e==="车辆9689"?($(".carMsgBox").removeClass("hide"),$(".carName").html(e),$(".carType").html("本矿车辆"),$(".carMen").html(Math.floor(Math.random()*4+5)+"人"),$(".carSpeed").html("0 公里/小时"),$(".num5").html(1)):e==="车辆9916"?($(".carMsgBox").removeClass("hide"),$(".carName").html(e),$(".carType").html("外委车辆"),$(".carMen").html(Math.floor(Math.random()*4+5)+"人"),$(".carSpeed").html("0 公里/小时"),$(".num5").html(2)):e==="车辆9383"&&($(".carMsgBox").removeClass("hide"),$(".carName").html(e),$(".carType").html("本矿车辆"),$(".carMen").html(Math.floor(Math.random()*4+5)+"人"),$(".carSpeed").html(Math.floor(Math.random()*6+25)+" 公里/小时"),$(".num5").html(3))},500)}),new Ue.Tween(t.target).to(new x(o,s,a),2e3).easing(Ue.Easing.Sinusoidal.In).onUpdate(()=>{t.update()}).start()}function Dy(){yn.aspect=window.innerWidth/window.innerHeight,yn.updateProjectionMatrix(),Pn.setSize(window.innerWidth,window.innerHeight)}function Oy(e){e.preventDefault(),Lo.x=e.clientX/window.innerWidth*2-1,Lo.y=-(e.clientY/window.innerHeight)*2+1}function Ny(e){Lo.x=e.clientX/window.innerWidth*2-1,Lo.y=-(e.clientY/window.innerHeight)*2+1}function Vh(){requestAnimationFrame(Vh),Zc(),Ue.update()}function Zc(){Hh.forEach(t=>{t.update()}),yt({x:209,y:-12.052021823852945,z:186},"tip"),yt({x:100,y:1,z:140},"tip2"),yt({x:-23.838206069759494,y:.35933700376443,z:-31.880772982383103},"tip3"),yt({x:-120.97553791011435,y:1.3454585210268597,z:109.3588398070786},"tip4"),yt({x:150.2441185811014,y:5.62503774428664,z:24.59276599729027},"tip5"),yt({x:146.87603045558478,y:5.62503774428664,z:24.59276599729027},"tip6"),yt({x:-203.77970514619994,y:4.0956880467997845,z:28.811932829058396},"tip7"),yt({x:-206.89224477573418,y:4.491321724379293,z:28.190181015476874},"tip8"),yt({x:183.82077430278008,y:.8150041561064967,z:59.25385822958511},"tip9"),yt({x:-108.1735219498483,y:10.003098390550026,z:34.84444259577326},"tip10"),yt({x:-240.1256660046543,y:.07749155709996458,z:34.21661402312732},"tip11"),yt({x:389.0215748510885,y:6.053743495837899,z:28.672796397491236},"tip12"),yt({x:-327.4739672049483,y:1.3454585210268597,z:31.294287348910828},"tip13"),yt({x:208.99551581474643,y:-12.052021823852945,z:144.63893621570483},"tip14"),yt({x:302.4774139625364,y:5.664833635323179,z:32.873056453109626},"tip15"),yt({x:-39.54545049935705,y:.4209837355077415,z:35.14666252595521},"tip16"),yt({x:-257.45856336203474,y:.4209837355077415,z:108.43740372719924},"tip17"),yn.updateMatrixWorld(),Yc.setFromCamera(Lo,yn);var e=Yc.intersectObjects(vs);e.length>0?Ja!=e[0].object&&(Ja=e[0].object):Ja=null,Pn.render(en,yn)}function yt(e,t){let i=new x(e.x,e.y,e.z).project(yn),r=window.innerWidth/2,o=window.innerHeight/2;var s=Math.round(i.x*r+r),a=Math.round(-i.y*o+o),c=document.getElementById(t);c.style.left=s+"px",c.style.top=a+"px";let l=i;Math.abs(l.x)>1||Math.abs(l.y)>1||Math.abs(l.z)>1?c.style.display="none":c.style.display="block"}window.addEventListener("message",function(e){var t=e.data;t==="2d"?mt("",$e,9.697302375872804,546.2207142366844,-2.413034572338554,9.697300223036233,1.1999999999999982,-2.413579588800913):t==="3d"&&mt("",$e,-331.87068874978775,95.24861798332618,227.55232797258958,-122.59295543346045,1.200000000000001,19.07560496470656)},!1);function Fy(){var e=new Date,t=e.getFullYear(),n=e.getMonth()+1>9?e.getMonth()+1:"0"+(e.getMonth()+1),i=e.getDate()>9?e.getDate():"0"+e.getDate(),r=e.getHours()>9?e.getHours():"0"+e.getHours(),o=e.getMinutes()>9?e.getMinutes():"0"+e.getMinutes(),s=e.getSeconds()>9?e.getSeconds():"0"+e.getSeconds(),a=t+"-"+n+"-"+i+"&nbsp;&nbsp;"+r+":"+o+":"+s;$("#datetime").html(a),$("#datetime1").html(a)}setInterval(()=>{Fy()},1e3);function Wh(){rn>59&&(Rn=Rn+1,rn=0);var e=(Rn>9?Rn:"0"+Rn)+":"+(rn>9?rn:"0"+rn);$("#callTiming").html(e)}Wh();$(".closeDialog").on({click:function(){$("#myModal").modal("hide"),$("#myModal1").modal("hide")}});$(".closeBtn").on({click:function(){clearTimeout(pa),clearInterval(ma),Rn=rn=0,$(".phone_dialog").addClass("hide"),$(".phone_dialog2").addClass("hide"),$(".carMsgBox").addClass("hide")}});$(".pic_call").on({click:function(){clearTimeout(pa),clearInterval(ma),Rn=rn=0,$(".phone_dialog").addClass("hide"),$(".phone_dialog2").addClass("hide")}});window.onclick=function(){clearTimeout(pa),clearInterval(ma),Rn=rn=0,$(".phone_dialog").addClass("hide"),$(".phone_dialog2").addClass("hide"),$(".carMsgBox").addClass("hide"),$(".enterBox").addClass("hide")};function Xu(e){var t=e.position.x,n=e.position.y,i=e.position.z;yt({x:t,y:n,z:i},"tip17")}});export default By();
