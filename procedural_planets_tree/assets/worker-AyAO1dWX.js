(function(){"use strict";/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ki="166",vi="",St="srgb",Xe="srgb-linear",us="display-p3",Ei="display-p3-linear",Ye="linear",Ri="srgb",Ii="rec709",Di="p3";class Me{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(e);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let n=0,r=s.length;n<r;n++)s[n].call(this,t);t.target=null}}}const J=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Kt(){const m=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(J[m&255]+J[m>>8&255]+J[m>>16&255]+J[m>>24&255]+"-"+J[t&255]+J[t>>8&255]+"-"+J[t>>16&15|64]+J[t>>24&255]+"-"+J[e&63|128]+J[e>>8&255]+"-"+J[e>>16&255]+J[e>>24&255]+J[i&255]+J[i>>8&255]+J[i>>16&255]+J[i>>24&255]).toLowerCase()}function K(m,t,e){return Math.max(t,Math.min(e,m))}function ds(m,t){return(m%t+t)%t}function Ge(m,t,e){return(1-e)*m+e*t}function te(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return m/4294967295;case Uint16Array:return m/65535;case Uint8Array:return m/255;case Int32Array:return Math.max(m/2147483647,-1);case Int16Array:return Math.max(m/32767,-1);case Int8Array:return Math.max(m/127,-1);default:throw new Error("Invalid component type.")}}function tt(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return Math.round(m*4294967295);case Uint16Array:return Math.round(m*65535);case Uint8Array:return Math.round(m*255);case Int32Array:return Math.round(m*2147483647);case Int16Array:return Math.round(m*32767);case Int8Array:return Math.round(m*127);default:throw new Error("Invalid component type.")}}class G{constructor(t=0,e=0){G.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(K(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*s+t.x,this.y=n*s+r*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ft{constructor(t,e,i,s,n,r,o,a,h){Ft.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h)}set(t,e,i,s,n,r,o,a,h){const c=this.elements;return c[0]=t,c[1]=s,c[2]=o,c[3]=e,c[4]=n,c[5]=a,c[6]=i,c[7]=r,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[3],a=i[6],h=i[1],c=i[4],l=i[7],u=i[2],d=i[5],p=i[8],x=s[0],f=s[3],g=s[6],b=s[1],w=s[4],M=s[7],S=s[2],F=s[5],z=s[8];return n[0]=r*x+o*b+a*S,n[3]=r*f+o*w+a*F,n[6]=r*g+o*M+a*z,n[1]=h*x+c*b+l*S,n[4]=h*f+c*w+l*F,n[7]=h*g+c*M+l*z,n[2]=u*x+d*b+p*S,n[5]=u*f+d*w+p*F,n[8]=u*g+d*M+p*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8];return e*r*c-e*o*h-i*n*c+i*o*a+s*n*h-s*r*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8],l=c*r-o*h,u=o*a-c*n,d=h*n-r*a,p=e*l+i*u+s*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/p;return t[0]=l*x,t[1]=(s*h-c*i)*x,t[2]=(o*i-s*r)*x,t[3]=u*x,t[4]=(c*e-s*a)*x,t[5]=(s*n-o*e)*x,t[6]=d*x,t[7]=(i*a-h*e)*x,t[8]=(r*e-i*n)*x,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,n,r,o){const a=Math.cos(n),h=Math.sin(n);return this.set(i*a,i*h,-i*(a*r+h*o)+r+t,-s*h,s*a,-s*(-h*r+a*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(Ze.makeScale(t,e)),this}rotate(t){return this.premultiply(Ze.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ze.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ze=new Ft;function ps(m){for(let t=m.length-1;t>=0;--t)if(m[t]>=65535)return!0;return!1}function Pi(m){return document.createElementNS("http://www.w3.org/1999/xhtml",m)}const Ni={};function ms(m){m in Ni||(Ni[m]=!0,console.warn(m))}const Oi=new Ft().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),qi=new Ft().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),we={[Xe]:{transfer:Ye,primaries:Ii,toReference:m=>m,fromReference:m=>m},[St]:{transfer:Ri,primaries:Ii,toReference:m=>m.convertSRGBToLinear(),fromReference:m=>m.convertLinearToSRGB()},[Ei]:{transfer:Ye,primaries:Di,toReference:m=>m.applyMatrix3(qi),fromReference:m=>m.applyMatrix3(Oi)},[us]:{transfer:Ri,primaries:Di,toReference:m=>m.convertSRGBToLinear().applyMatrix3(qi),fromReference:m=>m.applyMatrix3(Oi).convertLinearToSRGB()}},fs=new Set([Xe,Ei]),at={enabled:!0,_workingColorSpace:Xe,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(m){if(!fs.has(m))throw new Error(`Unsupported working color space, "${m}".`);this._workingColorSpace=m},convert:function(m,t,e){if(this.enabled===!1||t===e||!t||!e)return m;const i=we[t].toReference,s=we[e].fromReference;return s(i(m))},fromWorkingColorSpace:function(m,t){return this.convert(m,this._workingColorSpace,t)},toWorkingColorSpace:function(m,t){return this.convert(m,t,this._workingColorSpace)},getPrimaries:function(m){return we[m].primaries},getTransfer:function(m){return m===vi?Ye:we[m].transfer}};function Ot(m){return m<.04045?m*.0773993808:Math.pow(m*.9478672986+.0521327014,2.4)}function je(m){return m<.0031308?m*12.92:1.055*Math.pow(m,.41666)-.055}let qt;class ys{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{qt===void 0&&(qt=Pi("canvas")),qt.width=t.width,qt.height=t.height;const i=qt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=qt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Pi("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),n=s.data;for(let r=0;r<n.length;r++)n[r]=Ot(n[r]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Ot(e[i]/255)*255):e[i]=Ot(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let xs=0;class gs{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:xs++}),this.uuid=Kt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let r=0,o=s.length;r<o;r++)s[r].isDataTexture?n.push($e(s[r].image)):n.push($e(s[r]))}else n=$e(s);i.url=n}return e||(t.images[this.uuid]=i),i}}function $e(m){return typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&m instanceof ImageBitmap?ys.getDataURL(m):m.data?{data:Array.from(m.data),width:m.width,height:m.height,type:m.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let bs=0;class It extends Me{constructor(t=It.DEFAULT_IMAGE,e=It.DEFAULT_MAPPING,i=1001,s=1001,n=1006,r=1008,o=1023,a=1009,h=It.DEFAULT_ANISOTROPY,c=vi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:bs++}),this.uuid=Kt(),this.name="",this.source=new gs(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=n,this.minFilter=r,this.anisotropy=h,this.format=o,this.internalFormat=null,this.type=a,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ft,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==300)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}It.DEFAULT_IMAGE=null,It.DEFAULT_MAPPING=300,It.DEFAULT_ANISOTROPY=1;class ee{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,n,r,o){let a=i[s+0],h=i[s+1],c=i[s+2],l=i[s+3];const u=n[r+0],d=n[r+1],p=n[r+2],x=n[r+3];if(o===0){t[e+0]=a,t[e+1]=h,t[e+2]=c,t[e+3]=l;return}if(o===1){t[e+0]=u,t[e+1]=d,t[e+2]=p,t[e+3]=x;return}if(l!==x||a!==u||h!==d||c!==p){let f=1-o;const g=a*u+h*d+c*p+l*x,b=g>=0?1:-1,w=1-g*g;if(w>Number.EPSILON){const S=Math.sqrt(w),F=Math.atan2(S,g*b);f=Math.sin(f*F)/S,o=Math.sin(o*F)/S}const M=o*b;if(a=a*f+u*M,h=h*f+d*M,c=c*f+p*M,l=l*f+x*M,f===1-o){const S=1/Math.sqrt(a*a+h*h+c*c+l*l);a*=S,h*=S,c*=S,l*=S}}t[e]=a,t[e+1]=h,t[e+2]=c,t[e+3]=l}static multiplyQuaternionsFlat(t,e,i,s,n,r){const o=i[s],a=i[s+1],h=i[s+2],c=i[s+3],l=n[r],u=n[r+1],d=n[r+2],p=n[r+3];return t[e]=o*p+c*l+a*d-h*u,t[e+1]=a*p+c*u+h*l-o*d,t[e+2]=h*p+c*d+o*u-a*l,t[e+3]=c*p-o*l-a*u-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,n=t._z,r=t._order,o=Math.cos,a=Math.sin,h=o(i/2),c=o(s/2),l=o(n/2),u=a(i/2),d=a(s/2),p=a(n/2);switch(r){case"XYZ":this._x=u*c*l+h*d*p,this._y=h*d*l-u*c*p,this._z=h*c*p+u*d*l,this._w=h*c*l-u*d*p;break;case"YXZ":this._x=u*c*l+h*d*p,this._y=h*d*l-u*c*p,this._z=h*c*p-u*d*l,this._w=h*c*l+u*d*p;break;case"ZXY":this._x=u*c*l-h*d*p,this._y=h*d*l+u*c*p,this._z=h*c*p+u*d*l,this._w=h*c*l-u*d*p;break;case"ZYX":this._x=u*c*l-h*d*p,this._y=h*d*l+u*c*p,this._z=h*c*p-u*d*l,this._w=h*c*l+u*d*p;break;case"YZX":this._x=u*c*l+h*d*p,this._y=h*d*l+u*c*p,this._z=h*c*p-u*d*l,this._w=h*c*l-u*d*p;break;case"XZY":this._x=u*c*l-h*d*p,this._y=h*d*l-u*c*p,this._z=h*c*p+u*d*l,this._w=h*c*l+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],n=e[8],r=e[1],o=e[5],a=e[9],h=e[2],c=e[6],l=e[10],u=i+o+l;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(c-a)*d,this._y=(n-h)*d,this._z=(r-s)*d}else if(i>o&&i>l){const d=2*Math.sqrt(1+i-o-l);this._w=(c-a)/d,this._x=.25*d,this._y=(s+r)/d,this._z=(n+h)/d}else if(o>l){const d=2*Math.sqrt(1+o-i-l);this._w=(n-h)/d,this._x=(s+r)/d,this._y=.25*d,this._z=(a+c)/d}else{const d=2*Math.sqrt(1+l-i-o);this._w=(r-s)/d,this._x=(n+h)/d,this._y=(a+c)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(K(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,n=t._z,r=t._w,o=e._x,a=e._y,h=e._z,c=e._w;return this._x=i*c+r*o+s*h-n*a,this._y=s*c+r*a+n*o-i*h,this._z=n*c+r*h+i*a-s*o,this._w=r*c-i*o-s*a-n*h,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,n=this._z,r=this._w;let o=r*t._w+i*t._x+s*t._y+n*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=r,this._x=i,this._y=s,this._z=n,this;const a=1-o*o;if(a<=Number.EPSILON){const d=1-e;return this._w=d*r+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*n+e*this._z,this.normalize(),this}const h=Math.sqrt(a),c=Math.atan2(h,o),l=Math.sin((1-e)*c)/h,u=Math.sin(e*c)/h;return this._w=r*l+this._w*u,this._x=i*l+this._x*u,this._y=s*l+this._y*u,this._z=n*l+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),n=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),n*Math.sin(e),n*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class y{constructor(t=0,e=0,i=0){y.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Li.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Li.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6]*s,this.y=n[1]*e+n[4]*i+n[7]*s,this.z=n[2]*e+n[5]*i+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,n=t.elements,r=1/(n[3]*e+n[7]*i+n[11]*s+n[15]);return this.x=(n[0]*e+n[4]*i+n[8]*s+n[12])*r,this.y=(n[1]*e+n[5]*i+n[9]*s+n[13])*r,this.z=(n[2]*e+n[6]*i+n[10]*s+n[14])*r,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,n=t.x,r=t.y,o=t.z,a=t.w,h=2*(r*s-o*i),c=2*(o*e-n*s),l=2*(n*i-r*e);return this.x=e+a*h+r*l-o*c,this.y=i+a*c+o*h-n*l,this.z=s+a*l+n*c-r*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s,this.y=n[1]*e+n[5]*i+n[9]*s,this.z=n[2]*e+n[6]*i+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,n=t.z,r=e.x,o=e.y,a=e.z;return this.x=s*a-n*o,this.y=n*r-i*a,this.z=i*o-s*r,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Je.copy(this).projectOnVector(t),this.sub(Je)}reflect(t){return this.sub(Je.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(K(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Je=new y,Li=new ee;class pt{constructor(t=new y(1/0,1/0,1/0),e=new y(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(ht.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(ht.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=ht.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const n=i.getAttribute("position");if(e===!0&&n!==void 0&&t.isInstancedMesh!==!0)for(let r=0,o=n.count;r<o;r++)t.isMesh===!0?t.getVertexPosition(r,ht):ht.fromBufferAttribute(n,r),ht.applyMatrix4(t.matrixWorld),this.expandByPoint(ht);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),_e.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),_e.copy(i.boundingBox)),_e.applyMatrix4(t.matrixWorld),this.union(_e)}const s=t.children;for(let n=0,r=s.length;n<r;n++)this.expandByObject(s[n],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,ht),ht.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ie),ze.subVectors(this.max,ie),Lt.subVectors(t.a,ie),Vt.subVectors(t.b,ie),Wt.subVectors(t.c,ie),Bt.subVectors(Vt,Lt),Ct.subVectors(Wt,Vt),Dt.subVectors(Lt,Wt);let e=[0,-Bt.z,Bt.y,0,-Ct.z,Ct.y,0,-Dt.z,Dt.y,Bt.z,0,-Bt.x,Ct.z,0,-Ct.x,Dt.z,0,-Dt.x,-Bt.y,Bt.x,0,-Ct.y,Ct.x,0,-Dt.y,Dt.x,0];return!Qe(e,Lt,Vt,Wt,ze)||(e=[1,0,0,0,1,0,0,0,1],!Qe(e,Lt,Vt,Wt,ze))?!1:(Ae.crossVectors(Bt,Ct),e=[Ae.x,Ae.y,Ae.z],Qe(e,Lt,Vt,Wt,ze))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,ht).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(ht).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(bt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),bt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),bt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),bt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),bt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),bt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),bt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),bt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(bt),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const bt=[new y,new y,new y,new y,new y,new y,new y,new y],ht=new y,_e=new pt,Lt=new y,Vt=new y,Wt=new y,Bt=new y,Ct=new y,Dt=new y,ie=new y,ze=new y,Ae=new y,Pt=new y;function Qe(m,t,e,i,s){for(let n=0,r=m.length-3;n<=r;n+=3){Pt.fromArray(m,n);const o=s.x*Math.abs(Pt.x)+s.y*Math.abs(Pt.y)+s.z*Math.abs(Pt.z),a=t.dot(Pt),h=e.dot(Pt),c=i.dot(Pt);if(Math.max(-Math.max(a,h,c),Math.min(a,h,c))>o)return!1}return!0}const Ms=new pt,se=new y,Ke=new y;class ti{constructor(t=new y,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):Ms.setFromPoints(t).getCenter(i);let s=0;for(let n=0,r=t.length;n<r;n++)s=Math.max(s,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;se.subVectors(t,this.center);const e=se.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(se,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Ke.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(se.copy(t.center).add(Ke)),this.expandByPoint(se.copy(t.center).sub(Ke))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Mt=new y,ei=new y,Se=new y,Tt=new y,ii=new y,Fe=new y,si=new y;class Vi{constructor(t=new y,e=new y(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Mt)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Mt.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Mt.copy(this.origin).addScaledVector(this.direction,e),Mt.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){ei.copy(t).add(e).multiplyScalar(.5),Se.copy(e).sub(t).normalize(),Tt.copy(this.origin).sub(ei);const n=t.distanceTo(e)*.5,r=-this.direction.dot(Se),o=Tt.dot(this.direction),a=-Tt.dot(Se),h=Tt.lengthSq(),c=Math.abs(1-r*r);let l,u,d,p;if(c>0)if(l=r*a-o,u=r*o-a,p=n*c,l>=0)if(u>=-p)if(u<=p){const x=1/c;l*=x,u*=x,d=l*(l+r*u+2*o)+u*(r*l+u+2*a)+h}else u=n,l=Math.max(0,-(r*u+o)),d=-l*l+u*(u+2*a)+h;else u=-n,l=Math.max(0,-(r*u+o)),d=-l*l+u*(u+2*a)+h;else u<=-p?(l=Math.max(0,-(-r*n+o)),u=l>0?-n:Math.min(Math.max(-n,-a),n),d=-l*l+u*(u+2*a)+h):u<=p?(l=0,u=Math.min(Math.max(-n,-a),n),d=u*(u+2*a)+h):(l=Math.max(0,-(r*n+o)),u=l>0?n:Math.min(Math.max(-n,-a),n),d=-l*l+u*(u+2*a)+h);else u=r>0?-n:n,l=Math.max(0,-(r*u+o)),d=-l*l+u*(u+2*a)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,l),s&&s.copy(ei).addScaledVector(Se,u),d}intersectSphere(t,e){Mt.subVectors(t.center,this.origin);const i=Mt.dot(this.direction),s=Mt.dot(Mt)-i*i,n=t.radius*t.radius;if(s>n)return null;const r=Math.sqrt(n-s),o=i-r,a=i+r;return a<0?null:o<0?this.at(a,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,n,r,o,a;const h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,s=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,s=(t.min.x-u.x)*h),c>=0?(n=(t.min.y-u.y)*c,r=(t.max.y-u.y)*c):(n=(t.max.y-u.y)*c,r=(t.min.y-u.y)*c),i>r||n>s||((n>i||isNaN(i))&&(i=n),(r<s||isNaN(s))&&(s=r),l>=0?(o=(t.min.z-u.z)*l,a=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,a=(t.min.z-u.z)*l),i>a||o>s)||((o>i||i!==i)&&(i=o),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,Mt)!==null}intersectTriangle(t,e,i,s,n){ii.subVectors(e,t),Fe.subVectors(i,t),si.crossVectors(ii,Fe);let r=this.direction.dot(si),o;if(r>0){if(s)return null;o=1}else if(r<0)o=-1,r=-r;else return null;Tt.subVectors(this.origin,t);const a=o*this.direction.dot(Fe.crossVectors(Tt,Fe));if(a<0)return null;const h=o*this.direction.dot(ii.cross(Tt));if(h<0||a+h>r)return null;const c=-o*Tt.dot(si);return c<0?null:this.at(c/r,n)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class nt{constructor(t,e,i,s,n,r,o,a,h,c,l,u,d,p,x,f){nt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,n,r,o,a,h,c,l,u,d,p,x,f)}set(t,e,i,s,n,r,o,a,h,c,l,u,d,p,x,f){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=n,g[5]=r,g[9]=o,g[13]=a,g[2]=h,g[6]=c,g[10]=l,g[14]=u,g[3]=d,g[7]=p,g[11]=x,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new nt().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/Ut.setFromMatrixColumn(t,0).length(),n=1/Ut.setFromMatrixColumn(t,1).length(),r=1/Ut.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*n,e[5]=i[5]*n,e[6]=i[6]*n,e[7]=0,e[8]=i[8]*r,e[9]=i[9]*r,e[10]=i[10]*r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,n=t.z,r=Math.cos(i),o=Math.sin(i),a=Math.cos(s),h=Math.sin(s),c=Math.cos(n),l=Math.sin(n);if(t.order==="XYZ"){const u=r*c,d=r*l,p=o*c,x=o*l;e[0]=a*c,e[4]=-a*l,e[8]=h,e[1]=d+p*h,e[5]=u-x*h,e[9]=-o*a,e[2]=x-u*h,e[6]=p+d*h,e[10]=r*a}else if(t.order==="YXZ"){const u=a*c,d=a*l,p=h*c,x=h*l;e[0]=u+x*o,e[4]=p*o-d,e[8]=r*h,e[1]=r*l,e[5]=r*c,e[9]=-o,e[2]=d*o-p,e[6]=x+u*o,e[10]=r*a}else if(t.order==="ZXY"){const u=a*c,d=a*l,p=h*c,x=h*l;e[0]=u-x*o,e[4]=-r*l,e[8]=p+d*o,e[1]=d+p*o,e[5]=r*c,e[9]=x-u*o,e[2]=-r*h,e[6]=o,e[10]=r*a}else if(t.order==="ZYX"){const u=r*c,d=r*l,p=o*c,x=o*l;e[0]=a*c,e[4]=p*h-d,e[8]=u*h+x,e[1]=a*l,e[5]=x*h+u,e[9]=d*h-p,e[2]=-h,e[6]=o*a,e[10]=r*a}else if(t.order==="YZX"){const u=r*a,d=r*h,p=o*a,x=o*h;e[0]=a*c,e[4]=x-u*l,e[8]=p*l+d,e[1]=l,e[5]=r*c,e[9]=-o*c,e[2]=-h*c,e[6]=d*l+p,e[10]=u-x*l}else if(t.order==="XZY"){const u=r*a,d=r*h,p=o*a,x=o*h;e[0]=a*c,e[4]=-l,e[8]=h*c,e[1]=u*l+x,e[5]=r*c,e[9]=d*l-p,e[2]=p*l-d,e[6]=o*c,e[10]=x*l+u}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ws,t,_s)}lookAt(t,e,i){const s=this.elements;return et.subVectors(t,e),et.lengthSq()===0&&(et.z=1),et.normalize(),kt.crossVectors(i,et),kt.lengthSq()===0&&(Math.abs(i.z)===1?et.x+=1e-4:et.z+=1e-4,et.normalize(),kt.crossVectors(i,et)),kt.normalize(),Be.crossVectors(et,kt),s[0]=kt.x,s[4]=Be.x,s[8]=et.x,s[1]=kt.y,s[5]=Be.y,s[9]=et.y,s[2]=kt.z,s[6]=Be.z,s[10]=et.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,n=this.elements,r=i[0],o=i[4],a=i[8],h=i[12],c=i[1],l=i[5],u=i[9],d=i[13],p=i[2],x=i[6],f=i[10],g=i[14],b=i[3],w=i[7],M=i[11],S=i[15],F=s[0],z=s[4],A=s[8],T=s[12],B=s[1],C=s[5],E=s[9],k=s[13],P=s[2],N=s[6],H=s[10],I=s[14],j=s[3],_=s[7],R=s[11],O=s[15];return n[0]=r*F+o*B+a*P+h*j,n[4]=r*z+o*C+a*N+h*_,n[8]=r*A+o*E+a*H+h*R,n[12]=r*T+o*k+a*I+h*O,n[1]=c*F+l*B+u*P+d*j,n[5]=c*z+l*C+u*N+d*_,n[9]=c*A+l*E+u*H+d*R,n[13]=c*T+l*k+u*I+d*O,n[2]=p*F+x*B+f*P+g*j,n[6]=p*z+x*C+f*N+g*_,n[10]=p*A+x*E+f*H+g*R,n[14]=p*T+x*k+f*I+g*O,n[3]=b*F+w*B+M*P+S*j,n[7]=b*z+w*C+M*N+S*_,n[11]=b*A+w*E+M*H+S*R,n[15]=b*T+w*k+M*I+S*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],n=t[12],r=t[1],o=t[5],a=t[9],h=t[13],c=t[2],l=t[6],u=t[10],d=t[14],p=t[3],x=t[7],f=t[11],g=t[15];return p*(+n*a*l-s*h*l-n*o*u+i*h*u+s*o*d-i*a*d)+x*(+e*a*d-e*h*u+n*r*u-s*r*d+s*h*c-n*a*c)+f*(+e*h*l-e*o*d-n*r*l+i*r*d+n*o*c-i*h*c)+g*(-s*o*c-e*a*l+e*o*u+s*r*l-i*r*u+i*a*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],n=t[3],r=t[4],o=t[5],a=t[6],h=t[7],c=t[8],l=t[9],u=t[10],d=t[11],p=t[12],x=t[13],f=t[14],g=t[15],b=l*f*h-x*u*h+x*a*d-o*f*d-l*a*g+o*u*g,w=p*u*h-c*f*h-p*a*d+r*f*d+c*a*g-r*u*g,M=c*x*h-p*l*h+p*o*d-r*x*d-c*o*g+r*l*g,S=p*l*a-c*x*a-p*o*u+r*x*u+c*o*f-r*l*f,F=e*b+i*w+s*M+n*S;if(F===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/F;return t[0]=b*z,t[1]=(x*u*n-l*f*n-x*s*d+i*f*d+l*s*g-i*u*g)*z,t[2]=(o*f*n-x*a*n+x*s*h-i*f*h-o*s*g+i*a*g)*z,t[3]=(l*a*n-o*u*n-l*s*h+i*u*h+o*s*d-i*a*d)*z,t[4]=w*z,t[5]=(c*f*n-p*u*n+p*s*d-e*f*d-c*s*g+e*u*g)*z,t[6]=(p*a*n-r*f*n-p*s*h+e*f*h+r*s*g-e*a*g)*z,t[7]=(r*u*n-c*a*n+c*s*h-e*u*h-r*s*d+e*a*d)*z,t[8]=M*z,t[9]=(p*l*n-c*x*n-p*i*d+e*x*d+c*i*g-e*l*g)*z,t[10]=(r*x*n-p*o*n+p*i*h-e*x*h-r*i*g+e*o*g)*z,t[11]=(c*o*n-r*l*n-c*i*h+e*l*h+r*i*d-e*o*d)*z,t[12]=S*z,t[13]=(c*x*s-p*l*s+p*i*u-e*x*u-c*i*f+e*l*f)*z,t[14]=(p*o*s-r*x*s-p*i*a+e*x*a+r*i*f-e*o*f)*z,t[15]=(r*l*s-c*o*s+c*i*a-e*l*a-r*i*u+e*o*u)*z,this}scale(t){const e=this.elements,i=t.x,s=t.y,n=t.z;return e[0]*=i,e[4]*=s,e[8]*=n,e[1]*=i,e[5]*=s,e[9]*=n,e[2]*=i,e[6]*=s,e[10]*=n,e[3]*=i,e[7]*=s,e[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),n=1-i,r=t.x,o=t.y,a=t.z,h=n*r,c=n*o;return this.set(h*r+i,h*o-s*a,h*a+s*o,0,h*o+s*a,c*o+i,c*a-s*r,0,h*a-s*o,c*a+s*r,n*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,n,r){return this.set(1,i,n,0,t,1,r,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,n=e._x,r=e._y,o=e._z,a=e._w,h=n+n,c=r+r,l=o+o,u=n*h,d=n*c,p=n*l,x=r*c,f=r*l,g=o*l,b=a*h,w=a*c,M=a*l,S=i.x,F=i.y,z=i.z;return s[0]=(1-(x+g))*S,s[1]=(d+M)*S,s[2]=(p-w)*S,s[3]=0,s[4]=(d-M)*F,s[5]=(1-(u+g))*F,s[6]=(f+b)*F,s[7]=0,s[8]=(p+w)*z,s[9]=(f-b)*z,s[10]=(1-(u+x))*z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let n=Ut.set(s[0],s[1],s[2]).length();const r=Ut.set(s[4],s[5],s[6]).length(),o=Ut.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],lt.copy(this);const h=1/n,c=1/r,l=1/o;return lt.elements[0]*=h,lt.elements[1]*=h,lt.elements[2]*=h,lt.elements[4]*=c,lt.elements[5]*=c,lt.elements[6]*=c,lt.elements[8]*=l,lt.elements[9]*=l,lt.elements[10]*=l,e.setFromRotationMatrix(lt),i.x=n,i.y=r,i.z=o,this}makePerspective(t,e,i,s,n,r,o=2e3){const a=this.elements,h=2*n/(e-t),c=2*n/(i-s),l=(e+t)/(e-t),u=(i+s)/(i-s);let d,p;if(o===2e3)d=-(r+n)/(r-n),p=-2*r*n/(r-n);else if(o===2001)d=-r/(r-n),p=-r*n/(r-n);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return a[0]=h,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=c,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,n,r,o=2e3){const a=this.elements,h=1/(e-t),c=1/(i-s),l=1/(r-n),u=(e+t)*h,d=(i+s)*c;let p,x;if(o===2e3)p=(r+n)*l,x=-2*l;else if(o===2001)p=n*l,x=-1*l;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=x,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const Ut=new y,lt=new nt,ws=new y(0,0,0),_s=new y(1,1,1),kt=new y,Be=new y,et=new y,Wi=new nt,Ui=new ee;class Ht{constructor(t=0,e=0,i=0,s=Ht.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,n=s[0],r=s[4],o=s[8],a=s[1],h=s[5],c=s[9],l=s[2],u=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(K(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-r,n)):(this._x=Math.atan2(u,h),this._z=0);break;case"YXZ":this._x=Math.asin(-K(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(a,h)):(this._y=Math.atan2(-l,n),this._z=0);break;case"ZXY":this._x=Math.asin(K(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-l,d),this._z=Math.atan2(-r,h)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-K(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-r,h));break;case"YZX":this._z=Math.asin(K(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-l,n)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-K(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-c,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return Wi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Wi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Ui.setFromEuler(this),this.setFromQuaternion(Ui,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ht.DEFAULT_ORDER="XYZ";class zs{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let As=0;const Hi=new y,Xt=new ee,wt=new nt,Ce=new y,ne=new y,Ss=new y,Fs=new ee,Xi=new y(1,0,0),Yi=new y(0,1,0),Gi=new y(0,0,1),Zi={type:"added"},Bs={type:"removed"},Yt={type:"childadded",child:null},ni={type:"childremoved",child:null};class ct extends Me{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:As++}),this.uuid=Kt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ct.DEFAULT_UP.clone();const t=new y,e=new Ht,i=new ee,s=new y(1,1,1);function n(){i.setFromEuler(e,!1)}function r(){e.setFromQuaternion(i,void 0,!1)}e._onChange(n),i._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new nt},normalMatrix:{value:new Ft}}),this.matrix=new nt,this.matrixWorld=new nt,this.matrixAutoUpdate=ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new zs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Xt.setFromAxisAngle(t,e),this.quaternion.multiply(Xt),this}rotateOnWorldAxis(t,e){return Xt.setFromAxisAngle(t,e),this.quaternion.premultiply(Xt),this}rotateX(t){return this.rotateOnAxis(Xi,t)}rotateY(t){return this.rotateOnAxis(Yi,t)}rotateZ(t){return this.rotateOnAxis(Gi,t)}translateOnAxis(t,e){return Hi.copy(t).applyQuaternion(this.quaternion),this.position.add(Hi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Xi,t)}translateY(t){return this.translateOnAxis(Yi,t)}translateZ(t){return this.translateOnAxis(Gi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(wt.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Ce.copy(t):Ce.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),ne.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?wt.lookAt(ne,Ce,this.up):wt.lookAt(Ce,ne,this.up),this.quaternion.setFromRotationMatrix(wt),s&&(wt.extractRotation(s.matrixWorld),Xt.setFromRotationMatrix(wt),this.quaternion.premultiply(Xt.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(Zi),Yt.child=t,this.dispatchEvent(Yt),Yt.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Bs),ni.child=t,this.dispatchEvent(ni),ni.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),wt.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),wt.multiply(t.parent.matrixWorld)),t.applyMatrix4(wt),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(Zi),Yt.child=t,this.dispatchEvent(Yt),Yt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const r=this.children[i].getObjectByProperty(t,e);if(r!==void 0)return r}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ne,t,Ss),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ne,Fs,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let n=0,r=s.length;n<r;n++)s[n].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function n(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let h=0,c=a.length;h<c;h++){const l=a[h];n(t.shapes,l)}else n(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,h=this.material.length;a<h;a++)o.push(n(t.materials,this.material[a]));s.material=o}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];s.animations.push(n(t.animations,a))}}if(e){const o=r(t.geometries),a=r(t.materials),h=r(t.textures),c=r(t.images),l=r(t.shapes),u=r(t.skeletons),d=r(t.animations),p=r(t.nodes);o.length>0&&(i.geometries=o),a.length>0&&(i.materials=a),h.length>0&&(i.textures=h),c.length>0&&(i.images=c),l.length>0&&(i.shapes=l),u.length>0&&(i.skeletons=u),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=s,i;function r(o){const a=[];for(const h in o){const c=o[h];delete c.metadata,a.push(c)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}ct.DEFAULT_UP=new y(0,1,0),ct.DEFAULT_MATRIX_AUTO_UPDATE=!0,ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const ut=new y,_t=new y,ri=new y,zt=new y,Gt=new y,Zt=new y,ji=new y,oi=new y,ai=new y,hi=new y;class mt{constructor(t=new y,e=new y,i=new y){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),ut.subVectors(t,e),s.cross(ut);const n=s.lengthSq();return n>0?s.multiplyScalar(1/Math.sqrt(n)):s.set(0,0,0)}static getBarycoord(t,e,i,s,n){ut.subVectors(s,e),_t.subVectors(i,e),ri.subVectors(t,e);const r=ut.dot(ut),o=ut.dot(_t),a=ut.dot(ri),h=_t.dot(_t),c=_t.dot(ri),l=r*h-o*o;if(l===0)return n.set(0,0,0),null;const u=1/l,d=(h*a-o*c)*u,p=(r*c-o*a)*u;return n.set(1-d-p,p,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,zt)===null?!1:zt.x>=0&&zt.y>=0&&zt.x+zt.y<=1}static getInterpolation(t,e,i,s,n,r,o,a){return this.getBarycoord(t,e,i,s,zt)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(n,zt.x),a.addScaledVector(r,zt.y),a.addScaledVector(o,zt.z),a)}static isFrontFacing(t,e,i,s){return ut.subVectors(i,e),_t.subVectors(t,e),ut.cross(_t).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ut.subVectors(this.c,this.b),_t.subVectors(this.a,this.b),ut.cross(_t).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return mt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return mt.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,n){return mt.getInterpolation(t,this.a,this.b,this.c,e,i,s,n)}containsPoint(t){return mt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return mt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,n=this.c;let r,o;Gt.subVectors(s,i),Zt.subVectors(n,i),oi.subVectors(t,i);const a=Gt.dot(oi),h=Zt.dot(oi);if(a<=0&&h<=0)return e.copy(i);ai.subVectors(t,s);const c=Gt.dot(ai),l=Zt.dot(ai);if(c>=0&&l<=c)return e.copy(s);const u=a*l-c*h;if(u<=0&&a>=0&&c<=0)return r=a/(a-c),e.copy(i).addScaledVector(Gt,r);hi.subVectors(t,n);const d=Gt.dot(hi),p=Zt.dot(hi);if(p>=0&&d<=p)return e.copy(n);const x=d*h-a*p;if(x<=0&&h>=0&&p<=0)return o=h/(h-p),e.copy(i).addScaledVector(Zt,o);const f=c*p-d*l;if(f<=0&&l-c>=0&&d-p>=0)return ji.subVectors(n,s),o=(l-c)/(l-c+(d-p)),e.copy(s).addScaledVector(ji,o);const g=1/(f+x+u);return r=x*g,o=u*g,e.copy(i).addScaledVector(Gt,r).addScaledVector(Zt,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const $i={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vt={h:0,s:0,l:0},Te={h:0,s:0,l:0};function li(m,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?m+(t-m)*6*e:e<1/2?t:e<2/3?m+(t-m)*6*(2/3-e):m}class it{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=St){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,at.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=at.workingColorSpace){return this.r=t,this.g=e,this.b=i,at.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=at.workingColorSpace){if(t=ds(t,1),e=K(e,0,1),i=K(i,0,1),e===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+e):i+e-i*e,r=2*i-n;this.r=li(r,n,t+1/3),this.g=li(r,n,t),this.b=li(r,n,t-1/3)}return at.toWorkingColorSpace(this,s),this}setStyle(t,e=St){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let n;const r=s[1],o=s[2];switch(r){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(255,parseInt(n[1],10))/255,Math.min(255,parseInt(n[2],10))/255,Math.min(255,parseInt(n[3],10))/255,e);if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setRGB(Math.min(100,parseInt(n[1],10))/100,Math.min(100,parseInt(n[2],10))/100,Math.min(100,parseInt(n[3],10))/100,e);break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(n[4]),this.setHSL(parseFloat(n[1])/360,parseFloat(n[2])/100,parseFloat(n[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const n=s[1],r=n.length;if(r===3)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,e);if(r===6)return this.setHex(parseInt(n,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=St){const i=$i[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ot(t.r),this.g=Ot(t.g),this.b=Ot(t.b),this}copyLinearToSRGB(t){return this.r=je(t.r),this.g=je(t.g),this.b=je(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=St){return at.fromWorkingColorSpace(Q.copy(this),t),Math.round(K(Q.r*255,0,255))*65536+Math.round(K(Q.g*255,0,255))*256+Math.round(K(Q.b*255,0,255))}getHexString(t=St){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=at.workingColorSpace){at.fromWorkingColorSpace(Q.copy(this),e);const i=Q.r,s=Q.g,n=Q.b,r=Math.max(i,s,n),o=Math.min(i,s,n);let a,h;const c=(o+r)/2;if(o===r)a=0,h=0;else{const l=r-o;switch(h=c<=.5?l/(r+o):l/(2-r-o),r){case i:a=(s-n)/l+(s<n?6:0);break;case s:a=(n-i)/l+2;break;case n:a=(i-s)/l+4;break}a/=6}return t.h=a,t.s=h,t.l=c,t}getRGB(t,e=at.workingColorSpace){return at.fromWorkingColorSpace(Q.copy(this),e),t.r=Q.r,t.g=Q.g,t.b=Q.b,t}getStyle(t=St){at.fromWorkingColorSpace(Q.copy(this),t);const e=Q.r,i=Q.g,s=Q.b;return t!==St?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(vt),this.setHSL(vt.h+t,vt.s+e,vt.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(vt),t.getHSL(Te);const i=Ge(vt.h,Te.h,e),s=Ge(vt.s,Te.s,e),n=Ge(vt.l,Te.l,e);return this.setHSL(i,s,n),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,n=t.elements;return this.r=n[0]*e+n[3]*i+n[6]*s,this.g=n[1]*e+n[4]*i+n[7]*s,this.b=n[2]*e+n[5]*i+n[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Q=new it;it.NAMES=$i;let Cs=0;class ci extends Me{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cs++}),this.uuid=Kt(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new it(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==204&&(i.blendSrc=this.blendSrc),this.blendDst!==205&&(i.blendDst=this.blendDst),this.blendEquation!==100&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==3&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==519&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==7680&&(i.stencilFail=this.stencilFail),this.stencilZFail!==7680&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==7680&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(n){const r=[];for(const o in n){const a=n[o];delete a.metadata,r.push(a)}return r}if(e){const n=s(t.textures),r=s(t.images);n.length>0&&(i.textures=n),r.length>0&&(i.images=r)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let n=0;n!==s;++n)i[n]=e[n].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}onBeforeRender(){console.warn("Material: onBeforeRender() has been removed.")}}class Ts extends ci{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new it(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ht,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Y=new y,ke=new G;class ft{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return ms("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ke.fromBufferAttribute(this,e),ke.applyMatrix3(t),this.setXY(e,ke.x,ke.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyMatrix3(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyMatrix4(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.applyNormalMatrix(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Y.fromBufferAttribute(this,e),Y.transformDirection(t),this.setXYZ(e,Y.x,Y.y,Y.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=te(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=tt(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=te(e,this.array)),e}setX(t,e){return this.normalized&&(e=tt(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=te(e,this.array)),e}setY(t,e){return this.normalized&&(e=tt(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=te(e,this.array)),e}setZ(t,e){return this.normalized&&(e=tt(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=te(e,this.array)),e}setW(t,e){return this.normalized&&(e=tt(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=tt(e,this.array),i=tt(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=tt(e,this.array),i=tt(i,this.array),s=tt(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,n){return t*=this.itemSize,this.normalized&&(e=tt(e,this.array),i=tt(i,this.array),s=tt(s,this.array),n=tt(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==35044&&(t.usage=this.usage),t}}class ks extends ft{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class vs extends ft{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class rt extends ft{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Es=0;const ot=new nt,ui=new ct,jt=new y,st=new pt,re=new pt,Z=new y;class Et extends Me{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Es++}),this.uuid=Kt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ps(t)?vs:ks)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Ft().getNormalMatrix(t);i.applyNormalMatrix(n),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ot.makeRotationFromQuaternion(t),this.applyMatrix4(ot),this}rotateX(t){return ot.makeRotationX(t),this.applyMatrix4(ot),this}rotateY(t){return ot.makeRotationY(t),this.applyMatrix4(ot),this}rotateZ(t){return ot.makeRotationZ(t),this.applyMatrix4(ot),this}translate(t,e,i){return ot.makeTranslation(t,e,i),this.applyMatrix4(ot),this}scale(t,e,i){return ot.makeScale(t,e,i),this.applyMatrix4(ot),this}lookAt(t){return ui.lookAt(t),ui.updateMatrix(),this.applyMatrix4(ui.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(jt).negate(),this.translate(jt.x,jt.y,jt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const n=t[i];e.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new rt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new pt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new y(-1/0,-1/0,-1/0),new y(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const n=e[i];st.setFromBufferAttribute(n),this.morphTargetsRelative?(Z.addVectors(this.boundingBox.min,st.min),this.boundingBox.expandByPoint(Z),Z.addVectors(this.boundingBox.max,st.max),this.boundingBox.expandByPoint(Z)):(this.boundingBox.expandByPoint(st.min),this.boundingBox.expandByPoint(st.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ti);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new y,1/0);return}if(t){const i=this.boundingSphere.center;if(st.setFromBufferAttribute(t),e)for(let n=0,r=e.length;n<r;n++){const o=e[n];re.setFromBufferAttribute(o),this.morphTargetsRelative?(Z.addVectors(st.min,re.min),st.expandByPoint(Z),Z.addVectors(st.max,re.max),st.expandByPoint(Z)):(st.expandByPoint(re.min),st.expandByPoint(re.max))}st.getCenter(i);let s=0;for(let n=0,r=t.count;n<r;n++)Z.fromBufferAttribute(t,n),s=Math.max(s,i.distanceToSquared(Z));if(e)for(let n=0,r=e.length;n<r;n++){const o=e[n],a=this.morphTargetsRelative;for(let h=0,c=o.count;h<c;h++)Z.fromBufferAttribute(o,h),a&&(jt.fromBufferAttribute(t,h),Z.add(jt)),s=Math.max(s,i.distanceToSquared(Z))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,n=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ft(new Float32Array(4*i.count),4));const r=this.getAttribute("tangent"),o=[],a=[];for(let A=0;A<i.count;A++)o[A]=new y,a[A]=new y;const h=new y,c=new y,l=new y,u=new G,d=new G,p=new G,x=new y,f=new y;function g(A,T,B){h.fromBufferAttribute(i,A),c.fromBufferAttribute(i,T),l.fromBufferAttribute(i,B),u.fromBufferAttribute(n,A),d.fromBufferAttribute(n,T),p.fromBufferAttribute(n,B),c.sub(h),l.sub(h),d.sub(u),p.sub(u);const C=1/(d.x*p.y-p.x*d.y);isFinite(C)&&(x.copy(c).multiplyScalar(p.y).addScaledVector(l,-d.y).multiplyScalar(C),f.copy(l).multiplyScalar(d.x).addScaledVector(c,-p.x).multiplyScalar(C),o[A].add(x),o[T].add(x),o[B].add(x),a[A].add(f),a[T].add(f),a[B].add(f))}let b=this.groups;b.length===0&&(b=[{start:0,count:t.count}]);for(let A=0,T=b.length;A<T;++A){const B=b[A],C=B.start,E=B.count;for(let k=C,P=C+E;k<P;k+=3)g(t.getX(k+0),t.getX(k+1),t.getX(k+2))}const w=new y,M=new y,S=new y,F=new y;function z(A){S.fromBufferAttribute(s,A),F.copy(S);const T=o[A];w.copy(T),w.sub(S.multiplyScalar(S.dot(T))).normalize(),M.crossVectors(F,T);const C=M.dot(a[A])<0?-1:1;r.setXYZW(A,w.x,w.y,w.z,C)}for(let A=0,T=b.length;A<T;++A){const B=b[A],C=B.start,E=B.count;for(let k=C,P=C+E;k<P;k+=3)z(t.getX(k+0)),z(t.getX(k+1)),z(t.getX(k+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ft(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let u=0,d=i.count;u<d;u++)i.setXYZ(u,0,0,0);const s=new y,n=new y,r=new y,o=new y,a=new y,h=new y,c=new y,l=new y;if(t)for(let u=0,d=t.count;u<d;u+=3){const p=t.getX(u+0),x=t.getX(u+1),f=t.getX(u+2);s.fromBufferAttribute(e,p),n.fromBufferAttribute(e,x),r.fromBufferAttribute(e,f),c.subVectors(r,n),l.subVectors(s,n),c.cross(l),o.fromBufferAttribute(i,p),a.fromBufferAttribute(i,x),h.fromBufferAttribute(i,f),o.add(c),a.add(c),h.add(c),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(x,a.x,a.y,a.z),i.setXYZ(f,h.x,h.y,h.z)}else for(let u=0,d=e.count;u<d;u+=3)s.fromBufferAttribute(e,u+0),n.fromBufferAttribute(e,u+1),r.fromBufferAttribute(e,u+2),c.subVectors(r,n),l.subVectors(s,n),c.cross(l),i.setXYZ(u+0,c.x,c.y,c.z),i.setXYZ(u+1,c.x,c.y,c.z),i.setXYZ(u+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Z.fromBufferAttribute(t,e),Z.normalize(),t.setXYZ(e,Z.x,Z.y,Z.z)}toNonIndexed(){function t(o,a){const h=o.array,c=o.itemSize,l=o.normalized,u=new h.constructor(a.length*c);let d=0,p=0;for(let x=0,f=a.length;x<f;x++){o.isInterleavedBufferAttribute?d=a[x]*o.data.stride+o.offset:d=a[x]*c;for(let g=0;g<c;g++)u[p++]=h[d++]}return new ft(u,c,l)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Et,i=this.index.array,s=this.attributes;for(const o in s){const a=s[o],h=t(a,i);e.setAttribute(o,h)}const n=this.morphAttributes;for(const o in n){const a=[],h=n[o];for(let c=0,l=h.length;c<l;c++){const u=h[c],d=t(u,i);a.push(d)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let o=0,a=r.length;o<a;o++){const h=r[o];e.addGroup(h.start,h.count,h.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const h in a)a[h]!==void 0&&(t[h]=a[h]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const h=i[a];t.data.attributes[a]=h.toJSON(t.data)}const s={};let n=!1;for(const a in this.morphAttributes){const h=this.morphAttributes[a],c=[];for(let l=0,u=h.length;l<u;l++){const d=h[l];c.push(d.toJSON(t.data))}c.length>0&&(s[a]=c,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const h in s){const c=s[h];this.setAttribute(h,c.clone(e))}const n=t.morphAttributes;for(const h in n){const c=[],l=n[h];for(let u=0,d=l.length;u<d;u++)c.push(l[u].clone(e));this.morphAttributes[h]=c}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let h=0,c=r.length;h<c;h++){const l=r[h];this.addGroup(l.start,l.count,l.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ji=new nt,Nt=new Vi,ve=new ti,Qi=new y,$t=new y,Jt=new y,Qt=new y,di=new y,Ee=new y,Re=new G,Ie=new G,De=new G,Ki=new y,ts=new y,es=new y,Pe=new y,Ne=new y;class Rs extends ct{constructor(t=new Et,e=new Ts){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,n=i.morphAttributes.position,r=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(n&&o){Ee.set(0,0,0);for(let a=0,h=n.length;a<h;a++){const c=o[a],l=n[a];c!==0&&(di.fromBufferAttribute(l,t),r?Ee.addScaledVector(di,c):Ee.addScaledVector(di.sub(e),c))}e.add(Ee)}return e}raycast(t,e){const i=this.geometry,s=this.material,n=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ve.copy(i.boundingSphere),ve.applyMatrix4(n),Nt.copy(t.ray).recast(t.near),!(ve.containsPoint(Nt.origin)===!1&&(Nt.intersectSphere(ve,Qi)===null||Nt.origin.distanceToSquared(Qi)>(t.far-t.near)**2))&&(Ji.copy(n).invert(),Nt.copy(t.ray).applyMatrix4(Ji),!(i.boundingBox!==null&&Nt.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,Nt)))}_computeIntersections(t,e,i){let s;const n=this.geometry,r=this.material,o=n.index,a=n.attributes.position,h=n.attributes.uv,c=n.attributes.uv1,l=n.attributes.normal,u=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(r))for(let p=0,x=u.length;p<x;p++){const f=u[p],g=r[f.materialIndex],b=Math.max(f.start,d.start),w=Math.min(o.count,Math.min(f.start+f.count,d.start+d.count));for(let M=b,S=w;M<S;M+=3){const F=o.getX(M),z=o.getX(M+1),A=o.getX(M+2);s=Oe(this,g,t,i,h,c,l,F,z,A),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=f.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),x=Math.min(o.count,d.start+d.count);for(let f=p,g=x;f<g;f+=3){const b=o.getX(f),w=o.getX(f+1),M=o.getX(f+2);s=Oe(this,r,t,i,h,c,l,b,w,M),s&&(s.faceIndex=Math.floor(f/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(r))for(let p=0,x=u.length;p<x;p++){const f=u[p],g=r[f.materialIndex],b=Math.max(f.start,d.start),w=Math.min(a.count,Math.min(f.start+f.count,d.start+d.count));for(let M=b,S=w;M<S;M+=3){const F=M,z=M+1,A=M+2;s=Oe(this,g,t,i,h,c,l,F,z,A),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=f.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),x=Math.min(a.count,d.start+d.count);for(let f=p,g=x;f<g;f+=3){const b=f,w=f+1,M=f+2;s=Oe(this,r,t,i,h,c,l,b,w,M),s&&(s.faceIndex=Math.floor(f/3),e.push(s))}}}}function Is(m,t,e,i,s,n,r,o){let a;if(t.side===1?a=i.intersectTriangle(r,n,s,!0,o):a=i.intersectTriangle(s,n,r,t.side===0,o),a===null)return null;Ne.copy(o),Ne.applyMatrix4(m.matrixWorld);const h=e.ray.origin.distanceTo(Ne);return h<e.near||h>e.far?null:{distance:h,point:Ne.clone(),object:m}}function Oe(m,t,e,i,s,n,r,o,a,h){m.getVertexPosition(o,$t),m.getVertexPosition(a,Jt),m.getVertexPosition(h,Qt);const c=Is(m,t,e,i,$t,Jt,Qt,Pe);if(c){s&&(Re.fromBufferAttribute(s,o),Ie.fromBufferAttribute(s,a),De.fromBufferAttribute(s,h),c.uv=mt.getInterpolation(Pe,$t,Jt,Qt,Re,Ie,De,new G)),n&&(Re.fromBufferAttribute(n,o),Ie.fromBufferAttribute(n,a),De.fromBufferAttribute(n,h),c.uv1=mt.getInterpolation(Pe,$t,Jt,Qt,Re,Ie,De,new G)),r&&(Ki.fromBufferAttribute(r,o),ts.fromBufferAttribute(r,a),es.fromBufferAttribute(r,h),c.normal=mt.getInterpolation(Pe,$t,Jt,Qt,Ki,ts,es,new y),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const l={a:o,b:a,c:h,normal:new y,materialIndex:0};mt.getNormal($t,Jt,Qt,l.normal),c.face=l}return c}class pi extends Et{constructor(t=1,e=1,i=1,s=1,n=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:s,heightSegments:n,depthSegments:r};const o=this;s=Math.floor(s),n=Math.floor(n),r=Math.floor(r);const a=[],h=[],c=[],l=[];let u=0,d=0;p("z","y","x",-1,-1,i,e,t,r,n,0),p("z","y","x",1,-1,i,e,-t,r,n,1),p("x","z","y",1,1,t,i,e,s,r,2),p("x","z","y",1,-1,t,i,-e,s,r,3),p("x","y","z",1,-1,t,e,i,s,n,4),p("x","y","z",-1,-1,t,e,-i,s,n,5),this.setIndex(a),this.setAttribute("position",new rt(h,3)),this.setAttribute("normal",new rt(c,3)),this.setAttribute("uv",new rt(l,2));function p(x,f,g,b,w,M,S,F,z,A,T){const B=M/z,C=S/A,E=M/2,k=S/2,P=F/2,N=z+1,H=A+1;let I=0,j=0;const _=new y;for(let R=0;R<H;R++){const O=R*C-k;for(let L=0;L<N;L++){const V=L*B-E;_[x]=V*b,_[f]=O*w,_[g]=P,h.push(_.x,_.y,_.z),_[x]=0,_[f]=0,_[g]=F>0?1:-1,c.push(_.x,_.y,_.z),l.push(L/z),l.push(1-R/A),I+=1}}for(let R=0;R<A;R++)for(let O=0;O<z;O++){const L=u+O+N*R,V=u+O+N*(R+1),D=u+(O+1)+N*(R+1),v=u+(O+1)+N*R;a.push(L,V,v),a.push(V,D,v),j+=6}o.addGroup(d,j,T),d+=j,u+=I}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new pi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}class qe extends Et{constructor(t=1,e=1,i=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:s};const n=t/2,r=e/2,o=Math.floor(i),a=Math.floor(s),h=o+1,c=a+1,l=t/o,u=e/a,d=[],p=[],x=[],f=[];for(let g=0;g<c;g++){const b=g*u-r;for(let w=0;w<h;w++){const M=w*l-n;p.push(M,-b,0),x.push(0,0,1),f.push(w/o),f.push(1-g/a)}}for(let g=0;g<a;g++)for(let b=0;b<o;b++){const w=b+h*g,M=b+h*(g+1),S=b+1+h*(g+1),F=b+1+h*g;d.push(w,M,F),d.push(M,S,F)}this.setIndex(d),this.setAttribute("position",new rt(p,3)),this.setAttribute("normal",new rt(x,3)),this.setAttribute("uv",new rt(f,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new qe(t.width,t.height,t.widthSegments,t.heightSegments)}}class is extends ci{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new it(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const ss=new nt,mi=new Vi,Le=new ti,Ve=new y;class Ds extends ct{constructor(t=new Et,e=new is){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,s=this.matrixWorld,n=t.params.Points.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Le.copy(i.boundingSphere),Le.applyMatrix4(s),Le.radius+=n,t.ray.intersectsSphere(Le)===!1)return;ss.copy(s).invert(),mi.copy(t.ray).applyMatrix4(ss);const o=n/((this.scale.x+this.scale.y+this.scale.z)/3),a=o*o,h=i.index,l=i.attributes.position;if(h!==null){const u=Math.max(0,r.start),d=Math.min(h.count,r.start+r.count);for(let p=u,x=d;p<x;p++){const f=h.getX(p);Ve.fromBufferAttribute(l,f),ns(Ve,f,a,s,t,e,this)}}else{const u=Math.max(0,r.start),d=Math.min(l.count,r.start+r.count);for(let p=u,x=d;p<x;p++)Ve.fromBufferAttribute(l,p),ns(Ve,p,a,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,r=s.length;n<r;n++){const o=s[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=n}}}}}function ns(m,t,e,i,s,n,r){const o=mi.distanceSqToPoint(m);if(o<e){const a=new y;mi.closestPointToPoint(m,a),a.applyMatrix4(i);const h=s.ray.origin.distanceTo(a);if(h<s.near||h>s.far)return;n.push({distance:h,distanceToRay:Math.sqrt(o),point:a,index:t,face:null,object:r})}}class fi extends Et{constructor(t=[],e=[],i=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:s};const n=[],r=[];o(s),h(i),c(),this.setAttribute("position",new rt(n,3)),this.setAttribute("normal",new rt(n.slice(),3)),this.setAttribute("uv",new rt(r,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function o(b){const w=new y,M=new y,S=new y;for(let F=0;F<e.length;F+=3)d(e[F+0],w),d(e[F+1],M),d(e[F+2],S),a(w,M,S,b)}function a(b,w,M,S){const F=S+1,z=[];for(let A=0;A<=F;A++){z[A]=[];const T=b.clone().lerp(M,A/F),B=w.clone().lerp(M,A/F),C=F-A;for(let E=0;E<=C;E++)E===0&&A===F?z[A][E]=T:z[A][E]=T.clone().lerp(B,E/C)}for(let A=0;A<F;A++)for(let T=0;T<2*(F-A)-1;T++){const B=Math.floor(T/2);T%2===0?(u(z[A][B+1]),u(z[A+1][B]),u(z[A][B])):(u(z[A][B+1]),u(z[A+1][B+1]),u(z[A+1][B]))}}function h(b){const w=new y;for(let M=0;M<n.length;M+=3)w.x=n[M+0],w.y=n[M+1],w.z=n[M+2],w.normalize().multiplyScalar(b),n[M+0]=w.x,n[M+1]=w.y,n[M+2]=w.z}function c(){const b=new y;for(let w=0;w<n.length;w+=3){b.x=n[w+0],b.y=n[w+1],b.z=n[w+2];const M=f(b)/2/Math.PI+.5,S=g(b)/Math.PI+.5;r.push(M,1-S)}p(),l()}function l(){for(let b=0;b<r.length;b+=6){const w=r[b+0],M=r[b+2],S=r[b+4],F=Math.max(w,M,S),z=Math.min(w,M,S);F>.9&&z<.1&&(w<.2&&(r[b+0]+=1),M<.2&&(r[b+2]+=1),S<.2&&(r[b+4]+=1))}}function u(b){n.push(b.x,b.y,b.z)}function d(b,w){const M=b*3;w.x=t[M+0],w.y=t[M+1],w.z=t[M+2]}function p(){const b=new y,w=new y,M=new y,S=new y,F=new G,z=new G,A=new G;for(let T=0,B=0;T<n.length;T+=9,B+=6){b.set(n[T+0],n[T+1],n[T+2]),w.set(n[T+3],n[T+4],n[T+5]),M.set(n[T+6],n[T+7],n[T+8]),F.set(r[B+0],r[B+1]),z.set(r[B+2],r[B+3]),A.set(r[B+4],r[B+5]),S.copy(b).add(w).add(M).divideScalar(3);const C=f(S);x(F,B+0,b,C),x(z,B+2,w,C),x(A,B+4,M,C)}}function x(b,w,M,S){S<0&&b.x===1&&(r[w]=b.x-1),M.x===0&&M.z===0&&(r[w]=S/2/Math.PI+.5)}function f(b){return Math.atan2(b.z,-b.x)}function g(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new fi(t.vertices,t.indices,t.radius,t.details)}}class We extends fi{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,s=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(s,n,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new We(t.radius,t.detail)}}class rs extends ci{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new it(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new it(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ht,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ki}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ki);const os=Math.sqrt(3),as=Math.sqrt(5),Ps=.5*(os-1),oe=(3-os)/6,Ns=1/3,yt=1/6,Os=(as-1)/4,$=(5-as)/20,At=m=>Math.floor(m)|0,hs=new Float64Array([1,1,-1,1,1,-1,-1,-1,1,0,-1,0,1,0,-1,0,0,1,0,-1,0,1,0,-1]),yi=new Float64Array([1,1,0,-1,1,0,1,-1,0,-1,-1,0,1,0,1,-1,0,1,1,0,-1,-1,0,-1,0,1,1,0,-1,1,0,1,-1,0,-1,-1]),Ue=new Float64Array([0,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,1,0,1,1,1,0,1,-1,1,0,-1,1,1,0,-1,-1,-1,0,1,1,-1,0,1,-1,-1,0,-1,1,-1,0,-1,-1,1,1,0,1,1,1,0,-1,1,-1,0,1,1,-1,0,-1,-1,1,0,1,-1,1,0,-1,-1,-1,0,1,-1,-1,0,-1,1,1,1,0,1,1,-1,0,1,-1,1,0,1,-1,-1,0,-1,1,1,0,-1,1,-1,0,-1,-1,1,0,-1,-1,-1,0]);function qs(m=Math.random){const t=xi(m),e=new Float64Array(t).map(s=>hs[s%12*2]),i=new Float64Array(t).map(s=>hs[s%12*2+1]);return function(n,r){let o=0,a=0,h=0;const c=(n+r)*Ps,l=At(n+c),u=At(r+c),d=(l+u)*oe,p=l-d,x=u-d,f=n-p,g=r-x;let b,w;f>g?(b=1,w=0):(b=0,w=1);const M=f-b+oe,S=g-w+oe,F=f-1+2*oe,z=g-1+2*oe,A=l&255,T=u&255;let B=.5-f*f-g*g;if(B>=0){const k=A+t[T],P=e[k],N=i[k];B*=B,o=B*B*(P*f+N*g)}let C=.5-M*M-S*S;if(C>=0){const k=A+b+t[T+w],P=e[k],N=i[k];C*=C,a=C*C*(P*M+N*S)}let E=.5-F*F-z*z;if(E>=0){const k=A+1+t[T+1],P=e[k],N=i[k];E*=E,h=E*E*(P*F+N*z)}return 70*(o+a+h)}}function Ls(m=Math.random){const t=xi(m),e=new Float64Array(t).map(n=>yi[n%12*3]),i=new Float64Array(t).map(n=>yi[n%12*3+1]),s=new Float64Array(t).map(n=>yi[n%12*3+2]);return function(r,o,a){let h,c,l,u;const d=(r+o+a)*Ns,p=At(r+d),x=At(o+d),f=At(a+d),g=(p+x+f)*yt,b=p-g,w=x-g,M=f-g,S=r-b,F=o-w,z=a-M;let A,T,B,C,E,k;S>=F?F>=z?(A=1,T=0,B=0,C=1,E=1,k=0):S>=z?(A=1,T=0,B=0,C=1,E=0,k=1):(A=0,T=0,B=1,C=1,E=0,k=1):F<z?(A=0,T=0,B=1,C=0,E=1,k=1):S<z?(A=0,T=1,B=0,C=0,E=1,k=1):(A=0,T=1,B=0,C=1,E=1,k=0);const P=S-A+yt,N=F-T+yt,H=z-B+yt,I=S-C+2*yt,j=F-E+2*yt,_=z-k+2*yt,R=S-1+3*yt,O=F-1+3*yt,L=z-1+3*yt,V=p&255,D=x&255,v=f&255;let dt=.6-S*S-F*F-z*z;if(dt<0)h=0;else{const X=V+t[D+t[v]];dt*=dt,h=dt*dt*(e[X]*S+i[X]*F+s[X]*z)}let U=.6-P*P-N*N-H*H;if(U<0)c=0;else{const X=V+A+t[D+T+t[v+B]];U*=U,c=U*U*(e[X]*P+i[X]*N+s[X]*H)}let q=.6-I*I-j*j-_*_;if(q<0)l=0;else{const X=V+C+t[D+E+t[v+k]];q*=q,l=q*q*(e[X]*I+i[X]*j+s[X]*_)}let gt=.6-R*R-O*O-L*L;if(gt<0)u=0;else{const X=V+1+t[D+1+t[v+1]];gt*=gt,u=gt*gt*(e[X]*R+i[X]*O+s[X]*L)}return 32*(h+c+l+u)}}function Vs(m=Math.random){const t=xi(m),e=new Float64Array(t).map(r=>Ue[r%32*4]),i=new Float64Array(t).map(r=>Ue[r%32*4+1]),s=new Float64Array(t).map(r=>Ue[r%32*4+2]),n=new Float64Array(t).map(r=>Ue[r%32*4+3]);return function(o,a,h,c){let l,u,d,p,x;const f=(o+a+h+c)*Os,g=At(o+f),b=At(a+f),w=At(h+f),M=At(c+f),S=(g+b+w+M)*$,F=g-S,z=b-S,A=w-S,T=M-S,B=o-F,C=a-z,E=h-A,k=c-T;let P=0,N=0,H=0,I=0;B>C?P++:N++,B>E?P++:H++,B>k?P++:I++,C>E?N++:H++,C>k?N++:I++,E>k?H++:I++;const j=P>=3?1:0,_=N>=3?1:0,R=H>=3?1:0,O=I>=3?1:0,L=P>=2?1:0,V=N>=2?1:0,D=H>=2?1:0,v=I>=2?1:0,dt=P>=1?1:0,U=N>=1?1:0,q=H>=1?1:0,gt=I>=1?1:0,X=B-j+$,ae=C-_+$,he=E-R+$,le=k-O+$,ce=B-L+2*$,bi=C-V+2*$,Mi=E-D+2*$,wi=k-v+2*$,_i=B-dt+3*$,zi=C-U+3*$,Ai=E-q+3*$,Si=k-gt+3*$,Fi=B-1+4*$,Bi=C-1+4*$,Ci=E-1+4*$,Ti=k-1+4*$,ue=g&255,de=b&255,pe=w&255,me=M&255;let fe=.6-B*B-C*C-E*E-k*k;if(fe<0)l=0;else{const W=ue+t[de+t[pe+t[me]]];fe*=fe,l=fe*fe*(e[W]*B+i[W]*C+s[W]*E+n[W]*k)}let ye=.6-X*X-ae*ae-he*he-le*le;if(ye<0)u=0;else{const W=ue+j+t[de+_+t[pe+R+t[me+O]]];ye*=ye,u=ye*ye*(e[W]*X+i[W]*ae+s[W]*he+n[W]*le)}let xe=.6-ce*ce-bi*bi-Mi*Mi-wi*wi;if(xe<0)d=0;else{const W=ue+L+t[de+V+t[pe+D+t[me+v]]];xe*=xe,d=xe*xe*(e[W]*ce+i[W]*bi+s[W]*Mi+n[W]*wi)}let ge=.6-_i*_i-zi*zi-Ai*Ai-Si*Si;if(ge<0)p=0;else{const W=ue+dt+t[de+U+t[pe+q+t[me+gt]]];ge*=ge,p=ge*ge*(e[W]*_i+i[W]*zi+s[W]*Ai+n[W]*Si)}let be=.6-Fi*Fi-Bi*Bi-Ci*Ci-Ti*Ti;if(be<0)x=0;else{const W=ue+1+t[de+1+t[pe+1+t[me+1]]];be*=be,x=be*be*(e[W]*Fi+i[W]*Bi+s[W]*Ci+n[W]*Ti)}return 27*(l+u+d+p+x)}}function xi(m){const e=new Uint8Array(512);for(let i=0;i<512/2;i++)e[i]=i;for(let i=0;i<512/2-1;i++){const s=i+~~(m()*(256-i)),n=e[i];e[i]=e[s],e[s]=n}for(let i=256;i<512;i++)e[i]=e[i-256];return e}var Ws=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Us(m){return m&&m.__esModule&&Object.prototype.hasOwnProperty.call(m,"default")?m.default:m}var ls={exports:{}};(function(m,t){(function(e,i){m.exports=i()})(Ws,function(){return e.importState=function(s){var n=new e;return n.importState(s),n},e;function e(){return function(s){var n=0,r=0,o=0,a=1;s.length==0&&(s=[+new Date]);var h=i();n=h(" "),r=h(" "),o=h(" ");for(var c=0;c<s.length;c++)n-=h(s[c]),n<0&&(n+=1),r-=h(s[c]),r<0&&(r+=1),o-=h(s[c]),o<0&&(o+=1);h=null;var l=function(){var u=2091639*n+a*23283064365386963e-26;return n=r,r=o,o=u-(a=u|0)};return l.next=l,l.uint32=function(){return l()*4294967296},l.fract53=function(){return l()+(l()*2097152|0)*11102230246251565e-32},l.version="Alea 0.9",l.args=s,l.exportState=function(){return[n,r,o,a]},l.importState=function(u){n=+u[0]||0,r=+u[1]||0,o=+u[2]||0,a=+u[3]||0},l}(Array.prototype.slice.call(arguments))}function i(){var s=4022871197,n=function(r){r=r.toString();for(var o=0;o<r.length;o++){s+=r.charCodeAt(o);var a=.02519603282416938*s;s=a>>>0,a-=s,a*=s,s=a>>>0,a-=s,s+=a*4294967296}return(s>>>0)*23283064365386963e-26};return n.version="Mash 0.9",n}})})(ls);var Hs=ls.exports,Xs=Us(Hs);function cs(m,t,e){return(t-m)*e+m}class xt{noise2D;noise3D;noise4D;seed;_min=-1;_max=1;_scale=1;_power=1;shift={x:0,y:0};octaves=0;_gain=.5;_lacunarity=2;amps=[];_erosion=0;_sharpness=0;_steps=0;_warp=0;_warpNoise;_warp2=0;_warpNoise2;tileX=!1;tileY=!1;position={x:0,y:0};pngr;layers=[];constructor(t={}){this.seed=t.seed??Math.random(),this.pngr=Xs(this.seed),this.min=t.min??-1,this.max=t.max??1,this.scale=t.scale??1,this.power=t.power??1,this.octaves=t.octaves??t.layers?.length??0,this.gain=t.gain??.5,this.lacunarity=t.lacunarity??2,this.sharpness=t.sharpness??0,this.steps=t.steps??0,this.warp=t.warp??0,this.warpNoise=t.warpNoise,this.warp2=t.warp2??0,this.warpNoise2=t.warpNoise2,this.amps=t.amps??[],this.tileX=t.tileX??t.tile??!1,this.tileY=t.tileY??t.tile??!1,this.createLayers(t)}createLayers(t){for(let e=0;e<this.octaves;e++){const i=t.layers?.[e]??{};if(i instanceof xt){this.layers[e]=i;continue}i.seed===void 0&&(i.seed=this.pngr()),this.layers[e]=new xt(i)}this.layers.length==0&&(this.noise2D=qs(this.pngr),this.noise3D=Ls(this.pngr),this.noise4D=Vs(this.pngr))}warpPosition(t,e){if(t==null||t==0)return;e!=null&&(e.position=this.position);let i=this.position.x,s=this.position.y,n=this.position.z,r=this.position.w;const o=e??this,a=this.scale;this.position.x=i+54.47*a,this.position.y=s-34.98*a,n!=null&&(this.position.z=n+21.63*a),r!=null&&(this.position.w=r-67.1*a),i+=o.getFBM()*t,s+=o.getFBM()*t,n!=null&&(n+=o.getFBM()*t),r!=null&&(r+=o.getFBM()*t),this.position.x=i,this.position.y=s,this.position.z=n,this.position.w=r}tilePosition(){if(!this.tileX&&!this.tileY)return;const t=this.position.x,e=this.position.y;let i=0,s=0,n=0,r=0;this.tileX&&(i=Math.sin(t*Math.PI*2),s=Math.cos(t*Math.PI*2)),this.tileY&&(n=Math.sin(e*Math.PI*2),r=Math.cos(e*Math.PI*2)),this.tileX&&!this.tileY?(this.position.x=i,this.position.y=s+e):this.tileY&&!this.tileX?(this.position.x=n+t,this.position.y=r):this.tileX&&this.tileY&&(this.position.x=i,this.position.y=s,this.position.z=n,this.position.w=r)}getFBM(){const t=this.position.x,e=this.position.y,i=this.position.z,s=this.position.w,n=this.scale;if(this.layers.length==0)return i!=null&&s!=null&&this.noise4D!=null?this.noise4D(t*n,e*n,i*n,s*n):i!=null&&this.noise3D!=null?this.noise3D(t*n,e*n,i*n):this.noise2D!=null?this.noise2D(t*n,e*n):0;let r=1,o=1,a=n;const h=this.lacunarity,c=this.gain;let l=0;for(let u=0;u<this.octaves;u++){const d=this.layers[u],p=this.amps[u]??1,x=d.get(t*a,e*a,i!=null?i*a:void 0,s!=null?s*a:void 0)*o*p;l+=x,o*=c,a*=h,r+=o*p}return l/r}applyShift(){const t=this.shift;t!==void 0&&(this.position.x+=t.x,this.position.y+=t.y,this.position.z&&(this.position.z+=t.z??0),this.position.w&&(this.position.w+=t.w??0))}applyPower(t){const e=this.power;return e!=1&&(t=(Math.pow((t+1)*.5,e)-.5)*2),t}applySharpness(t){const e=this.sharpness;if(e!=0){const i=(Math.abs(t)-.5)*2,s=(.5-Math.abs(t))*2;t=cs(t,i,Math.max(0,e)),t=cs(t,s,Math.max(0,-e))}return t}applySteps(t){const e=this.steps;return e!=0&&(t=(t+1)*.5,t=Math.floor(t*e)/e,t=t*2-1),t}getNoise(t,e,i=void 0,s=void 0){this.position.x=t,this.position.y=e,this.position.z=i,this.position.w=s,this.applyShift(),this.tilePosition(),this.warpPosition(this.warp,this.warpNoise),this.warpPosition(this.warp2,this.warpNoise2);let n=this.getFBM();return n=this.applyPower(n),n=this.applySharpness(n),n=this.applySteps(n),n}get(t,e=void 0,i=void 0,s=void 0){const n=this.normalized(t,e,i,s);return this.normalizedToMinMax(n)}normalized(t,e=void 0,i=void 0,s=void 0){return Array.isArray(t)?(s=t[3],i=t[2],e=t[1],t=t[0]):typeof t=="object"&&(s=t.w,i=t.z,e=t.y,t=t.x),e=e??0,this.getNoise(t,e,i,s)}minMaxToNormalized(t){return(t-this.min)/(this.max-this.min)*2-1}normalizedToMinMax(t){return(t+1)*.5*(this.max-this.min)+this.min}move(t,e,i=void 0,s=void 0){if(!this.shift){this.shift={x:t,y:e,z:i,w:s};return}this.shift.x+=t,this.shift.y+=e,i!=null&&(this.shift.z=(this.shift.z??0)+i),s!=null&&(this.shift.w=(this.shift.w??0)+s)}checkParameterInput(t){return typeof t=="object"&&!(t instanceof xt)&&(t.seed===void 0&&(t.seed=this.pngr()),t=new xt(t)),t}getParameter(t){return typeof t=="number"?t:t.get(this.position)}get min(){return this.getParameter(this._min)}set min(t){this._min=this.checkParameterInput(t)}get max(){return this.getParameter(this._max)}set max(t){this._max=this.checkParameterInput(t)}get scale(){return this.getParameter(this._scale)}set scale(t){this._scale=this.checkParameterInput(t)}get power(){return this.getParameter(this._power)}set power(t){this._power=this.checkParameterInput(t)}get gain(){return this.getParameter(this._gain)}set gain(t){this._gain=this.checkParameterInput(t)}get lacunarity(){return this.getParameter(this._lacunarity)}set lacunarity(t){this._lacunarity=this.checkParameterInput(t)}get erosion(){return this.getParameter(this._erosion)}set erosion(t){this._erosion=this.checkParameterInput(t)}get sharpness(){return this.getParameter(this._sharpness)}set sharpness(t){this._sharpness=this.checkParameterInput(t)}get steps(){return Math.round(this.getParameter(this._steps))}set steps(t){this._steps=this.checkParameterInput(t)}get warp(){return this.getParameter(this._warp)}set warp(t){this._warp=this.checkParameterInput(t)}get warpNoise(){return this._warpNoise}set warpNoise(t){if(t==null){this._warpNoise=void 0;return}const e=this.checkParameterInput(t);e instanceof xt&&(this._warpNoise=e)}get warp2(){return this.getParameter(this._warp2)}set warp2(t){this._warp2=this.checkParameterInput(t)}get warpNoise2(){return this._warpNoise2}set warpNoise2(t){if(t==null){this._warpNoise2=void 0;return}const e=this.checkParameterInput(t);e instanceof xt&&(this._warpNoise2=e)}}const He=new it(16711884);class Rt{constructor(t={}){this.hsl=!1,this.isColorGradient=!0,this.defaultMod=void 0,this.stops=[],t instanceof Array&&(t={stops:t}),this.hsl=t.hsl??!1,this.defaultMod=t.mod,t.between&&this.addBetween(t.between,t.min,t.max),t.stops&&this.addStops(t.stops)}addStops(t){for(const e of t)this.addStop(e)}addBetween(t,e=-1,i=1){t.length<2&&console.warn("ColorGradient: addBetween requires at least 2 stops");const s=(i-e)/(t.length-1);for(let n=0;n<t.length;n++)this.addStop([n*s+e,t[n]])}addStop(t){let e,i,s;t instanceof Array?(e=t[0],i=t[1],t.length>2&&(s=t[2])):(e=t.position,i=t.value,s=t.mod),typeof i=="number"?i=new it(i):!(i instanceof it)&&!(i instanceof Rt)&&(i=new Rt(i));let n=0;for(;n<this.stops.length&&e>this.stops[n].position;)n++;this.stops.splice(n,0,{position:e,value:i,mod:s})}colorAtIndex(t,e=void 0,i=void 0,s=void 0){if(t<0||t>=this.stops.length)return;let n=this.stops[t].value;return n instanceof Rt?n=n.get(e,i,s):n=n.clone(),n}dimensions(){let t=0;for(const e of this.stops)e.value instanceof Rt&&(t=Math.max(e.value.dimensions(),t));return t+1}mix(t,e,i,s=void 0,n=void 0,r=void 0){if(t<0||t>=this.stops.length||e<0||e>=this.stops.length)return;i=Math.min(Math.max(0,i),1);const o=this.colorAtIndex(t,s,n,r);if(!o)return;if(t==e)return o;const a=this.stops[e];a.mod&&(i=a.mod(i)),this.defaultMod&&(i=this.defaultMod(i));const h=this.colorAtIndex(e,s,n,r);return h&&(this.hsl?o.lerpHSL(h,i):o.lerp(h,i)),o}get(t=0,e=void 0,i=void 0,s=void 0){if(this.stops.length<1)return He;if(t<=this.stops[0].position||this.stops.length==1)return this.mix(0,0,0,e,i,s)??He;for(let n=0;n<this.stops.length-1;n++){const r=this.stops[n].position,o=this.stops[n+1].position;if(r<=t&&t<=o){const a=(t-r)/(o-r);return this.mix(n,n+1,a,e,i,s)??He}}return this.mix(this.stops.length-1,this.stops.length-1,0,e,i,s)??He}static between(t,e,i){return new Rt({between:t,min:e,max:i})}}const Ys={beach:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:1.5},colors:[[-.5,10044416],[-0,13412864],[.4,13399808],[1,8738]],seaColors:[[-1,102],[-.55,170],[-.1,62181]],seaNoise:{min:-.008,max:.008,scale:6},vegetation:{items:[{name:"Rock",density:50,minimumHeight:.1,colors:{Gray:{array:[7820612]}}},{name:"PalmTree",density:50,minimumHeight:.1,colors:{Brown:{array:[9127187,5976325]},Green:{array:[2262302,2270494]},DarkGreen:{array:[25600]}},ground:{color:2267392,radius:.1,raise:.01}}]}},forest:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:.8},tintColor:1127202,colors:[[-.5,3351040],[-0,1135890],[.4,2245649],[1,26146]],seaColors:[[-1,102],[-.52,170],[-.1,17061]],seaNoise:{min:-.005,max:.005,scale:5},vegetation:{items:[{name:"Rock",density:5,minimumHeight:.1,colors:{Gray:{array:[8947848,6381921,4276545]}}},{name:"CommonTree",density:5,minimumHeight:0},{name:"Bush",density:5,minimumHeight:0},{name:"CommonTree_Dead",density:5},{name:"PineTree",density:5},{name:"TreeStump",density:1},{name:"TreeStump_Moss",density:1},{name:"Willow",density:5},{name:"Willow_Dead",density:5},{name:"WoodLog",density:1},{name:"BirchTree",density:5},{name:"BirchTree_Dead",density:5}]}},snowForest:{noise:{min:-.05,max:.05,octaves:4,lacunarity:2,gain:{min:.1,max:.8,scale:2},warp:.3,scale:1,power:.8},tintColor:1153314,colors:[[-.5,16751103],[-0,16777215],[.4,15663103],[1,16777215]],seaColors:[[-1,8952268],[-.52,11193599],[-.1,11193599]],seaNoise:{min:-0,max:.001,scale:5},vegetation:{items:[{name:"Rock_Snow",density:5,minimumHeight:.1,colors:{Gray:{array:[8947848,6381921,4276545]}}},{name:"CommonTree_Snow",density:5,minimumHeight:0},{name:"Bush_Snow",density:5,minimumHeight:0},{name:"CommonTree_Dead_Snow",density:5},{name:"PineTree_Snow",density:5},{name:"TreeStump_Snow",density:1},{name:"TreeStump_Snow",density:1},{name:"Willow_Snow",density:5},{name:"Willow_Dead_Snow",density:5},{name:"WoodLog_Snow",density:1},{name:"BirchTree_Snow",density:5},{name:"BirchTree_Dead_Snow",density:5}]}}};class gi{constructor(t={}){if(this.subdivisions=void 0,t??={},this.points=[],t.bounds)this.boundary=t.bounds.clone();else if(t.size){const e=t.size;this.boundary=new pt(new y(-e,-e,-e),new y(e,e,e))}else if(t.min||t.max){const e=t.min||new y(-1,-1,-1),i=t.max||new y(1,1,1);this.boundary=new pt(e,i)}else if(t.points&&t.points.length>0){const e=t.points[0].clone(),i=t.points[0].clone();for(const s of t.points)e.x=Math.min(e.x,s.x),e.y=Math.min(e.y,s.y),e.z=Math.min(e.z,s.z),i.x=Math.max(i.x,s.x),i.y=Math.max(i.y,s.y),i.z=Math.max(i.z,s.z);this.boundary=new pt(e,i)}else this.boundary=new pt(new y(-1,-1,-1),new y(1,1,1));if(this.capacity=t.capacity||4,t.points)for(const e of t.points)this.insertXYZ(e.x,e.y,e.z)}subdivide(){if(this.subdivisions!=null)return;const t=new y,e=[];for(let i=0;i<2;i++)for(let s=0;s<2;s++)for(let n=0;n<2;n++){const r=this.boundary.min.clone(),o=this.boundary.max.clone();this.boundary.getSize(t),t.divideScalar(2),r.x+=i*t.x,r.y+=s*t.y,r.z+=n*t.z,o.x-=(1-i)*t.x,o.y-=(1-s)*t.y,o.z-=(1-n)*t.z,e.push(new gi({min:r,max:o,capacity:this.capacity}))}this.subdivisions=e}query(t,e=1){return this.queryBoxXYZ(t.x,t.y,t.z,e).filter(s=>s.distanceTo(t)<e)}queryXYZ(t,e,i,s){const n=new y(t,e,i);return this.query(n,s)}queryBoxXYZ(t,e,i,s){const n=new y(t-s,e-s,i-s),r=new y(t+s,e+s,i+s),o=new pt(n,r);return this.queryBox(o)}queryBox(t,e=[]){if(e??=[],!t.intersectsBox(this.boundary))return e;for(const i of this.points)t.containsPoint(i)&&e.push(i);if(this.subdivisions)for(const i of this.subdivisions)i.queryBox(t,e);return e}minDist(t,e){return this.query(t,e).length<1}insert(t,e=void 0){return this.insertPoint(t,e)}insertXYZ(t,e,i,s=void 0){return this.insertPoint(new y(t,e,i),s)}insertPoint(t,e=void 0){if(t=t.clone(),e&&(t.data=e),!this.boundary.containsPoint(t))return!1;if(this.points.length<this.capacity)return this.points.push(t),!0;{this.subdivide();let i=!1;for(const s of this.subdivisions??[])s.insertPoint(t,e)&&(i=!0);return i}}showBoxes(t,e=void 0){const i=new y;this.boundary.getSize(i);const s=new pi(i.x*2,i.y*2,i.z*2),n=new Rs(s,t||new rs({wireframe:!0}));if(this.boundary.getCenter(n.position),e??=new ct,e.add(n),this.subdivisions)for(const r of this.subdivisions)r.showBoxes(t,e);return e}show(t={}){t??={};const e=t.pointsOnly;let i=t.mat;const s=this.all(),n=new Et,r=new Float32Array(s.length*3),o=new Float32Array(s.length*3);let a;if(t.p&&t.min){for(const l of s)l.close=!1;a=this.query(t.p,t.min);for(const l of a)l.close=!0}for(let l=0;l<s.length;l++)r[l*3]=s[l].x,r[l*3+1]=s[l].y,r[l*3+2]=s[l].z,o[l*3]=s[l].close?1:.7,o[l*3+1]=s[l].close?0:.7,o[l*3+2]=s[l].close?0:.7;n.setAttribute("position",new ft(r,3)),n.setAttribute("color",new ft(o,3));const h=new Ds(n,new is({size:t.size||1,sizeAttenuation:t.sizeAttenuation||!1,vertexColors:!0}));if(e)return h;i=i||new rs({transparent:!0,opacity:.01,depthTest:!1});const c=this.showBoxes(i);return c.add(h),c}all(t=[]){t??=[];for(const e of this.points)t.push(e);if(this.subdivisions)for(const e of this.subdivisions)e.all(t);return t}}class Gs{constructor(t={}){if(this.vegetationPositions=new gi,t.preset){const e=Ys[t.preset];e&&(t={...e,...t})}this.options=t,t.noise&&(this.noise=new xt(t.noise)),t.colors&&(this.colors=new Rt(t.colors)),t.seaNoise&&(this.seaNoise=new xt(t.seaNoise)),t.seaColors&&(this.seaColors=new Rt(t.seaColors))}get min(){return this.noise?.min??-1}get max(){return this.noise?.max??1}getHeight(t){return this.noise?this.noise.get(t):0}getColor(t,e=void 0,i=0){if(this.noise&&e===void 0&&(e=this.noise.normalized(t)),this.colors){const s=this.colors.get(e);return this.options.tintColor?s.lerp(new it(this.options.tintColor),i/Math.PI):s}}getSeaHeight(t){return this.seaNoise?this.seaNoise.get(t):0}getSeaColor(t,e){if(e??=this.noise?.normalized(t)??0,this.seaColors)return this.seaColors.get(e)}addVegetation(t,e,i,s){this.vegetationPositions.insert(e,t)}closestVegetationDistance(t,e){const i=this.vegetationPositions.queryBoxXYZ(t.x,t.y,t.z,e);if(i.length===0)return;let s=1/0;for(const n of i){const r=t.distanceTo(n);r<s&&(s=r)}return s<e?s:void 0}itemsAround(t,e){return this.vegetationPositions.queryBoxXYZ(t.x,t.y,t.z,e)}maxVegetationRadius(){let t=0;for(const e of this.options.vegetation?.items??[])e.ground?.radius&&(t=Math.max(t,e.ground.radius));return t}vegetationHeightAndColorForFace(t,e,i,s,n){const r=this.maxVegetationRadius(),o=this.itemsAround(t,r+n*2);let a=0,h=0,c=0,l=[t,e,i];for(let u=0;u<3;u++){let d=l[u];for(const p of o){if(!p.data?.ground?.radius)continue;let x=d.distanceTo(p);if(x<p.data.ground?.radius){let f=Math.max(0,1-x/p.data.ground.radius);f=Math.pow(f,.5);let g=p.data.ground?.raise??0;if(g*=f,u===0&&(a+=g),u===1&&(h+=g),u===2&&(c+=g),!p.data.ground.color)continue;let b=new it(p.data.ground.color);s.lerp(b,f/3)}}}return{heightA:a,heightB:h,heightC:c,color:s}}}onmessage=function(m){const{type:t,data:e,requestId:i}=m.data;if(t==="createGeometry"){const[s,n,r]=Zs(e),o=s.getAttribute("position").array.buffer,a=s.getAttribute("color").array.buffer,h=s.getAttribute("normal").array.buffer,c=n.getAttribute("position").array.buffer,l=n.getAttribute("color").array.buffer,u=n.getAttribute("normal").array.buffer,d=n.morphAttributes.position[0].array.buffer,p=n.morphAttributes.normal[0].array.buffer;postMessage({type:"geometry",data:{positions:o,colors:a,normals:h,oceanPositions:c,oceanColors:l,oceanNormals:u,vegetation:r,oceanMorphPositions:d,oceanMorphNormals:p},requestId:i},[o,a,h,c,l,u,d,p])}else console.error("Unknown message type",t)};function Zs(m){const t=m.detail??50,e=m.shape=="plane"?new qe(3,3,t,t).toNonIndexed():new We(1,t),i=m.shape=="plane"?new qe(3,3,t,t).toNonIndexed():new We(1,t),s=new Gs(m.biome),n=e.getAttribute("position"),r=i.getAttribute("position"),o=n.count/3,a=Math.PI*4/o;console.log("faces:",o);const h=new Map,c=new Array(o),l=new Float32Array(n.count*3),u=new Float32Array(r.count*3),d=e.getAttribute("normal"),p=i.getAttribute("normal"),x=new y(0,1,0),f=new y,g=new y,b=new y,w=new y,M={};f.fromBufferAttribute(n,0),g.fromBufferAttribute(n,1);const S=f.distanceTo(g),F=(m.scatter??1.2)*S,z=100,A=new xt({min:-F/2,max:F/2,scale:z,seed:0});i.morphAttributes.position=[],i.morphAttributes.normal=[];const T=[],B=[],C=new y,E=new y,k=new y,P=new y,N=new y,H=new y,I=new y;for(let _=0;_<n.count;_+=3){if(f.fromBufferAttribute(n,_),g.fromBufferAttribute(n,_+1),b.fromBufferAttribute(n,_+2),C.fromBufferAttribute(r,_),E.fromBufferAttribute(r,_+1),k.fromBufferAttribute(r,_+2),m.shape=="plane"){let D=f.y;f.y=f.z,f.z=D,D=g.y,g.y=g.z,g.z=D,D=b.y,b.y=b.z,b.z=D,D=C.y,C.y=C.z,C.z=D,D=E.y,E.y=E.z,E.z=D,D=k.y,k.y=k.z,k.z=D;let v=f.clone();f.copy(b),b.copy(v),v=C.clone(),C.copy(k),k.copy(v)}w.set(0,0,0),w.addVectors(f,g).add(b).divideScalar(3);let R=0;for(let D=0;D<3;D++){let v=f;D===1&&(v=g),D===2&&(v=b);const dt=`${v.x.toFixed(5)},${v.y.toFixed(5)},${v.z.toFixed(5)}`;let U=h.get(dt);if(!U){const gt=s.getHeight(v),X=A.get(v),ae=A.get(v.y+z*100,v.z-z*100,v.x+z*100),he=A.get(v.z-z*200,v.x+z*200,v.y-z*200),le=s.getSeaHeight(v),ce=s.getSeaHeight(v.addScalar(100));v.subScalar(100),U={height:gt,scatter:new y(X,ae,he),seaHeight:le,seaMorph:ce},h.set(dt,U)}c[_+D]=U,R+=U.height,v.add(U.scatter),m.shape=="plane"?v.y=U.height:v.normalize().multiplyScalar(U.height+1),n.setXYZ(_+D,v.x,v.y,v.z);let q=C;D===1&&(q=E),D===2&&(q=k),q.add(U.scatter),m.shape=="plane"?q.y=U.seaMorph:q.normalize().multiplyScalar(U.seaMorph+1),T.push(q.x,q.y,q.z),D===0?(P.copy(q),q=P):D===1?(N.copy(q),q=N):D===2&&(H.copy(q),q=H),m.shape=="plane"?q.y=U.seaHeight:q.normalize().multiplyScalar(U.seaHeight+1),r.setXYZ(_+D,q.x,q.y,q.z)}R/=3,R=Math.min(-R/s.min,0)+Math.max(R/s.max,0),I.crossVectors(g.clone().sub(f),b.clone().sub(f)).normalize(),d.setXYZ(_,I.x,I.y,I.z),d.setXYZ(_+1,I.x,I.y,I.z),d.setXYZ(_+2,I.x,I.y,I.z);const O=Math.acos(Math.abs(I.dot(m.shape=="plane"?x:w))),L=s.getColor(w,R,O);L&&(l[_*3]=L.r,l[_*3+1]=L.g,l[_*3+2]=L.b,l[_*3+3]=L.r,l[_*3+4]=L.g,l[_*3+5]=L.b,l[_*3+6]=L.r,l[_*3+7]=L.g,l[_*3+8]=L.b);const V=s.getSeaColor(w,R);V&&(u[_*3]=V.r,u[_*3+1]=V.g,u[_*3+2]=V.b,u[_*3+3]=V.r,u[_*3+4]=V.g,u[_*3+5]=V.b,u[_*3+6]=V.r,u[_*3+7]=V.g,u[_*3+8]=V.b),I.crossVectors(E.clone().sub(C),k.clone().sub(C)).normalize(),p.setXYZ(_,I.x,I.y,I.z),p.setXYZ(_+1,I.x,I.y,I.z),p.setXYZ(_+2,I.x,I.y,I.z),I.crossVectors(N.clone().sub(P),H.clone().sub(P)).normalize(),B.push(I.x,I.y,I.z),B.push(I.x,I.y,I.z),B.push(I.x,I.y,I.z);for(let D=0;s.options.vegetation&&D<s.options.vegetation.items.length;D++){const v=s.options.vegetation.items[D];if(Math.random()<a*(v.density??1)){if(v.minimumHeight!==void 0&&R<v.minimumHeight||v.minimumHeight===void 0&&R<0||v.maximumHeight!==void 0&&R>v.maximumHeight||v.minimumSlope!==void 0&&O<v.minimumSlope||v.maximumSlope!==void 0&&O>v.maximumSlope)continue;M[v.name]||(M[v.name]=[]),M[v.name].push(f.clone()),m.shape=="plane"?f.y=0:f.normalize(),s.addVegetation(v,f,R,O);break}}}const j=new it;for(let _=0;_<n.count;_+=3){f.fromBufferAttribute(n,_),g.fromBufferAttribute(n,_+1),b.fromBufferAttribute(n,_+2),m.shape=="plane"?(f.y=0,g.y=0,b.y=0):(f.normalize(),g.normalize(),b.normalize()),j.setRGB(l[_*3],l[_*3+1],l[_*3+2]);const R=s.vegetationHeightAndColorForFace(f,g,b,j,S),O=c[_],L=c[_+1],V=c[_+2];m.shape=="plane"?(f.y=O.height+R.heightA,g.y=L.height+R.heightB,b.y=V.height+R.heightC):(f.normalize().multiplyScalar(O.height+R.heightA+1),g.normalize().multiplyScalar(L.height+R.heightB+1),b.normalize().multiplyScalar(V.height+R.heightC+1)),n.setXYZ(_,f.x,f.y,f.z),n.setXYZ(_+1,g.x,g.y,g.z),n.setXYZ(_+2,b.x,b.y,b.z),l[_*3]=R.color.r,l[_*3+1]=R.color.g,l[_*3+2]=R.color.b,l[_*3+3]=R.color.r,l[_*3+4]=R.color.g,l[_*3+5]=R.color.b,l[_*3+6]=R.color.r,l[_*3+7]=R.color.g,l[_*3+8]=R.color.b}return i.morphAttributes.position[0]=new rt(T,3),i.morphAttributes.normal[0]=new rt(B,3),e.setAttribute("color",new ft(l,3)),i.setAttribute("color",new ft(u,3)),[e,i,M]}})();
